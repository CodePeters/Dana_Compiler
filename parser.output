Nonterminals useless in grammar

   body


Terminals unused in grammar

   AS
   DECL


Rules useless in grammar

   50 body: BEG stmt_list END


Grammar

    0 $accept: fdef $end

    1 fdef: DEF IDENTIFIER BEG stmt_list END

    2 stmt_list: stmt
    3          | stmt_list stmt

    4 lval: IDENTIFIER
    5     | STRINGLITERAL
    6     | lval '[' expression ']'

    7 type: INT '[' CONST ']'
    8     | BYTE '[' CONST ']'
    9     | INT
   10     | BYTE

   11 stmt: SKIP
   12     | mif
   13     | loop
   14     | lval ASSIGNMENT expression
   15     | VAR lval IS type
   16     | BREAK
   17     | CONT

   18 loop: LOOP IDENTIFIER ':' BEG stmt_list END
   19     | LOOP ':' BEG stmt_list END

   20 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   21    | IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   22    | IF condition ':' BEG stmt_list END

   23 condition: expression LARGER expression
   24          | expression SMALLER expression
   25          | expression LARGEREQ expression
   26          | expression SMALLEREQ expression
   27          | expression EQ expression
   28          | expression DIFF expression
   29          | TRUE
   30          | FALSE
   31          | condition AND condition
   32          | condition OR condition
   33          | NOT condition
   34          | '(' condition ')'

   35 eliftstmt: ELSE ':' BEG stmt_list END
   36          | ELIF expression ':' BEG stmt_list END eliftstmt

   37 expression: expression '+' expression
   38           | expression '-' expression
   39           | expression '*' expression
   40           | expression '/' expression
   41           | expression '&' expression
   42           | expression '|' expression
   43           | '+' expression
   44           | '-' expression
   45           | '!' expression
   46           | IDENTIFIER
   47           | STRINGLITERAL
   48           | CONST
   49           | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 45
'&' (38) 41
'(' (40) 34 49
')' (41) 34 49
'*' (42) 39
'+' (43) 37 43
'-' (45) 38 44
'/' (47) 40
':' (58) 18 19 20 21 22 35 36
'[' (91) 6 7 8
']' (93) 6 7 8
'|' (124) 42
error (256)
IDENTIFIER (258) 1 4 18 46
INT (259) 7 9
BYTE (260) 8 10
IF (261) 20 21 22
ELSE (262) 20 35
STRINGLITERAL (263) 5 47
LOOP (264) 18 19
AS (265)
SKIP (266) 11
DECL (267)
DEF (268) 1
BEG (269) 1 18 19 20 21 22 35 36
END (270) 1 18 19 20 21 22 35 36
VAR (271) 15
IS (272) 15
EQ (273) 27
DIFF (274) 28
LARGER (275) 23
SMALLER (276) 24
LARGEREQ (277) 25
SMALLEREQ (278) 26
ASSIGNMENT (279) 14
CONST (280) 7 8 48
AND (281) 31
NOT (282) 33
OR (283) 32
ELIF (284) 21 36
TRUE (285) 29
FALSE (286) 30
BREAK (287) 16
CONT (288) 17
UNARYPL (289)
UNARYMINUS (290)
BANGBANG (291)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
fdef (50)
    on left: 1, on right: 0
stmt_list (51)
    on left: 2 3, on right: 1 3 18 19 20 21 22 35 36
lval (52)
    on left: 4 5 6, on right: 6 14 15
type (53)
    on left: 7 8 9 10, on right: 15
stmt (54)
    on left: 11 12 13 14 15 16 17, on right: 2 3
loop (55)
    on left: 18 19, on right: 13
mif (56)
    on left: 20 21 22, on right: 12
condition (57)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34, on right: 20 22 31
    32 33 34
eliftstmt (58)
    on left: 35 36, on right: 21 36
expression (59)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49, on right: 6 14
    21 23 24 25 26 27 28 36 37 38 39 40 41 42 43 44 45 49


State 0

    0 $accept: . fdef $end

    DEF  shift, and go to state 1

    fdef  go to state 2


State 1

    1 fdef: DEF . IDENTIFIER BEG stmt_list END

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: fdef . $end

    $end  shift, and go to state 4


State 3

    1 fdef: DEF IDENTIFIER . BEG stmt_list END

    BEG  shift, and go to state 5


State 4

    0 $accept: fdef $end .

    $default  accept


State 5

    1 fdef: DEF IDENTIFIER BEG . stmt_list END

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    stmt_list  go to state 14
    lval       go to state 15
    stmt       go to state 16
    loop       go to state 17
    mif        go to state 18


State 6

    4 lval: IDENTIFIER .

    $default  reduce using rule 4 (lval)


State 7

   20 mif: IF . condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   21    | IF . expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   22    | IF . condition ':' BEG stmt_list END

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    NOT            shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 27
    '!'            shift, and go to state 28

    condition   go to state 29
    expression  go to state 30


State 8

    5 lval: STRINGLITERAL .

    $default  reduce using rule 5 (lval)


State 9

   18 loop: LOOP . IDENTIFIER ':' BEG stmt_list END
   19     | LOOP . ':' BEG stmt_list END

    IDENTIFIER  shift, and go to state 31
    ':'         shift, and go to state 32


State 10

   11 stmt: SKIP .

    $default  reduce using rule 11 (stmt)


State 11

   15 stmt: VAR . lval IS type

    IDENTIFIER     shift, and go to state 6
    STRINGLITERAL  shift, and go to state 8

    lval  go to state 33


State 12

   16 stmt: BREAK .

    $default  reduce using rule 16 (stmt)


State 13

   17 stmt: CONT .

    $default  reduce using rule 17 (stmt)


State 14

    1 fdef: DEF IDENTIFIER BEG stmt_list . END
    3 stmt_list: stmt_list . stmt

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    END            shift, and go to state 34
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    lval  go to state 15
    stmt  go to state 35
    loop  go to state 17
    mif   go to state 18


State 15

    6 lval: lval . '[' expression ']'
   14 stmt: lval . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 36
    '['         shift, and go to state 37


State 16

    2 stmt_list: stmt .

    $default  reduce using rule 2 (stmt_list)


State 17

   13 stmt: loop .

    $default  reduce using rule 13 (stmt)


State 18

   12 stmt: mif .

    $default  reduce using rule 12 (stmt)


State 19

   46 expression: IDENTIFIER .

    $default  reduce using rule 46 (expression)


State 20

   47 expression: STRINGLITERAL .

    $default  reduce using rule 47 (expression)


State 21

   48 expression: CONST .

    $default  reduce using rule 48 (expression)


State 22

   33 condition: NOT . condition

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    NOT            shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 27
    '!'            shift, and go to state 28

    condition   go to state 38
    expression  go to state 39


State 23

   29 condition: TRUE .

    $default  reduce using rule 29 (condition)


State 24

   30 condition: FALSE .

    $default  reduce using rule 30 (condition)


State 25

   43 expression: '+' . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 41


State 26

   44 expression: '-' . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 42


State 27

   34 condition: '(' . condition ')'
   49 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    NOT            shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 27
    '!'            shift, and go to state 28

    condition   go to state 43
    expression  go to state 44


State 28

   45 expression: '!' . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 45


State 29

   20 mif: IF condition . ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   22    | IF condition . ':' BEG stmt_list END
   31 condition: condition . AND condition
   32          | condition . OR condition

    AND  shift, and go to state 46
    OR   shift, and go to state 47
    ':'  shift, and go to state 48


State 30

   21 mif: IF expression . ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   23 condition: expression . LARGER expression
   24          | expression . SMALLER expression
   25          | expression . LARGEREQ expression
   26          | expression . SMALLEREQ expression
   27          | expression . EQ expression
   28          | expression . DIFF expression
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    EQ         shift, and go to state 49
    DIFF       shift, and go to state 50
    LARGER     shift, and go to state 51
    SMALLER    shift, and go to state 52
    LARGEREQ   shift, and go to state 53
    SMALLEREQ  shift, and go to state 54
    '+'        shift, and go to state 55
    '-'        shift, and go to state 56
    '|'        shift, and go to state 57
    '*'        shift, and go to state 58
    '/'        shift, and go to state 59
    '&'        shift, and go to state 60
    ':'        shift, and go to state 61


State 31

   18 loop: LOOP IDENTIFIER . ':' BEG stmt_list END

    ':'  shift, and go to state 62


State 32

   19 loop: LOOP ':' . BEG stmt_list END

    BEG  shift, and go to state 63


State 33

    6 lval: lval . '[' expression ']'
   15 stmt: VAR lval . IS type

    IS   shift, and go to state 64
    '['  shift, and go to state 37


State 34

    1 fdef: DEF IDENTIFIER BEG stmt_list END .

    $default  reduce using rule 1 (fdef)


State 35

    3 stmt_list: stmt_list stmt .

    $default  reduce using rule 3 (stmt_list)


State 36

   14 stmt: lval ASSIGNMENT . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 65


State 37

    6 lval: lval '[' . expression ']'

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 66


State 38

   31 condition: condition . AND condition
   32          | condition . OR condition
   33          | NOT condition .

    $default  reduce using rule 33 (condition)


State 39

   23 condition: expression . LARGER expression
   24          | expression . SMALLER expression
   25          | expression . LARGEREQ expression
   26          | expression . SMALLEREQ expression
   27          | expression . EQ expression
   28          | expression . DIFF expression
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    EQ         shift, and go to state 49
    DIFF       shift, and go to state 50
    LARGER     shift, and go to state 51
    SMALLER    shift, and go to state 52
    LARGEREQ   shift, and go to state 53
    SMALLEREQ  shift, and go to state 54
    '+'        shift, and go to state 55
    '-'        shift, and go to state 56
    '|'        shift, and go to state 57
    '*'        shift, and go to state 58
    '/'        shift, and go to state 59
    '&'        shift, and go to state 60


State 40

   49 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 67


State 41

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression
   43           | '+' expression .

    $default  reduce using rule 43 (expression)


State 42

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression
   44           | '-' expression .

    $default  reduce using rule 44 (expression)


State 43

   31 condition: condition . AND condition
   32          | condition . OR condition
   34          | '(' condition . ')'

    AND  shift, and go to state 46
    OR   shift, and go to state 47
    ')'  shift, and go to state 68


State 44

   23 condition: expression . LARGER expression
   24          | expression . SMALLER expression
   25          | expression . LARGEREQ expression
   26          | expression . SMALLEREQ expression
   27          | expression . EQ expression
   28          | expression . DIFF expression
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression
   49           | '(' expression . ')'

    EQ         shift, and go to state 49
    DIFF       shift, and go to state 50
    LARGER     shift, and go to state 51
    SMALLER    shift, and go to state 52
    LARGEREQ   shift, and go to state 53
    SMALLEREQ  shift, and go to state 54
    '+'        shift, and go to state 55
    '-'        shift, and go to state 56
    '|'        shift, and go to state 57
    '*'        shift, and go to state 58
    '/'        shift, and go to state 59
    '&'        shift, and go to state 60
    ')'        shift, and go to state 69


State 45

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression
   45           | '!' expression .

    $default  reduce using rule 45 (expression)


State 46

   31 condition: condition AND . condition

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    NOT            shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 27
    '!'            shift, and go to state 28

    condition   go to state 70
    expression  go to state 39


State 47

   32 condition: condition OR . condition

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    NOT            shift, and go to state 22
    TRUE           shift, and go to state 23
    FALSE          shift, and go to state 24
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 27
    '!'            shift, and go to state 28

    condition   go to state 71
    expression  go to state 39


State 48

   20 mif: IF condition ':' . BEG stmt_list END ELSE ':' BEG stmt_list END
   22    | IF condition ':' . BEG stmt_list END

    BEG  shift, and go to state 72


State 49

   27 condition: expression EQ . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 73


State 50

   28 condition: expression DIFF . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 74


State 51

   23 condition: expression LARGER . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 75


State 52

   24 condition: expression SMALLER . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 76


State 53

   25 condition: expression LARGEREQ . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 77


State 54

   26 condition: expression SMALLEREQ . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 78


State 55

   37 expression: expression '+' . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 79


State 56

   38 expression: expression '-' . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 80


State 57

   42 expression: expression '|' . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 81


State 58

   39 expression: expression '*' . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 82


State 59

   40 expression: expression '/' . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 83


State 60

   41 expression: expression '&' . expression

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 84


State 61

   21 mif: IF expression ':' . BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt

    BEG  shift, and go to state 85


State 62

   18 loop: LOOP IDENTIFIER ':' . BEG stmt_list END

    BEG  shift, and go to state 86


State 63

   19 loop: LOOP ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    stmt_list  go to state 87
    lval       go to state 15
    stmt       go to state 16
    loop       go to state 17
    mif        go to state 18


State 64

   15 stmt: VAR lval IS . type

    INT   shift, and go to state 88
    BYTE  shift, and go to state 89

    type  go to state 90


State 65

   14 stmt: lval ASSIGNMENT expression .
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    '+'  shift, and go to state 55
    '-'  shift, and go to state 56
    '|'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '&'  shift, and go to state 60

    $default  reduce using rule 14 (stmt)


State 66

    6 lval: lval '[' expression . ']'
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    '+'  shift, and go to state 55
    '-'  shift, and go to state 56
    '|'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '&'  shift, and go to state 60
    ']'  shift, and go to state 91


State 67

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression
   49           | '(' expression . ')'

    '+'  shift, and go to state 55
    '-'  shift, and go to state 56
    '|'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '&'  shift, and go to state 60
    ')'  shift, and go to state 69


State 68

   34 condition: '(' condition ')' .

    $default  reduce using rule 34 (condition)


State 69

   49 expression: '(' expression ')' .

    $default  reduce using rule 49 (expression)


State 70

   31 condition: condition . AND condition
   31          | condition AND condition .
   32          | condition . OR condition

    $default  reduce using rule 31 (condition)


State 71

   31 condition: condition . AND condition
   32          | condition . OR condition
   32          | condition OR condition .

    AND  shift, and go to state 46

    $default  reduce using rule 32 (condition)


State 72

   20 mif: IF condition ':' BEG . stmt_list END ELSE ':' BEG stmt_list END
   22    | IF condition ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    stmt_list  go to state 92
    lval       go to state 15
    stmt       go to state 16
    loop       go to state 17
    mif        go to state 18


State 73

   27 condition: expression EQ expression .
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    '+'  shift, and go to state 55
    '-'  shift, and go to state 56
    '|'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '&'  shift, and go to state 60

    $default  reduce using rule 27 (condition)


State 74

   28 condition: expression DIFF expression .
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    '+'  shift, and go to state 55
    '-'  shift, and go to state 56
    '|'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '&'  shift, and go to state 60

    $default  reduce using rule 28 (condition)


State 75

   23 condition: expression LARGER expression .
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    '+'  shift, and go to state 55
    '-'  shift, and go to state 56
    '|'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '&'  shift, and go to state 60

    $default  reduce using rule 23 (condition)


State 76

   24 condition: expression SMALLER expression .
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    '+'  shift, and go to state 55
    '-'  shift, and go to state 56
    '|'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '&'  shift, and go to state 60

    $default  reduce using rule 24 (condition)


State 77

   25 condition: expression LARGEREQ expression .
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    '+'  shift, and go to state 55
    '-'  shift, and go to state 56
    '|'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '&'  shift, and go to state 60

    $default  reduce using rule 25 (condition)


State 78

   26 condition: expression SMALLEREQ expression .
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    '+'  shift, and go to state 55
    '-'  shift, and go to state 56
    '|'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '&'  shift, and go to state 60

    $default  reduce using rule 26 (condition)


State 79

   37 expression: expression . '+' expression
   37           | expression '+' expression .
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '&'  shift, and go to state 60

    $default  reduce using rule 37 (expression)


State 80

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   38           | expression '-' expression .
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '&'  shift, and go to state 60

    $default  reduce using rule 38 (expression)


State 81

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression
   42           | expression '|' expression .

    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '&'  shift, and go to state 60

    $default  reduce using rule 42 (expression)


State 82

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   39           | expression '*' expression .
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    $default  reduce using rule 39 (expression)


State 83

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   40           | expression '/' expression .
   41           | expression . '&' expression
   42           | expression . '|' expression

    $default  reduce using rule 40 (expression)


State 84

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   41           | expression '&' expression .
   42           | expression . '|' expression

    $default  reduce using rule 41 (expression)


State 85

   21 mif: IF expression ':' BEG . stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    stmt_list  go to state 93
    lval       go to state 15
    stmt       go to state 16
    loop       go to state 17
    mif        go to state 18


State 86

   18 loop: LOOP IDENTIFIER ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    stmt_list  go to state 94
    lval       go to state 15
    stmt       go to state 16
    loop       go to state 17
    mif        go to state 18


State 87

    3 stmt_list: stmt_list . stmt
   19 loop: LOOP ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    END            shift, and go to state 95
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    lval  go to state 15
    stmt  go to state 35
    loop  go to state 17
    mif   go to state 18


State 88

    7 type: INT . '[' CONST ']'
    9     | INT .

    '['  shift, and go to state 96

    $default  reduce using rule 9 (type)


State 89

    8 type: BYTE . '[' CONST ']'
   10     | BYTE .

    '['  shift, and go to state 97

    $default  reduce using rule 10 (type)


State 90

   15 stmt: VAR lval IS type .

    $default  reduce using rule 15 (stmt)


State 91

    6 lval: lval '[' expression ']' .

    $default  reduce using rule 6 (lval)


State 92

    3 stmt_list: stmt_list . stmt
   20 mif: IF condition ':' BEG stmt_list . END ELSE ':' BEG stmt_list END
   22    | IF condition ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    END            shift, and go to state 98
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    lval  go to state 15
    stmt  go to state 35
    loop  go to state 17
    mif   go to state 18


State 93

    3 stmt_list: stmt_list . stmt
   21 mif: IF expression ':' BEG stmt_list . END ELIF expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    END            shift, and go to state 99
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    lval  go to state 15
    stmt  go to state 35
    loop  go to state 17
    mif   go to state 18


State 94

    3 stmt_list: stmt_list . stmt
   18 loop: LOOP IDENTIFIER ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    END            shift, and go to state 100
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    lval  go to state 15
    stmt  go to state 35
    loop  go to state 17
    mif   go to state 18


State 95

   19 loop: LOOP ':' BEG stmt_list END .

    $default  reduce using rule 19 (loop)


State 96

    7 type: INT '[' . CONST ']'

    CONST  shift, and go to state 101


State 97

    8 type: BYTE '[' . CONST ']'

    CONST  shift, and go to state 102


State 98

   20 mif: IF condition ':' BEG stmt_list END . ELSE ':' BEG stmt_list END
   22    | IF condition ':' BEG stmt_list END .

    ELSE  shift, and go to state 103

    $default  reduce using rule 22 (mif)


State 99

   21 mif: IF expression ':' BEG stmt_list END . ELIF expression ':' BEG stmt_list END eliftstmt

    ELIF  shift, and go to state 104


State 100

   18 loop: LOOP IDENTIFIER ':' BEG stmt_list END .

    $default  reduce using rule 18 (loop)


State 101

    7 type: INT '[' CONST . ']'

    ']'  shift, and go to state 105


State 102

    8 type: BYTE '[' CONST . ']'

    ']'  shift, and go to state 106


State 103

   20 mif: IF condition ':' BEG stmt_list END ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 107


State 104

   21 mif: IF expression ':' BEG stmt_list END ELIF . expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 108


State 105

    7 type: INT '[' CONST ']' .

    $default  reduce using rule 7 (type)


State 106

    8 type: BYTE '[' CONST ']' .

    $default  reduce using rule 8 (type)


State 107

   20 mif: IF condition ':' BEG stmt_list END ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 109


State 108

   21 mif: IF expression ':' BEG stmt_list END ELIF expression . ':' BEG stmt_list END eliftstmt
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    '+'  shift, and go to state 55
    '-'  shift, and go to state 56
    '|'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '&'  shift, and go to state 60
    ':'  shift, and go to state 110


State 109

   20 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    stmt_list  go to state 111
    lval       go to state 15
    stmt       go to state 16
    loop       go to state 17
    mif        go to state 18


State 110

   21 mif: IF expression ':' BEG stmt_list END ELIF expression ':' . BEG stmt_list END eliftstmt

    BEG  shift, and go to state 112


State 111

    3 stmt_list: stmt_list . stmt
   20 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    END            shift, and go to state 113
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    lval  go to state 15
    stmt  go to state 35
    loop  go to state 17
    mif   go to state 18


State 112

   21 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    stmt_list  go to state 114
    lval       go to state 15
    stmt       go to state 16
    loop       go to state 17
    mif        go to state 18


State 113

   20 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END .

    $default  reduce using rule 20 (mif)


State 114

    3 stmt_list: stmt_list . stmt
   21 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    END            shift, and go to state 115
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    lval  go to state 15
    stmt  go to state 35
    loop  go to state 17
    mif   go to state 18


State 115

   21 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END . eliftstmt

    ELSE  shift, and go to state 116
    ELIF  shift, and go to state 117

    eliftstmt  go to state 118


State 116

   35 eliftstmt: ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 119


State 117

   36 eliftstmt: ELIF . expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20
    CONST          shift, and go to state 21
    '+'            shift, and go to state 25
    '-'            shift, and go to state 26
    '('            shift, and go to state 40
    '!'            shift, and go to state 28

    expression  go to state 120


State 118

   21 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt .

    $default  reduce using rule 21 (mif)


State 119

   35 eliftstmt: ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 121


State 120

   36 eliftstmt: ELIF expression . ':' BEG stmt_list END eliftstmt
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '*' expression
   40           | expression . '/' expression
   41           | expression . '&' expression
   42           | expression . '|' expression

    '+'  shift, and go to state 55
    '-'  shift, and go to state 56
    '|'  shift, and go to state 57
    '*'  shift, and go to state 58
    '/'  shift, and go to state 59
    '&'  shift, and go to state 60
    ':'  shift, and go to state 122


State 121

   35 eliftstmt: ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    stmt_list  go to state 123
    lval       go to state 15
    stmt       go to state 16
    loop       go to state 17
    mif        go to state 18


State 122

   36 eliftstmt: ELIF expression ':' . BEG stmt_list END eliftstmt

    BEG  shift, and go to state 124


State 123

    3 stmt_list: stmt_list . stmt
   35 eliftstmt: ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    END            shift, and go to state 125
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    lval  go to state 15
    stmt  go to state 35
    loop  go to state 17
    mif   go to state 18


State 124

   36 eliftstmt: ELIF expression ':' BEG . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    stmt_list  go to state 126
    lval       go to state 15
    stmt       go to state 16
    loop       go to state 17
    mif        go to state 18


State 125

   35 eliftstmt: ELSE ':' BEG stmt_list END .

    $default  reduce using rule 35 (eliftstmt)


State 126

    3 stmt_list: stmt_list . stmt
   36 eliftstmt: ELIF expression ':' BEG stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 6
    IF             shift, and go to state 7
    STRINGLITERAL  shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    END            shift, and go to state 127
    VAR            shift, and go to state 11
    BREAK          shift, and go to state 12
    CONT           shift, and go to state 13

    lval  go to state 15
    stmt  go to state 35
    loop  go to state 17
    mif   go to state 18


State 127

   36 eliftstmt: ELIF expression ':' BEG stmt_list END . eliftstmt

    ELSE  shift, and go to state 116
    ELIF  shift, and go to state 117

    eliftstmt  go to state 128


State 128

   36 eliftstmt: ELIF expression ':' BEG stmt_list END eliftstmt .

    $default  reduce using rule 36 (eliftstmt)
