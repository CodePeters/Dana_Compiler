Terminals unused in grammar

   TEOF
   BEG


State 71 conflicts: 1 shift/reduce


Grammar

    0 $accept: main $end

    1 main: fdef

    2 fdef: DEF header stmt_list END

    3 fdecl: DECL header

    4 header: IDENTIFIER opt
    5       | IDENTIFIER ':' optparam
    6       | IDENTIFIER

    7 opt: IS type ':' optparam
    8    | IS type

    9 optparam: idlist AS ftype
   10         | idlist AS ftype ',' optparam

   11 ftype: REF INT
   12      | REF BYTE
   13      | bp
   14      | INT
   15      | BYTE

   16 bp: INT '[' ']'
   17   | BYTE '[' ']'
   18   | INT '[' CONST ']'
   19   | BYTE '[' CONST ']'
   20   | bp '[' CONST ']'

   21 stmt_list: stmt
   22          | stmt_list stmt

   23 type: INT
   24     | BYTE
   25     | type '[' CONST ']'

   26 pc: IDENTIFIER ':' param
   27   | IDENTIFIER

   28 param: expression ',' param
   29      | expression

   30 stmt: SKIP
   31     | pc
   32     | mif
   33     | fdef
   34     | loop
   35     | lval ASSIGNMENT expression
   36     | VAR idlist IS type
   37     | BREAK
   38     | BREAK ':' IDENTIFIER
   39     | CONT
   40     | CONT ':' IDENTIFIER
   41     | fdecl
   42     | EXIT
   43     | RETURN ':' expression
   44     | fcall

   45 fcall: IDENTIFIER '(' param ')'
   46      | IDENTIFIER '(' ')'

   47 idlist: IDENTIFIER
   48       | IDENTIFIER idlist

   49 loop: LOOP IDENTIFIER ':' stmt_list END
   50     | LOOP ':' stmt_list END

   51 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END
   52    | IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition ':' stmt_list END

   54 condition: expression LARGER expression
   55          | expression SMALLER expression
   56          | expression LARGEREQ expression
   57          | expression SMALLEREQ expression
   58          | expression EQ expression
   59          | expression DIFF expression
   60          | TRUE
   61          | FALSE
   62          | condition AND condition
   63          | condition OR condition
   64          | NOT condition
   65          | '(' condition ')'
   66          | expression

   67 eliftstmt: ELSE ':' stmt_list END
   68          | ELIF condition ':' stmt_list END eliftstmt

   69 expression: expression '+' expression
   70           | expression '-' expression
   71           | expression '*' expression
   72           | expression '/' expression
   73           | expression '&' expression
   74           | expression '|' expression
   75           | '+' expression
   76           | '-' expression
   77           | '!' expression
   78           | lval
   79           | CONST
   80           | '(' expression ')'
   81           | fcall

   82 lval: IDENTIFIER
   83     | STRINGLITERAL
   84     | lval '[' expression ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 77
'&' (38) 73
'(' (40) 45 46 65 80
')' (41) 45 46 65 80
'*' (42) 71
'+' (43) 69 75
',' (44) 10 28
'-' (45) 70 76
'/' (47) 72
':' (58) 5 7 26 38 40 43 49 50 51 52 53 67 68
'[' (91) 16 17 18 19 20 25 84
']' (93) 16 17 18 19 20 25 84
'|' (124) 74
error (256)
INT (258) 11 14 16 18 23
BYTE (259) 12 15 17 19 24
IF (260) 51 52 53
ELSE (261) 51 67
LOOP (262) 49 50
AS (263) 9 10
SKIP (264) 30
DECL (265) 3
DEF (266) 2
END (267) 2 49 50 51 52 53 67 68
VAR (268) 36
IS (269) 7 8 36
TEOF (270)
EQ (271) 58
DIFF (272) 59
LARGER (273) 54
SMALLER (274) 55
RETURN (275) 43
EXIT (276) 42
REF (277) 11 12
LARGEREQ (278) 56
SMALLEREQ (279) 57
ASSIGNMENT (280) 35
AND (281) 62
NOT (282) 64
OR (283) 63
ELIF (284) 52 68
TRUE (285) 60
FALSE (286) 61
BREAK (287) 37 38
CONT (288) 39 40
BEG (289)
CONST (290) 18 19 20 25 79
IDENTIFIER (291) 4 5 6 26 27 38 40 45 46 47 48 49 82
STRINGLITERAL (292) 83
UNARYPL (293)
UNARYMINUS (294)
BANGBANG (295)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
main (55)
    on left: 1, on right: 0
fdef (56)
    on left: 2, on right: 1 33
fdecl (57)
    on left: 3, on right: 41
header (58)
    on left: 4 5 6, on right: 2 3
opt (59)
    on left: 7 8, on right: 4
optparam (60)
    on left: 9 10, on right: 5 7 10
ftype (61)
    on left: 11 12 13 14 15, on right: 9 10
bp (62)
    on left: 16 17 18 19 20, on right: 13 20
stmt_list (63)
    on left: 21 22, on right: 2 22 49 50 51 52 53 67 68
type (64)
    on left: 23 24 25, on right: 7 8 25 36
pc (65)
    on left: 26 27, on right: 31
param (66)
    on left: 28 29, on right: 26 28 45
stmt (67)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44, on right:
    21 22
fcall (68)
    on left: 45 46, on right: 44 81
idlist (69)
    on left: 47 48, on right: 9 10 36 48
loop (70)
    on left: 49 50, on right: 34
mif (71)
    on left: 51 52 53, on right: 32
condition (72)
    on left: 54 55 56 57 58 59 60 61 62 63 64 65 66, on right: 51 52
    53 62 63 64 65 68
eliftstmt (73)
    on left: 67 68, on right: 52 68
expression (74)
    on left: 69 70 71 72 73 74 75 76 77 78 79 80 81, on right: 28 29
    35 43 54 55 56 57 58 59 66 69 70 71 72 73 74 75 76 77 80 84
lval (75)
    on left: 82 83 84, on right: 35 78 84


State 0

    0 $accept: . main $end

    DEF  shift, and go to state 1

    main  go to state 2
    fdef  go to state 3


State 1

    2 fdef: DEF . header stmt_list END

    IDENTIFIER  shift, and go to state 4

    header  go to state 5


State 2

    0 $accept: main . $end

    $end  shift, and go to state 6


State 3

    1 main: fdef .

    $default  reduce using rule 1 (main)


State 4

    4 header: IDENTIFIER . opt
    5       | IDENTIFIER . ':' optparam
    6       | IDENTIFIER .

    IS   shift, and go to state 7
    ':'  shift, and go to state 8

    $default  reduce using rule 6 (header)

    opt  go to state 9


State 5

    2 fdef: DEF header . stmt_list END

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28
    lval       go to state 29


State 6

    0 $accept: main $end .

    $default  accept


State 7

    7 opt: IS . type ':' optparam
    8    | IS . type

    INT   shift, and go to state 30
    BYTE  shift, and go to state 31

    type  go to state 32


State 8

    5 header: IDENTIFIER ':' . optparam

    IDENTIFIER  shift, and go to state 33

    optparam  go to state 34
    idlist    go to state 35


State 9

    4 header: IDENTIFIER opt .

    $default  reduce using rule 4 (header)


State 10

   51 mif: IF . condition ':' stmt_list END ELSE ':' stmt_list END
   52    | IF . condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   53    | IF . condition ':' stmt_list END

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    fcall       go to state 45
    condition   go to state 46
    expression  go to state 47
    lval        go to state 48


State 11

   49 loop: LOOP . IDENTIFIER ':' stmt_list END
   50     | LOOP . ':' stmt_list END

    IDENTIFIER  shift, and go to state 49
    ':'         shift, and go to state 50


State 12

   30 stmt: SKIP .

    $default  reduce using rule 30 (stmt)


State 13

    3 fdecl: DECL . header

    IDENTIFIER  shift, and go to state 4

    header  go to state 51


State 14

   36 stmt: VAR . idlist IS type

    IDENTIFIER  shift, and go to state 33

    idlist  go to state 52


State 15

   43 stmt: RETURN . ':' expression

    ':'  shift, and go to state 53


State 16

   42 stmt: EXIT .

    $default  reduce using rule 42 (stmt)


State 17

   37 stmt: BREAK .
   38     | BREAK . ':' IDENTIFIER

    ':'  shift, and go to state 54

    $default  reduce using rule 37 (stmt)


State 18

   39 stmt: CONT .
   40     | CONT . ':' IDENTIFIER

    ':'  shift, and go to state 55

    $default  reduce using rule 39 (stmt)


State 19

   26 pc: IDENTIFIER . ':' param
   27   | IDENTIFIER .
   45 fcall: IDENTIFIER . '(' param ')'
   46      | IDENTIFIER . '(' ')'
   82 lval: IDENTIFIER .

    ':'  shift, and go to state 56
    '('  shift, and go to state 57

    ASSIGNMENT  reduce using rule 82 (lval)
    '['         reduce using rule 82 (lval)
    $default    reduce using rule 27 (pc)


State 20

   83 lval: STRINGLITERAL .

    $default  reduce using rule 83 (lval)


State 21

   33 stmt: fdef .

    $default  reduce using rule 33 (stmt)


State 22

   41 stmt: fdecl .

    $default  reduce using rule 41 (stmt)


State 23

    2 fdef: DEF header stmt_list . END
   22 stmt_list: stmt_list . stmt

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    END            shift, and go to state 58
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    pc     go to state 24
    stmt   go to state 59
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28
    lval   go to state 29


State 24

   31 stmt: pc .

    $default  reduce using rule 31 (stmt)


State 25

   21 stmt_list: stmt .

    $default  reduce using rule 21 (stmt_list)


State 26

   44 stmt: fcall .

    $default  reduce using rule 44 (stmt)


State 27

   34 stmt: loop .

    $default  reduce using rule 34 (stmt)


State 28

   32 stmt: mif .

    $default  reduce using rule 32 (stmt)


State 29

   35 stmt: lval . ASSIGNMENT expression
   84 lval: lval . '[' expression ']'

    ASSIGNMENT  shift, and go to state 60
    '['         shift, and go to state 61


State 30

   23 type: INT .

    $default  reduce using rule 23 (type)


State 31

   24 type: BYTE .

    $default  reduce using rule 24 (type)


State 32

    7 opt: IS type . ':' optparam
    8    | IS type .
   25 type: type . '[' CONST ']'

    ':'  shift, and go to state 62
    '['  shift, and go to state 63

    $default  reduce using rule 8 (opt)


State 33

   47 idlist: IDENTIFIER .
   48       | IDENTIFIER . idlist

    IDENTIFIER  shift, and go to state 33

    $default  reduce using rule 47 (idlist)

    idlist  go to state 64


State 34

    5 header: IDENTIFIER ':' optparam .

    $default  reduce using rule 5 (header)


State 35

    9 optparam: idlist . AS ftype
   10         | idlist . AS ftype ',' optparam

    AS  shift, and go to state 65


State 36

   64 condition: NOT . condition

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    fcall       go to state 45
    condition   go to state 66
    expression  go to state 47
    lval        go to state 48


State 37

   60 condition: TRUE .

    $default  reduce using rule 60 (condition)


State 38

   61 condition: FALSE .

    $default  reduce using rule 61 (condition)


State 39

   79 expression: CONST .

    $default  reduce using rule 79 (expression)


State 40

   45 fcall: IDENTIFIER . '(' param ')'
   46      | IDENTIFIER . '(' ')'
   82 lval: IDENTIFIER .

    '('  shift, and go to state 57

    $default  reduce using rule 82 (lval)


State 41

   75 expression: '+' . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 68
    lval        go to state 48


State 42

   76 expression: '-' . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 69
    lval        go to state 48


State 43

   65 condition: '(' . condition ')'
   80 expression: '(' . expression ')'

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    fcall       go to state 45
    condition   go to state 70
    expression  go to state 71
    lval        go to state 48


State 44

   77 expression: '!' . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 72
    lval        go to state 48


State 45

   81 expression: fcall .

    $default  reduce using rule 81 (expression)


State 46

   51 mif: IF condition . ':' stmt_list END ELSE ':' stmt_list END
   52    | IF condition . ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition . ':' stmt_list END
   62 condition: condition . AND condition
   63          | condition . OR condition

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ':'  shift, and go to state 75


State 47

   54 condition: expression . LARGER expression
   55          | expression . SMALLER expression
   56          | expression . LARGEREQ expression
   57          | expression . SMALLEREQ expression
   58          | expression . EQ expression
   59          | expression . DIFF expression
   66          | expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    EQ         shift, and go to state 76
    DIFF       shift, and go to state 77
    LARGER     shift, and go to state 78
    SMALLER    shift, and go to state 79
    LARGEREQ   shift, and go to state 80
    SMALLEREQ  shift, and go to state 81
    '+'        shift, and go to state 82
    '-'        shift, and go to state 83
    '|'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '&'        shift, and go to state 87

    $default  reduce using rule 66 (condition)


State 48

   78 expression: lval .
   84 lval: lval . '[' expression ']'

    '['  shift, and go to state 61

    $default  reduce using rule 78 (expression)


State 49

   49 loop: LOOP IDENTIFIER . ':' stmt_list END

    ':'  shift, and go to state 88


State 50

   50 loop: LOOP ':' . stmt_list END

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 89
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28
    lval       go to state 29


State 51

    3 fdecl: DECL header .

    $default  reduce using rule 3 (fdecl)


State 52

   36 stmt: VAR idlist . IS type

    IS  shift, and go to state 90


State 53

   43 stmt: RETURN ':' . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 91
    lval        go to state 48


State 54

   38 stmt: BREAK ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 92


State 55

   40 stmt: CONT ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 93


State 56

   26 pc: IDENTIFIER ':' . param

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    param       go to state 94
    fcall       go to state 45
    expression  go to state 95
    lval        go to state 48


State 57

   45 fcall: IDENTIFIER '(' . param ')'
   46      | IDENTIFIER '(' . ')'

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    ')'            shift, and go to state 96
    '!'            shift, and go to state 44

    param       go to state 97
    fcall       go to state 45
    expression  go to state 95
    lval        go to state 48


State 58

    2 fdef: DEF header stmt_list END .

    $default  reduce using rule 2 (fdef)


State 59

   22 stmt_list: stmt_list stmt .

    $default  reduce using rule 22 (stmt_list)


State 60

   35 stmt: lval ASSIGNMENT . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 98
    lval        go to state 48


State 61

   84 lval: lval '[' . expression ']'

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 99
    lval        go to state 48


State 62

    7 opt: IS type ':' . optparam

    IDENTIFIER  shift, and go to state 33

    optparam  go to state 100
    idlist    go to state 35


State 63

   25 type: type '[' . CONST ']'

    CONST  shift, and go to state 101


State 64

   48 idlist: IDENTIFIER idlist .

    $default  reduce using rule 48 (idlist)


State 65

    9 optparam: idlist AS . ftype
   10         | idlist AS . ftype ',' optparam

    INT   shift, and go to state 102
    BYTE  shift, and go to state 103
    REF   shift, and go to state 104

    ftype  go to state 105
    bp     go to state 106


State 66

   62 condition: condition . AND condition
   63          | condition . OR condition
   64          | NOT condition .

    $default  reduce using rule 64 (condition)


State 67

   80 expression: '(' . expression ')'

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 107
    lval        go to state 48


State 68

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   75           | '+' expression .

    $default  reduce using rule 75 (expression)


State 69

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   76           | '-' expression .

    $default  reduce using rule 76 (expression)


State 70

   62 condition: condition . AND condition
   63          | condition . OR condition
   65          | '(' condition . ')'

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ')'  shift, and go to state 108


State 71

   54 condition: expression . LARGER expression
   55          | expression . SMALLER expression
   56          | expression . LARGEREQ expression
   57          | expression . SMALLEREQ expression
   58          | expression . EQ expression
   59          | expression . DIFF expression
   66          | expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   80           | '(' expression . ')'

    EQ         shift, and go to state 76
    DIFF       shift, and go to state 77
    LARGER     shift, and go to state 78
    SMALLER    shift, and go to state 79
    LARGEREQ   shift, and go to state 80
    SMALLEREQ  shift, and go to state 81
    '+'        shift, and go to state 82
    '-'        shift, and go to state 83
    '|'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '&'        shift, and go to state 87
    ')'        shift, and go to state 109

    ')'       [reduce using rule 66 (condition)]
    $default  reduce using rule 66 (condition)


State 72

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   77           | '!' expression .

    $default  reduce using rule 77 (expression)


State 73

   62 condition: condition AND . condition

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    fcall       go to state 45
    condition   go to state 110
    expression  go to state 47
    lval        go to state 48


State 74

   63 condition: condition OR . condition

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    fcall       go to state 45
    condition   go to state 111
    expression  go to state 47
    lval        go to state 48


State 75

   51 mif: IF condition ':' . stmt_list END ELSE ':' stmt_list END
   52    | IF condition ':' . stmt_list END ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition ':' . stmt_list END

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 112
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28
    lval       go to state 29


State 76

   58 condition: expression EQ . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 113
    lval        go to state 48


State 77

   59 condition: expression DIFF . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 114
    lval        go to state 48


State 78

   54 condition: expression LARGER . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 115
    lval        go to state 48


State 79

   55 condition: expression SMALLER . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 116
    lval        go to state 48


State 80

   56 condition: expression LARGEREQ . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 117
    lval        go to state 48


State 81

   57 condition: expression SMALLEREQ . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 118
    lval        go to state 48


State 82

   69 expression: expression '+' . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 119
    lval        go to state 48


State 83

   70 expression: expression '-' . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 120
    lval        go to state 48


State 84

   74 expression: expression '|' . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 121
    lval        go to state 48


State 85

   71 expression: expression '*' . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 122
    lval        go to state 48


State 86

   72 expression: expression '/' . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 123
    lval        go to state 48


State 87

   73 expression: expression '&' . expression

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 124
    lval        go to state 48


State 88

   49 loop: LOOP IDENTIFIER ':' . stmt_list END

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 125
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28
    lval       go to state 29


State 89

   22 stmt_list: stmt_list . stmt
   50 loop: LOOP ':' stmt_list . END

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    END            shift, and go to state 126
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    pc     go to state 24
    stmt   go to state 59
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28
    lval   go to state 29


State 90

   36 stmt: VAR idlist IS . type

    INT   shift, and go to state 30
    BYTE  shift, and go to state 31

    type  go to state 127


State 91

   43 stmt: RETURN ':' expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 43 (stmt)


State 92

   38 stmt: BREAK ':' IDENTIFIER .

    $default  reduce using rule 38 (stmt)


State 93

   40 stmt: CONT ':' IDENTIFIER .

    $default  reduce using rule 40 (stmt)


State 94

   26 pc: IDENTIFIER ':' param .

    $default  reduce using rule 26 (pc)


State 95

   28 param: expression . ',' param
   29      | expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87
    ','  shift, and go to state 128

    $default  reduce using rule 29 (param)


State 96

   46 fcall: IDENTIFIER '(' ')' .

    $default  reduce using rule 46 (fcall)


State 97

   45 fcall: IDENTIFIER '(' param . ')'

    ')'  shift, and go to state 129


State 98

   35 stmt: lval ASSIGNMENT expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 35 (stmt)


State 99

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   84 lval: lval '[' expression . ']'

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87
    ']'  shift, and go to state 130


State 100

    7 opt: IS type ':' optparam .

    $default  reduce using rule 7 (opt)


State 101

   25 type: type '[' CONST . ']'

    ']'  shift, and go to state 131


State 102

   14 ftype: INT .
   16 bp: INT . '[' ']'
   18   | INT . '[' CONST ']'

    '['  shift, and go to state 132

    $default  reduce using rule 14 (ftype)


State 103

   15 ftype: BYTE .
   17 bp: BYTE . '[' ']'
   19   | BYTE . '[' CONST ']'

    '['  shift, and go to state 133

    $default  reduce using rule 15 (ftype)


State 104

   11 ftype: REF . INT
   12      | REF . BYTE

    INT   shift, and go to state 134
    BYTE  shift, and go to state 135


State 105

    9 optparam: idlist AS ftype .
   10         | idlist AS ftype . ',' optparam

    ','  shift, and go to state 136

    $default  reduce using rule 9 (optparam)


State 106

   13 ftype: bp .
   20 bp: bp . '[' CONST ']'

    '['  shift, and go to state 137

    $default  reduce using rule 13 (ftype)


State 107

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   80           | '(' expression . ')'

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87
    ')'  shift, and go to state 109


State 108

   65 condition: '(' condition ')' .

    $default  reduce using rule 65 (condition)


State 109

   80 expression: '(' expression ')' .

    $default  reduce using rule 80 (expression)


State 110

   62 condition: condition . AND condition
   62          | condition AND condition .
   63          | condition . OR condition

    $default  reduce using rule 62 (condition)


State 111

   62 condition: condition . AND condition
   63          | condition . OR condition
   63          | condition OR condition .

    AND  shift, and go to state 73

    $default  reduce using rule 63 (condition)


State 112

   22 stmt_list: stmt_list . stmt
   51 mif: IF condition ':' stmt_list . END ELSE ':' stmt_list END
   52    | IF condition ':' stmt_list . END ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition ':' stmt_list . END

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    END            shift, and go to state 138
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    pc     go to state 24
    stmt   go to state 59
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28
    lval   go to state 29


State 113

   58 condition: expression EQ expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 58 (condition)


State 114

   59 condition: expression DIFF expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 59 (condition)


State 115

   54 condition: expression LARGER expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 54 (condition)


State 116

   55 condition: expression SMALLER expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 55 (condition)


State 117

   56 condition: expression LARGEREQ expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 56 (condition)


State 118

   57 condition: expression SMALLEREQ expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 57 (condition)


State 119

   69 expression: expression . '+' expression
   69           | expression '+' expression .
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 69 (expression)


State 120

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   70           | expression '-' expression .
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 70 (expression)


State 121

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   74           | expression '|' expression .

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 74 (expression)


State 122

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   71           | expression '*' expression .
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    $default  reduce using rule 71 (expression)


State 123

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   72           | expression '/' expression .
   73           | expression . '&' expression
   74           | expression . '|' expression

    $default  reduce using rule 72 (expression)


State 124

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   73           | expression '&' expression .
   74           | expression . '|' expression

    $default  reduce using rule 73 (expression)


State 125

   22 stmt_list: stmt_list . stmt
   49 loop: LOOP IDENTIFIER ':' stmt_list . END

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    END            shift, and go to state 139
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    pc     go to state 24
    stmt   go to state 59
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28
    lval   go to state 29


State 126

   50 loop: LOOP ':' stmt_list END .

    $default  reduce using rule 50 (loop)


State 127

   25 type: type . '[' CONST ']'
   36 stmt: VAR idlist IS type .

    '['  shift, and go to state 63

    $default  reduce using rule 36 (stmt)


State 128

   28 param: expression ',' . param

    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    param       go to state 140
    fcall       go to state 45
    expression  go to state 95
    lval        go to state 48


State 129

   45 fcall: IDENTIFIER '(' param ')' .

    $default  reduce using rule 45 (fcall)


State 130

   84 lval: lval '[' expression ']' .

    $default  reduce using rule 84 (lval)


State 131

   25 type: type '[' CONST ']' .

    $default  reduce using rule 25 (type)


State 132

   16 bp: INT '[' . ']'
   18   | INT '[' . CONST ']'

    CONST  shift, and go to state 141
    ']'    shift, and go to state 142


State 133

   17 bp: BYTE '[' . ']'
   19   | BYTE '[' . CONST ']'

    CONST  shift, and go to state 143
    ']'    shift, and go to state 144


State 134

   11 ftype: REF INT .

    $default  reduce using rule 11 (ftype)


State 135

   12 ftype: REF BYTE .

    $default  reduce using rule 12 (ftype)


State 136

   10 optparam: idlist AS ftype ',' . optparam

    IDENTIFIER  shift, and go to state 33

    optparam  go to state 145
    idlist    go to state 35


State 137

   20 bp: bp '[' . CONST ']'

    CONST  shift, and go to state 146


State 138

   51 mif: IF condition ':' stmt_list END . ELSE ':' stmt_list END
   52    | IF condition ':' stmt_list END . ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition ':' stmt_list END .

    ELSE  shift, and go to state 147
    ELIF  shift, and go to state 148

    $default  reduce using rule 53 (mif)


State 139

   49 loop: LOOP IDENTIFIER ':' stmt_list END .

    $default  reduce using rule 49 (loop)


State 140

   28 param: expression ',' param .

    $default  reduce using rule 28 (param)


State 141

   18 bp: INT '[' CONST . ']'

    ']'  shift, and go to state 149


State 142

   16 bp: INT '[' ']' .

    $default  reduce using rule 16 (bp)


State 143

   19 bp: BYTE '[' CONST . ']'

    ']'  shift, and go to state 150


State 144

   17 bp: BYTE '[' ']' .

    $default  reduce using rule 17 (bp)


State 145

   10 optparam: idlist AS ftype ',' optparam .

    $default  reduce using rule 10 (optparam)


State 146

   20 bp: bp '[' CONST . ']'

    ']'  shift, and go to state 151


State 147

   51 mif: IF condition ':' stmt_list END ELSE . ':' stmt_list END

    ':'  shift, and go to state 152


State 148

   52 mif: IF condition ':' stmt_list END ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    fcall       go to state 45
    condition   go to state 153
    expression  go to state 47
    lval        go to state 48


State 149

   18 bp: INT '[' CONST ']' .

    $default  reduce using rule 18 (bp)


State 150

   19 bp: BYTE '[' CONST ']' .

    $default  reduce using rule 19 (bp)


State 151

   20 bp: bp '[' CONST ']' .

    $default  reduce using rule 20 (bp)


State 152

   51 mif: IF condition ':' stmt_list END ELSE ':' . stmt_list END

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 154
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28
    lval       go to state 29


State 153

   52 mif: IF condition ':' stmt_list END ELIF condition . ':' stmt_list END eliftstmt
   62 condition: condition . AND condition
   63          | condition . OR condition

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ':'  shift, and go to state 155


State 154

   22 stmt_list: stmt_list . stmt
   51 mif: IF condition ':' stmt_list END ELSE ':' stmt_list . END

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    END            shift, and go to state 156
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    pc     go to state 24
    stmt   go to state 59
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28
    lval   go to state 29


State 155

   52 mif: IF condition ':' stmt_list END ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 157
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28
    lval       go to state 29


State 156

   51 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END .

    $default  reduce using rule 51 (mif)


State 157

   22 stmt_list: stmt_list . stmt
   52 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list . END eliftstmt

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    END            shift, and go to state 158
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    pc     go to state 24
    stmt   go to state 59
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28
    lval   go to state 29


State 158

   52 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 159
    ELIF  shift, and go to state 160

    eliftstmt  go to state 161


State 159

   67 eliftstmt: ELSE . ':' stmt_list END

    ':'  shift, and go to state 162


State 160

   68 eliftstmt: ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 20
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    fcall       go to state 45
    condition   go to state 163
    expression  go to state 47
    lval        go to state 48


State 161

   52 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 52 (mif)


State 162

   67 eliftstmt: ELSE ':' . stmt_list END

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 164
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28
    lval       go to state 29


State 163

   62 condition: condition . AND condition
   63          | condition . OR condition
   68 eliftstmt: ELIF condition . ':' stmt_list END eliftstmt

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ':'  shift, and go to state 165


State 164

   22 stmt_list: stmt_list . stmt
   67 eliftstmt: ELSE ':' stmt_list . END

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    END            shift, and go to state 166
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    pc     go to state 24
    stmt   go to state 59
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28
    lval   go to state 29


State 165

   68 eliftstmt: ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 167
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28
    lval       go to state 29


State 166

   67 eliftstmt: ELSE ':' stmt_list END .

    $default  reduce using rule 67 (eliftstmt)


State 167

   22 stmt_list: stmt_list . stmt
   68 eliftstmt: ELIF condition ':' stmt_list . END eliftstmt

    IF             shift, and go to state 10
    LOOP           shift, and go to state 11
    SKIP           shift, and go to state 12
    DECL           shift, and go to state 13
    DEF            shift, and go to state 1
    END            shift, and go to state 168
    VAR            shift, and go to state 14
    RETURN         shift, and go to state 15
    EXIT           shift, and go to state 16
    BREAK          shift, and go to state 17
    CONT           shift, and go to state 18
    IDENTIFIER     shift, and go to state 19
    STRINGLITERAL  shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    pc     go to state 24
    stmt   go to state 59
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28
    lval   go to state 29


State 168

   68 eliftstmt: ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 159
    ELIF  shift, and go to state 160

    eliftstmt  go to state 169


State 169

   68 eliftstmt: ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 68 (eliftstmt)
