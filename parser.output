Terminals unused in grammar

   BEG


State 74 conflicts: 1 shift/reduce


Grammar

    0 $accept: fdef $end

    1 fdef: DEF header stmt_list END

    2 fdecl: DECL header

    3 header: IDENTIFIER opt
    4       | IDENTIFIER ':' optparam
    5       | IDENTIFIER

    6 opt: IS type ':' optparam
    7    | IS type

    8 optparam: idlist AS ftype
    9         | idlist AS ftype ',' optparam

   10 ftype: REF INT
   11      | REF BYTE
   12      | bp
   13      | INT
   14      | BYTE

   15 bp: INT '[' ']'
   16   | BYTE '[' ']'
   17   | INT '[' CONST ']'
   18   | BYTE '[' CONST ']'
   19   | bp '[' CONST ']'

   20 stmt_list: stmt
   21          | stmt_list stmt

   22 lval: IDENTIFIER
   23     | STRINGLITERAL
   24     | lval '[' expression ']'

   25 type: INT
   26     | BYTE
   27     | type '[' CONST ']'

   28 pc: IDENTIFIER ':' param
   29   | IDENTIFIER

   30 param: expression ',' param
   31      | expression

   32 stmt: SKIP
   33     | pc
   34     | mif
   35     | fdef
   36     | loop
   37     | lval ASSIGNMENT expression
   38     | VAR idlist IS type
   39     | BREAK
   40     | BREAK ':' IDENTIFIER
   41     | CONT
   42     | CONT ':' IDENTIFIER
   43     | fdecl
   44     | EXIT
   45     | RETURN ':' expression
   46     | fcall

   47 fcall: IDENTIFIER '(' param ')'
   48      | IDENTIFIER '(' ')'

   49 idlist: IDENTIFIER
   50       | IDENTIFIER idlist

   51 loop: LOOP IDENTIFIER ':' stmt_list END
   52     | LOOP ':' stmt_list END

   53 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END
   54    | IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   55    | IF condition ':' stmt_list END

   56 condition: expression LARGER expression
   57          | expression SMALLER expression
   58          | expression LARGEREQ expression
   59          | expression SMALLEREQ expression
   60          | expression EQ expression
   61          | expression DIFF expression
   62          | TRUE
   63          | FALSE
   64          | condition AND condition
   65          | condition OR condition
   66          | NOT condition
   67          | '(' condition ')'
   68          | expression

   69 eliftstmt: ELSE ':' stmt_list END
   70          | ELIF condition ':' stmt_list END eliftstmt

   71 expression: expression '+' expression
   72           | expression '-' expression
   73           | expression '*' expression
   74           | expression '/' expression
   75           | expression '&' expression
   76           | expression '|' expression
   77           | '+' expression
   78           | '-' expression
   79           | '!' expression
   80           | IDENTIFIER
   81           | STRINGLITERAL
   82           | CONST
   83           | '(' expression ')'
   84           | fcall


Terminals, with rules where they appear

$end (0) 0
'!' (33) 79
'&' (38) 75
'(' (40) 47 48 67 83
')' (41) 47 48 67 83
'*' (42) 73
'+' (43) 71 77
',' (44) 9 30
'-' (45) 72 78
'/' (47) 74
':' (58) 4 6 28 40 42 45 51 52 53 54 55 69 70
'[' (91) 15 16 17 18 19 24 27
']' (93) 15 16 17 18 19 24 27
'|' (124) 76
error (256)
IDENTIFIER (258) 3 4 5 22 28 29 40 42 47 48 49 50 51 80
INT (259) 10 13 15 17 25
BYTE (260) 11 14 16 18 26
IF (261) 53 54 55
ELSE (262) 53 69
STRINGLITERAL (263) 23 81
LOOP (264) 51 52
AS (265) 8 9
SKIP (266) 32
DECL (267) 2
DEF (268) 1
END (269) 1 51 52 53 54 55 69 70
VAR (270) 38
IS (271) 6 7 38
EQ (272) 60
DIFF (273) 61
LARGER (274) 56
SMALLER (275) 57
RETURN (276) 45
EXIT (277) 44
REF (278) 10 11
LARGEREQ (279) 58
SMALLEREQ (280) 59
ASSIGNMENT (281) 37
CONST (282) 17 18 19 27 82
AND (283) 64
NOT (284) 66
OR (285) 65
ELIF (286) 54 70
TRUE (287) 62
FALSE (288) 63
BREAK (289) 39 40
CONT (290) 41 42
BEG (291)
UNARYPL (292)
UNARYMINUS (293)
BANGBANG (294)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
fdef (54)
    on left: 1, on right: 0 35
fdecl (55)
    on left: 2, on right: 43
header (56)
    on left: 3 4 5, on right: 1 2
opt (57)
    on left: 6 7, on right: 3
optparam (58)
    on left: 8 9, on right: 4 6 9
ftype (59)
    on left: 10 11 12 13 14, on right: 8 9
bp (60)
    on left: 15 16 17 18 19, on right: 12 19
stmt_list (61)
    on left: 20 21, on right: 1 21 51 52 53 54 55 69 70
lval (62)
    on left: 22 23 24, on right: 24 37
type (63)
    on left: 25 26 27, on right: 6 7 27 38
pc (64)
    on left: 28 29, on right: 33
param (65)
    on left: 30 31, on right: 28 30 47
stmt (66)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46, on right:
    20 21
fcall (67)
    on left: 47 48, on right: 46 84
idlist (68)
    on left: 49 50, on right: 8 9 38 50
loop (69)
    on left: 51 52, on right: 36
mif (70)
    on left: 53 54 55, on right: 34
condition (71)
    on left: 56 57 58 59 60 61 62 63 64 65 66 67 68, on right: 53 54
    55 64 65 66 67 70
eliftstmt (72)
    on left: 69 70, on right: 54 70
expression (73)
    on left: 71 72 73 74 75 76 77 78 79 80 81 82 83 84, on right: 24
    30 31 37 45 56 57 58 59 60 61 68 71 72 73 74 75 76 77 78 79 83


State 0

    0 $accept: . fdef $end

    DEF  shift, and go to state 1

    fdef  go to state 2


State 1

    1 fdef: DEF . header stmt_list END

    IDENTIFIER  shift, and go to state 3

    header  go to state 4


State 2

    0 $accept: fdef . $end

    $end  shift, and go to state 5


State 3

    3 header: IDENTIFIER . opt
    4       | IDENTIFIER . ':' optparam
    5       | IDENTIFIER .

    IS   shift, and go to state 6
    ':'  shift, and go to state 7

    $default  reduce using rule 5 (header)

    opt  go to state 8


State 4

    1 fdef: DEF header . stmt_list END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 22
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 5

    0 $accept: fdef $end .

    $default  accept


State 6

    6 opt: IS . type ':' optparam
    7    | IS . type

    INT   shift, and go to state 29
    BYTE  shift, and go to state 30

    type  go to state 31


State 7

    4 header: IDENTIFIER ':' . optparam

    IDENTIFIER  shift, and go to state 32

    optparam  go to state 33
    idlist    go to state 34


State 8

    3 header: IDENTIFIER opt .

    $default  reduce using rule 3 (header)


State 9

   22 lval: IDENTIFIER .
   28 pc: IDENTIFIER . ':' param
   29   | IDENTIFIER .
   47 fcall: IDENTIFIER . '(' param ')'
   48      | IDENTIFIER . '(' ')'

    ':'  shift, and go to state 35
    '('  shift, and go to state 36

    ASSIGNMENT  reduce using rule 22 (lval)
    '['         reduce using rule 22 (lval)
    $default    reduce using rule 29 (pc)


State 10

   53 mif: IF . condition ':' stmt_list END ELSE ':' stmt_list END
   54    | IF . condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   55    | IF . condition ':' stmt_list END

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    NOT            shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 45
    '!'            shift, and go to state 46

    fcall       go to state 47
    condition   go to state 48
    expression  go to state 49


State 11

   23 lval: STRINGLITERAL .

    $default  reduce using rule 23 (lval)


State 12

   51 loop: LOOP . IDENTIFIER ':' stmt_list END
   52     | LOOP . ':' stmt_list END

    IDENTIFIER  shift, and go to state 50
    ':'         shift, and go to state 51


State 13

   32 stmt: SKIP .

    $default  reduce using rule 32 (stmt)


State 14

    2 fdecl: DECL . header

    IDENTIFIER  shift, and go to state 3

    header  go to state 52


State 15

   38 stmt: VAR . idlist IS type

    IDENTIFIER  shift, and go to state 32

    idlist  go to state 53


State 16

   45 stmt: RETURN . ':' expression

    ':'  shift, and go to state 54


State 17

   44 stmt: EXIT .

    $default  reduce using rule 44 (stmt)


State 18

   39 stmt: BREAK .
   40     | BREAK . ':' IDENTIFIER

    ':'  shift, and go to state 55

    $default  reduce using rule 39 (stmt)


State 19

   41 stmt: CONT .
   42     | CONT . ':' IDENTIFIER

    ':'  shift, and go to state 56

    $default  reduce using rule 41 (stmt)


State 20

   35 stmt: fdef .

    $default  reduce using rule 35 (stmt)


State 21

   43 stmt: fdecl .

    $default  reduce using rule 43 (stmt)


State 22

    1 fdef: DEF header stmt_list . END
   21 stmt_list: stmt_list . stmt

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 57
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 23

   24 lval: lval . '[' expression ']'
   37 stmt: lval . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 59
    '['         shift, and go to state 60


State 24

   33 stmt: pc .

    $default  reduce using rule 33 (stmt)


State 25

   20 stmt_list: stmt .

    $default  reduce using rule 20 (stmt_list)


State 26

   46 stmt: fcall .

    $default  reduce using rule 46 (stmt)


State 27

   36 stmt: loop .

    $default  reduce using rule 36 (stmt)


State 28

   34 stmt: mif .

    $default  reduce using rule 34 (stmt)


State 29

   25 type: INT .

    $default  reduce using rule 25 (type)


State 30

   26 type: BYTE .

    $default  reduce using rule 26 (type)


State 31

    6 opt: IS type . ':' optparam
    7    | IS type .
   27 type: type . '[' CONST ']'

    ':'  shift, and go to state 61
    '['  shift, and go to state 62

    $default  reduce using rule 7 (opt)


State 32

   49 idlist: IDENTIFIER .
   50       | IDENTIFIER . idlist

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 49 (idlist)

    idlist  go to state 63


State 33

    4 header: IDENTIFIER ':' optparam .

    $default  reduce using rule 4 (header)


State 34

    8 optparam: idlist . AS ftype
    9         | idlist . AS ftype ',' optparam

    AS  shift, and go to state 64


State 35

   28 pc: IDENTIFIER ':' . param

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    param       go to state 66
    fcall       go to state 47
    expression  go to state 67


State 36

   47 fcall: IDENTIFIER '(' . param ')'
   48      | IDENTIFIER '(' . ')'

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    ')'            shift, and go to state 68
    '!'            shift, and go to state 46

    param       go to state 69
    fcall       go to state 47
    expression  go to state 67


State 37

   47 fcall: IDENTIFIER . '(' param ')'
   48      | IDENTIFIER . '(' ')'
   80 expression: IDENTIFIER .

    '('  shift, and go to state 36

    $default  reduce using rule 80 (expression)


State 38

   81 expression: STRINGLITERAL .

    $default  reduce using rule 81 (expression)


State 39

   82 expression: CONST .

    $default  reduce using rule 82 (expression)


State 40

   66 condition: NOT . condition

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    NOT            shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 45
    '!'            shift, and go to state 46

    fcall       go to state 47
    condition   go to state 70
    expression  go to state 49


State 41

   62 condition: TRUE .

    $default  reduce using rule 62 (condition)


State 42

   63 condition: FALSE .

    $default  reduce using rule 63 (condition)


State 43

   77 expression: '+' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 71


State 44

   78 expression: '-' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 72


State 45

   67 condition: '(' . condition ')'
   83 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    NOT            shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 45
    '!'            shift, and go to state 46

    fcall       go to state 47
    condition   go to state 73
    expression  go to state 74


State 46

   79 expression: '!' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 75


State 47

   84 expression: fcall .

    $default  reduce using rule 84 (expression)


State 48

   53 mif: IF condition . ':' stmt_list END ELSE ':' stmt_list END
   54    | IF condition . ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   55    | IF condition . ':' stmt_list END
   64 condition: condition . AND condition
   65          | condition . OR condition

    AND  shift, and go to state 76
    OR   shift, and go to state 77
    ':'  shift, and go to state 78


State 49

   56 condition: expression . LARGER expression
   57          | expression . SMALLER expression
   58          | expression . LARGEREQ expression
   59          | expression . SMALLEREQ expression
   60          | expression . EQ expression
   61          | expression . DIFF expression
   68          | expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    EQ         shift, and go to state 79
    DIFF       shift, and go to state 80
    LARGER     shift, and go to state 81
    SMALLER    shift, and go to state 82
    LARGEREQ   shift, and go to state 83
    SMALLEREQ  shift, and go to state 84
    '+'        shift, and go to state 85
    '-'        shift, and go to state 86
    '|'        shift, and go to state 87
    '*'        shift, and go to state 88
    '/'        shift, and go to state 89
    '&'        shift, and go to state 90

    $default  reduce using rule 68 (condition)


State 50

   51 loop: LOOP IDENTIFIER . ':' stmt_list END

    ':'  shift, and go to state 91


State 51

   52 loop: LOOP ':' . stmt_list END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 92
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 52

    2 fdecl: DECL header .

    $default  reduce using rule 2 (fdecl)


State 53

   38 stmt: VAR idlist . IS type

    IS  shift, and go to state 93


State 54

   45 stmt: RETURN ':' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 94


State 55

   40 stmt: BREAK ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 95


State 56

   42 stmt: CONT ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 96


State 57

    1 fdef: DEF header stmt_list END .

    $default  reduce using rule 1 (fdef)


State 58

   21 stmt_list: stmt_list stmt .

    $default  reduce using rule 21 (stmt_list)


State 59

   37 stmt: lval ASSIGNMENT . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 97


State 60

   24 lval: lval '[' . expression ']'

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 98


State 61

    6 opt: IS type ':' . optparam

    IDENTIFIER  shift, and go to state 32

    optparam  go to state 99
    idlist    go to state 34


State 62

   27 type: type '[' . CONST ']'

    CONST  shift, and go to state 100


State 63

   50 idlist: IDENTIFIER idlist .

    $default  reduce using rule 50 (idlist)


State 64

    8 optparam: idlist AS . ftype
    9         | idlist AS . ftype ',' optparam

    INT   shift, and go to state 101
    BYTE  shift, and go to state 102
    REF   shift, and go to state 103

    ftype  go to state 104
    bp     go to state 105


State 65

   83 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 106


State 66

   28 pc: IDENTIFIER ':' param .

    $default  reduce using rule 28 (pc)


State 67

   30 param: expression . ',' param
   31      | expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90
    ','  shift, and go to state 107

    $default  reduce using rule 31 (param)


State 68

   48 fcall: IDENTIFIER '(' ')' .

    $default  reduce using rule 48 (fcall)


State 69

   47 fcall: IDENTIFIER '(' param . ')'

    ')'  shift, and go to state 108


State 70

   64 condition: condition . AND condition
   65          | condition . OR condition
   66          | NOT condition .

    $default  reduce using rule 66 (condition)


State 71

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression
   77           | '+' expression .

    $default  reduce using rule 77 (expression)


State 72

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression
   78           | '-' expression .

    $default  reduce using rule 78 (expression)


State 73

   64 condition: condition . AND condition
   65          | condition . OR condition
   67          | '(' condition . ')'

    AND  shift, and go to state 76
    OR   shift, and go to state 77
    ')'  shift, and go to state 109


State 74

   56 condition: expression . LARGER expression
   57          | expression . SMALLER expression
   58          | expression . LARGEREQ expression
   59          | expression . SMALLEREQ expression
   60          | expression . EQ expression
   61          | expression . DIFF expression
   68          | expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression
   83           | '(' expression . ')'

    EQ         shift, and go to state 79
    DIFF       shift, and go to state 80
    LARGER     shift, and go to state 81
    SMALLER    shift, and go to state 82
    LARGEREQ   shift, and go to state 83
    SMALLEREQ  shift, and go to state 84
    '+'        shift, and go to state 85
    '-'        shift, and go to state 86
    '|'        shift, and go to state 87
    '*'        shift, and go to state 88
    '/'        shift, and go to state 89
    '&'        shift, and go to state 90
    ')'        shift, and go to state 110

    ')'       [reduce using rule 68 (condition)]
    $default  reduce using rule 68 (condition)


State 75

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression
   79           | '!' expression .

    $default  reduce using rule 79 (expression)


State 76

   64 condition: condition AND . condition

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    NOT            shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 45
    '!'            shift, and go to state 46

    fcall       go to state 47
    condition   go to state 111
    expression  go to state 49


State 77

   65 condition: condition OR . condition

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    NOT            shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 45
    '!'            shift, and go to state 46

    fcall       go to state 47
    condition   go to state 112
    expression  go to state 49


State 78

   53 mif: IF condition ':' . stmt_list END ELSE ':' stmt_list END
   54    | IF condition ':' . stmt_list END ELIF condition ':' stmt_list END eliftstmt
   55    | IF condition ':' . stmt_list END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 113
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 79

   60 condition: expression EQ . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 114


State 80

   61 condition: expression DIFF . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 115


State 81

   56 condition: expression LARGER . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 116


State 82

   57 condition: expression SMALLER . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 117


State 83

   58 condition: expression LARGEREQ . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 118


State 84

   59 condition: expression SMALLEREQ . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 119


State 85

   71 expression: expression '+' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 120


State 86

   72 expression: expression '-' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 121


State 87

   76 expression: expression '|' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 122


State 88

   73 expression: expression '*' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 123


State 89

   74 expression: expression '/' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 124


State 90

   75 expression: expression '&' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 125


State 91

   51 loop: LOOP IDENTIFIER ':' . stmt_list END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 126
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 92

   21 stmt_list: stmt_list . stmt
   52 loop: LOOP ':' stmt_list . END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 127
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 93

   38 stmt: VAR idlist IS . type

    INT   shift, and go to state 29
    BYTE  shift, and go to state 30

    type  go to state 128


State 94

   45 stmt: RETURN ':' expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 45 (stmt)


State 95

   40 stmt: BREAK ':' IDENTIFIER .

    $default  reduce using rule 40 (stmt)


State 96

   42 stmt: CONT ':' IDENTIFIER .

    $default  reduce using rule 42 (stmt)


State 97

   37 stmt: lval ASSIGNMENT expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 37 (stmt)


State 98

   24 lval: lval '[' expression . ']'
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90
    ']'  shift, and go to state 129


State 99

    6 opt: IS type ':' optparam .

    $default  reduce using rule 6 (opt)


State 100

   27 type: type '[' CONST . ']'

    ']'  shift, and go to state 130


State 101

   13 ftype: INT .
   15 bp: INT . '[' ']'
   17   | INT . '[' CONST ']'

    '['  shift, and go to state 131

    $default  reduce using rule 13 (ftype)


State 102

   14 ftype: BYTE .
   16 bp: BYTE . '[' ']'
   18   | BYTE . '[' CONST ']'

    '['  shift, and go to state 132

    $default  reduce using rule 14 (ftype)


State 103

   10 ftype: REF . INT
   11      | REF . BYTE

    INT   shift, and go to state 133
    BYTE  shift, and go to state 134


State 104

    8 optparam: idlist AS ftype .
    9         | idlist AS ftype . ',' optparam

    ','  shift, and go to state 135

    $default  reduce using rule 8 (optparam)


State 105

   12 ftype: bp .
   19 bp: bp . '[' CONST ']'

    '['  shift, and go to state 136

    $default  reduce using rule 12 (ftype)


State 106

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression
   83           | '(' expression . ')'

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90
    ')'  shift, and go to state 110


State 107

   30 param: expression ',' . param

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    param       go to state 137
    fcall       go to state 47
    expression  go to state 67


State 108

   47 fcall: IDENTIFIER '(' param ')' .

    $default  reduce using rule 47 (fcall)


State 109

   67 condition: '(' condition ')' .

    $default  reduce using rule 67 (condition)


State 110

   83 expression: '(' expression ')' .

    $default  reduce using rule 83 (expression)


State 111

   64 condition: condition . AND condition
   64          | condition AND condition .
   65          | condition . OR condition

    $default  reduce using rule 64 (condition)


State 112

   64 condition: condition . AND condition
   65          | condition . OR condition
   65          | condition OR condition .

    AND  shift, and go to state 76

    $default  reduce using rule 65 (condition)


State 113

   21 stmt_list: stmt_list . stmt
   53 mif: IF condition ':' stmt_list . END ELSE ':' stmt_list END
   54    | IF condition ':' stmt_list . END ELIF condition ':' stmt_list END eliftstmt
   55    | IF condition ':' stmt_list . END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 138
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 114

   60 condition: expression EQ expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 60 (condition)


State 115

   61 condition: expression DIFF expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 61 (condition)


State 116

   56 condition: expression LARGER expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 56 (condition)


State 117

   57 condition: expression SMALLER expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 57 (condition)


State 118

   58 condition: expression LARGEREQ expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 58 (condition)


State 119

   59 condition: expression SMALLEREQ expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 59 (condition)


State 120

   71 expression: expression . '+' expression
   71           | expression '+' expression .
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 71 (expression)


State 121

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   72           | expression '-' expression .
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 72 (expression)


State 122

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression
   76           | expression '|' expression .

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 76 (expression)


State 123

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   73           | expression '*' expression .
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    $default  reduce using rule 73 (expression)


State 124

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   74           | expression '/' expression .
   75           | expression . '&' expression
   76           | expression . '|' expression

    $default  reduce using rule 74 (expression)


State 125

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   75           | expression '&' expression .
   76           | expression . '|' expression

    $default  reduce using rule 75 (expression)


State 126

   21 stmt_list: stmt_list . stmt
   51 loop: LOOP IDENTIFIER ':' stmt_list . END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 139
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 127

   52 loop: LOOP ':' stmt_list END .

    $default  reduce using rule 52 (loop)


State 128

   27 type: type . '[' CONST ']'
   38 stmt: VAR idlist IS type .

    '['  shift, and go to state 62

    $default  reduce using rule 38 (stmt)


State 129

   24 lval: lval '[' expression ']' .

    $default  reduce using rule 24 (lval)


State 130

   27 type: type '[' CONST ']' .

    $default  reduce using rule 27 (type)


State 131

   15 bp: INT '[' . ']'
   17   | INT '[' . CONST ']'

    CONST  shift, and go to state 140
    ']'    shift, and go to state 141


State 132

   16 bp: BYTE '[' . ']'
   18   | BYTE '[' . CONST ']'

    CONST  shift, and go to state 142
    ']'    shift, and go to state 143


State 133

   10 ftype: REF INT .

    $default  reduce using rule 10 (ftype)


State 134

   11 ftype: REF BYTE .

    $default  reduce using rule 11 (ftype)


State 135

    9 optparam: idlist AS ftype ',' . optparam

    IDENTIFIER  shift, and go to state 32

    optparam  go to state 144
    idlist    go to state 34


State 136

   19 bp: bp '[' . CONST ']'

    CONST  shift, and go to state 145


State 137

   30 param: expression ',' param .

    $default  reduce using rule 30 (param)


State 138

   53 mif: IF condition ':' stmt_list END . ELSE ':' stmt_list END
   54    | IF condition ':' stmt_list END . ELIF condition ':' stmt_list END eliftstmt
   55    | IF condition ':' stmt_list END .

    ELSE  shift, and go to state 146
    ELIF  shift, and go to state 147

    $default  reduce using rule 55 (mif)


State 139

   51 loop: LOOP IDENTIFIER ':' stmt_list END .

    $default  reduce using rule 51 (loop)


State 140

   17 bp: INT '[' CONST . ']'

    ']'  shift, and go to state 148


State 141

   15 bp: INT '[' ']' .

    $default  reduce using rule 15 (bp)


State 142

   18 bp: BYTE '[' CONST . ']'

    ']'  shift, and go to state 149


State 143

   16 bp: BYTE '[' ']' .

    $default  reduce using rule 16 (bp)


State 144

    9 optparam: idlist AS ftype ',' optparam .

    $default  reduce using rule 9 (optparam)


State 145

   19 bp: bp '[' CONST . ']'

    ']'  shift, and go to state 150


State 146

   53 mif: IF condition ':' stmt_list END ELSE . ':' stmt_list END

    ':'  shift, and go to state 151


State 147

   54 mif: IF condition ':' stmt_list END ELIF . condition ':' stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    NOT            shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 45
    '!'            shift, and go to state 46

    fcall       go to state 47
    condition   go to state 152
    expression  go to state 49


State 148

   17 bp: INT '[' CONST ']' .

    $default  reduce using rule 17 (bp)


State 149

   18 bp: BYTE '[' CONST ']' .

    $default  reduce using rule 18 (bp)


State 150

   19 bp: bp '[' CONST ']' .

    $default  reduce using rule 19 (bp)


State 151

   53 mif: IF condition ':' stmt_list END ELSE ':' . stmt_list END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 153
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 152

   54 mif: IF condition ':' stmt_list END ELIF condition . ':' stmt_list END eliftstmt
   64 condition: condition . AND condition
   65          | condition . OR condition

    AND  shift, and go to state 76
    OR   shift, and go to state 77
    ':'  shift, and go to state 154


State 153

   21 stmt_list: stmt_list . stmt
   53 mif: IF condition ':' stmt_list END ELSE ':' stmt_list . END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 155
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 154

   54 mif: IF condition ':' stmt_list END ELIF condition ':' . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 156
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 155

   53 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END .

    $default  reduce using rule 53 (mif)


State 156

   21 stmt_list: stmt_list . stmt
   54 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 157
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 157

   54 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 158
    ELIF  shift, and go to state 159

    eliftstmt  go to state 160


State 158

   69 eliftstmt: ELSE . ':' stmt_list END

    ':'  shift, and go to state 161


State 159

   70 eliftstmt: ELIF . condition ':' stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    NOT            shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 45
    '!'            shift, and go to state 46

    fcall       go to state 47
    condition   go to state 162
    expression  go to state 49


State 160

   54 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 54 (mif)


State 161

   69 eliftstmt: ELSE ':' . stmt_list END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 163
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 162

   64 condition: condition . AND condition
   65          | condition . OR condition
   70 eliftstmt: ELIF condition . ':' stmt_list END eliftstmt

    AND  shift, and go to state 76
    OR   shift, and go to state 77
    ':'  shift, and go to state 164


State 163

   21 stmt_list: stmt_list . stmt
   69 eliftstmt: ELSE ':' stmt_list . END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 165
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 164

   70 eliftstmt: ELIF condition ':' . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 166
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 165

   69 eliftstmt: ELSE ':' stmt_list END .

    $default  reduce using rule 69 (eliftstmt)


State 166

   21 stmt_list: stmt_list . stmt
   70 eliftstmt: ELIF condition ':' stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 167
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 167

   70 eliftstmt: ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 158
    ELIF  shift, and go to state 159

    eliftstmt  go to state 168


State 168

   70 eliftstmt: ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 70 (eliftstmt)
