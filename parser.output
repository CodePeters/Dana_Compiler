Terminals unused in grammar

   TEOF
   BEG


State 70 conflicts: 1 shift/reduce


Grammar

    0 $accept: fdef $end

    1 fdef: DEF header stmt_list END

    2 fdecl: DECL header

    3 header: IDENTIFIER IS type ':' optparam
    4       | IDENTIFIER IS type
    5       | IDENTIFIER ':' optparam
    6       | IDENTIFIER

    7 optparam: idlist AS ftype
    8         | idlist AS ftype ',' optparam

    9 ftype: REF INT
   10      | REF BYTE
   11      | bp
   12      | INT
   13      | BYTE

   14 bp: INT '[' ']'
   15   | BYTE '[' ']'
   16   | INT '[' CONST ']'
   17   | BYTE '[' CONST ']'
   18   | bp '[' CONST ']'

   19 stmt_list: stmt
   20          | stmt stmt_list

   21 type: INT
   22     | BYTE
   23     | type '[' CONST ']'

   24 pc: IDENTIFIER ':' param
   25   | IDENTIFIER

   26 param: expression ',' param
   27      | expression

   28 stmt: SKIP
   29     | pc
   30     | mif
   31     | fdef
   32     | loop
   33     | lval ASSIGNMENT expression
   34     | VAR idlist IS type
   35     | BREAK
   36     | BREAK ':' IDENTIFIER
   37     | CONT
   38     | CONT ':' IDENTIFIER
   39     | fdecl
   40     | EXIT
   41     | RETURN ':' expression
   42     | fcall

   43 fcall: IDENTIFIER '(' param ')'
   44      | IDENTIFIER '(' ')'

   45 idlist: IDENTIFIER
   46       | IDENTIFIER idlist

   47 loop: LOOP IDENTIFIER ':' stmt_list END
   48     | LOOP ':' stmt_list END

   49 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END
   50    | IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   51    | IF condition ':' stmt_list END

   52 condition: expression LARGER expression
   53          | expression SMALLER expression
   54          | expression LARGEREQ expression
   55          | expression SMALLEREQ expression
   56          | expression EQ expression
   57          | expression DIFF expression
   58          | TRUE
   59          | FALSE
   60          | condition AND condition
   61          | condition OR condition
   62          | NOT condition
   63          | '(' condition ')'
   64          | expression

   65 eliftstmt: ELSE ':' stmt_list END
   66          | ELIF condition ':' stmt_list END eliftstmt

   67 expression: expression '+' expression
   68           | expression '-' expression
   69           | expression '*' expression
   70           | expression '/' expression
   71           | expression '&' expression
   72           | expression '|' expression
   73           | '+' expression
   74           | '-' expression
   75           | '!' expression
   76           | lval
   77           | CONST
   78           | '(' expression ')'
   79           | fcall
   80           | CHAR_CONST

   81 lval: IDENTIFIER
   82     | STRINGLITERAL
   83     | lval '[' expression ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 75
'&' (38) 71
'(' (40) 43 44 63 78
')' (41) 43 44 63 78
'*' (42) 69
'+' (43) 67 73
',' (44) 8 26
'-' (45) 68 74
'/' (47) 70
':' (58) 3 5 24 36 38 41 47 48 49 50 51 65 66
'[' (91) 14 15 16 17 18 23 83
']' (93) 14 15 16 17 18 23 83
'|' (124) 72
error (256)
INT (258) 9 12 14 16 21
BYTE (259) 10 13 15 17 22
IF (260) 49 50 51
ELSE (261) 49 65
LOOP (262) 47 48
AS (263) 7 8
SKIP (264) 28
DECL (265) 2
DEF (266) 1
END (267) 1 47 48 49 50 51 65 66
VAR (268) 34
IS (269) 3 4 34
TEOF (270)
EQ (271) 56
DIFF (272) 57
LARGER (273) 52
SMALLER (274) 53
RETURN (275) 41
EXIT (276) 40
REF (277) 9 10
LARGEREQ (278) 54
SMALLEREQ (279) 55
ASSIGNMENT (280) 33
AND (281) 60
NOT (282) 62
OR (283) 61
ELIF (284) 50 66
TRUE (285) 58
FALSE (286) 59
BREAK (287) 35 36
CONT (288) 37 38
BEG (289)
CONST (290) 16 17 18 23 77
CHAR_CONST (291) 80
IDENTIFIER (292) 3 4 5 6 24 25 36 38 43 44 45 46 47 81
STRINGLITERAL (293) 82
UNARYPL (294)
UNARYMINUS (295)
BANG (296)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
fdef (56)
    on left: 1, on right: 0 31
fdecl (57)
    on left: 2, on right: 39
header (58)
    on left: 3 4 5 6, on right: 1 2
optparam (59)
    on left: 7 8, on right: 3 5 8
ftype (60)
    on left: 9 10 11 12 13, on right: 7 8
bp (61)
    on left: 14 15 16 17 18, on right: 11 18
stmt_list (62)
    on left: 19 20, on right: 1 20 47 48 49 50 51 65 66
type (63)
    on left: 21 22 23, on right: 3 4 23 34
pc (64)
    on left: 24 25, on right: 29
param (65)
    on left: 26 27, on right: 24 26 43
stmt (66)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42, on right:
    19 20
fcall (67)
    on left: 43 44, on right: 42 79
idlist (68)
    on left: 45 46, on right: 7 8 34 46
loop (69)
    on left: 47 48, on right: 32
mif (70)
    on left: 49 50 51, on right: 30
condition (71)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63 64, on right: 49 50
    51 60 61 62 63 66
eliftstmt (72)
    on left: 65 66, on right: 50 66
expression (73)
    on left: 67 68 69 70 71 72 73 74 75 76 77 78 79 80, on right: 26
    27 33 41 52 53 54 55 56 57 64 67 68 69 70 71 72 73 74 75 78 83
lval (74)
    on left: 81 82 83, on right: 33 76 83


State 0

    0 $accept: . fdef $end

    DEF  shift, and go to state 1

    fdef  go to state 2


State 1

    1 fdef: DEF . header stmt_list END

    IDENTIFIER  shift, and go to state 3

    header  go to state 4


State 2

    0 $accept: fdef . $end

    $end  shift, and go to state 5


State 3

    3 header: IDENTIFIER . IS type ':' optparam
    4       | IDENTIFIER . IS type
    5       | IDENTIFIER . ':' optparam
    6       | IDENTIFIER .

    IS   shift, and go to state 6
    ':'  shift, and go to state 7

    $default  reduce using rule 6 (header)


State 4

    1 fdef: DEF header . stmt_list END

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 21
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 5

    0 $accept: fdef $end .

    $default  accept


State 6

    3 header: IDENTIFIER IS . type ':' optparam
    4       | IDENTIFIER IS . type

    INT   shift, and go to state 28
    BYTE  shift, and go to state 29

    type  go to state 30


State 7

    5 header: IDENTIFIER ':' . optparam

    IDENTIFIER  shift, and go to state 31

    optparam  go to state 32
    idlist    go to state 33


State 8

   49 mif: IF . condition ':' stmt_list END ELSE ':' stmt_list END
   50    | IF . condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   51    | IF . condition ':' stmt_list END

    NOT            shift, and go to state 34
    TRUE           shift, and go to state 35
    FALSE          shift, and go to state 36
    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '!'            shift, and go to state 43

    fcall       go to state 44
    condition   go to state 45
    expression  go to state 46
    lval        go to state 47


State 9

   47 loop: LOOP . IDENTIFIER ':' stmt_list END
   48     | LOOP . ':' stmt_list END

    IDENTIFIER  shift, and go to state 48
    ':'         shift, and go to state 49


State 10

   28 stmt: SKIP .

    $default  reduce using rule 28 (stmt)


State 11

    2 fdecl: DECL . header

    IDENTIFIER  shift, and go to state 3

    header  go to state 50


State 12

   34 stmt: VAR . idlist IS type

    IDENTIFIER  shift, and go to state 31

    idlist  go to state 51


State 13

   41 stmt: RETURN . ':' expression

    ':'  shift, and go to state 52


State 14

   40 stmt: EXIT .

    $default  reduce using rule 40 (stmt)


State 15

   35 stmt: BREAK .
   36     | BREAK . ':' IDENTIFIER

    ':'  shift, and go to state 53

    $default  reduce using rule 35 (stmt)


State 16

   37 stmt: CONT .
   38     | CONT . ':' IDENTIFIER

    ':'  shift, and go to state 54

    $default  reduce using rule 37 (stmt)


State 17

   24 pc: IDENTIFIER . ':' param
   25   | IDENTIFIER .
   43 fcall: IDENTIFIER . '(' param ')'
   44      | IDENTIFIER . '(' ')'
   81 lval: IDENTIFIER .

    ':'  shift, and go to state 55
    '('  shift, and go to state 56

    ASSIGNMENT  reduce using rule 81 (lval)
    '['         reduce using rule 81 (lval)
    $default    reduce using rule 25 (pc)


State 18

   82 lval: STRINGLITERAL .

    $default  reduce using rule 82 (lval)


State 19

   31 stmt: fdef .

    $default  reduce using rule 31 (stmt)


State 20

   39 stmt: fdecl .

    $default  reduce using rule 39 (stmt)


State 21

    1 fdef: DEF header stmt_list . END

    END  shift, and go to state 57


State 22

   29 stmt: pc .

    $default  reduce using rule 29 (stmt)


State 23

   19 stmt_list: stmt .
   20          | stmt . stmt_list

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    $default  reduce using rule 19 (stmt_list)

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 58
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 24

   42 stmt: fcall .

    $default  reduce using rule 42 (stmt)


State 25

   32 stmt: loop .

    $default  reduce using rule 32 (stmt)


State 26

   30 stmt: mif .

    $default  reduce using rule 30 (stmt)


State 27

   33 stmt: lval . ASSIGNMENT expression
   83 lval: lval . '[' expression ']'

    ASSIGNMENT  shift, and go to state 59
    '['         shift, and go to state 60


State 28

   21 type: INT .

    $default  reduce using rule 21 (type)


State 29

   22 type: BYTE .

    $default  reduce using rule 22 (type)


State 30

    3 header: IDENTIFIER IS type . ':' optparam
    4       | IDENTIFIER IS type .
   23 type: type . '[' CONST ']'

    ':'  shift, and go to state 61
    '['  shift, and go to state 62

    $default  reduce using rule 4 (header)


State 31

   45 idlist: IDENTIFIER .
   46       | IDENTIFIER . idlist

    IDENTIFIER  shift, and go to state 31

    $default  reduce using rule 45 (idlist)

    idlist  go to state 63


State 32

    5 header: IDENTIFIER ':' optparam .

    $default  reduce using rule 5 (header)


State 33

    7 optparam: idlist . AS ftype
    8         | idlist . AS ftype ',' optparam

    AS  shift, and go to state 64


State 34

   62 condition: NOT . condition

    NOT            shift, and go to state 34
    TRUE           shift, and go to state 35
    FALSE          shift, and go to state 36
    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '!'            shift, and go to state 43

    fcall       go to state 44
    condition   go to state 65
    expression  go to state 46
    lval        go to state 47


State 35

   58 condition: TRUE .

    $default  reduce using rule 58 (condition)


State 36

   59 condition: FALSE .

    $default  reduce using rule 59 (condition)


State 37

   77 expression: CONST .

    $default  reduce using rule 77 (expression)


State 38

   80 expression: CHAR_CONST .

    $default  reduce using rule 80 (expression)


State 39

   43 fcall: IDENTIFIER . '(' param ')'
   44      | IDENTIFIER . '(' ')'
   81 lval: IDENTIFIER .

    '('  shift, and go to state 56

    $default  reduce using rule 81 (lval)


State 40

   73 expression: '+' . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 67
    lval        go to state 47


State 41

   74 expression: '-' . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 68
    lval        go to state 47


State 42

   63 condition: '(' . condition ')'
   78 expression: '(' . expression ')'

    NOT            shift, and go to state 34
    TRUE           shift, and go to state 35
    FALSE          shift, and go to state 36
    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '!'            shift, and go to state 43

    fcall       go to state 44
    condition   go to state 69
    expression  go to state 70
    lval        go to state 47


State 43

   75 expression: '!' . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 71
    lval        go to state 47


State 44

   79 expression: fcall .

    $default  reduce using rule 79 (expression)


State 45

   49 mif: IF condition . ':' stmt_list END ELSE ':' stmt_list END
   50    | IF condition . ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   51    | IF condition . ':' stmt_list END
   60 condition: condition . AND condition
   61          | condition . OR condition

    AND  shift, and go to state 72
    OR   shift, and go to state 73
    ':'  shift, and go to state 74


State 46

   52 condition: expression . LARGER expression
   53          | expression . SMALLER expression
   54          | expression . LARGEREQ expression
   55          | expression . SMALLEREQ expression
   56          | expression . EQ expression
   57          | expression . DIFF expression
   64          | expression .
   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression

    EQ         shift, and go to state 75
    DIFF       shift, and go to state 76
    LARGER     shift, and go to state 77
    SMALLER    shift, and go to state 78
    LARGEREQ   shift, and go to state 79
    SMALLEREQ  shift, and go to state 80
    '+'        shift, and go to state 81
    '-'        shift, and go to state 82
    '|'        shift, and go to state 83
    '*'        shift, and go to state 84
    '/'        shift, and go to state 85
    '&'        shift, and go to state 86

    $default  reduce using rule 64 (condition)


State 47

   76 expression: lval .
   83 lval: lval . '[' expression ']'

    '['  shift, and go to state 60

    $default  reduce using rule 76 (expression)


State 48

   47 loop: LOOP IDENTIFIER . ':' stmt_list END

    ':'  shift, and go to state 87


State 49

   48 loop: LOOP ':' . stmt_list END

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 88
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 50

    2 fdecl: DECL header .

    $default  reduce using rule 2 (fdecl)


State 51

   34 stmt: VAR idlist . IS type

    IS  shift, and go to state 89


State 52

   41 stmt: RETURN ':' . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 90
    lval        go to state 47


State 53

   36 stmt: BREAK ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 91


State 54

   38 stmt: CONT ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 92


State 55

   24 pc: IDENTIFIER ':' . param

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    param       go to state 93
    fcall       go to state 44
    expression  go to state 94
    lval        go to state 47


State 56

   43 fcall: IDENTIFIER '(' . param ')'
   44      | IDENTIFIER '(' . ')'

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    ')'            shift, and go to state 95
    '!'            shift, and go to state 43

    param       go to state 96
    fcall       go to state 44
    expression  go to state 94
    lval        go to state 47


State 57

    1 fdef: DEF header stmt_list END .

    $default  reduce using rule 1 (fdef)


State 58

   20 stmt_list: stmt stmt_list .

    $default  reduce using rule 20 (stmt_list)


State 59

   33 stmt: lval ASSIGNMENT . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 97
    lval        go to state 47


State 60

   83 lval: lval '[' . expression ']'

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 98
    lval        go to state 47


State 61

    3 header: IDENTIFIER IS type ':' . optparam

    IDENTIFIER  shift, and go to state 31

    optparam  go to state 99
    idlist    go to state 33


State 62

   23 type: type '[' . CONST ']'

    CONST  shift, and go to state 100


State 63

   46 idlist: IDENTIFIER idlist .

    $default  reduce using rule 46 (idlist)


State 64

    7 optparam: idlist AS . ftype
    8         | idlist AS . ftype ',' optparam

    INT   shift, and go to state 101
    BYTE  shift, and go to state 102
    REF   shift, and go to state 103

    ftype  go to state 104
    bp     go to state 105


State 65

   60 condition: condition . AND condition
   61          | condition . OR condition
   62          | NOT condition .

    $default  reduce using rule 62 (condition)


State 66

   78 expression: '(' . expression ')'

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 106
    lval        go to state 47


State 67

   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression
   73           | '+' expression .

    $default  reduce using rule 73 (expression)


State 68

   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression
   74           | '-' expression .

    $default  reduce using rule 74 (expression)


State 69

   60 condition: condition . AND condition
   61          | condition . OR condition
   63          | '(' condition . ')'

    AND  shift, and go to state 72
    OR   shift, and go to state 73
    ')'  shift, and go to state 107


State 70

   52 condition: expression . LARGER expression
   53          | expression . SMALLER expression
   54          | expression . LARGEREQ expression
   55          | expression . SMALLEREQ expression
   56          | expression . EQ expression
   57          | expression . DIFF expression
   64          | expression .
   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression
   78           | '(' expression . ')'

    EQ         shift, and go to state 75
    DIFF       shift, and go to state 76
    LARGER     shift, and go to state 77
    SMALLER    shift, and go to state 78
    LARGEREQ   shift, and go to state 79
    SMALLEREQ  shift, and go to state 80
    '+'        shift, and go to state 81
    '-'        shift, and go to state 82
    '|'        shift, and go to state 83
    '*'        shift, and go to state 84
    '/'        shift, and go to state 85
    '&'        shift, and go to state 86
    ')'        shift, and go to state 108

    ')'       [reduce using rule 64 (condition)]
    $default  reduce using rule 64 (condition)


State 71

   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression
   75           | '!' expression .

    $default  reduce using rule 75 (expression)


State 72

   60 condition: condition AND . condition

    NOT            shift, and go to state 34
    TRUE           shift, and go to state 35
    FALSE          shift, and go to state 36
    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '!'            shift, and go to state 43

    fcall       go to state 44
    condition   go to state 109
    expression  go to state 46
    lval        go to state 47


State 73

   61 condition: condition OR . condition

    NOT            shift, and go to state 34
    TRUE           shift, and go to state 35
    FALSE          shift, and go to state 36
    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '!'            shift, and go to state 43

    fcall       go to state 44
    condition   go to state 110
    expression  go to state 46
    lval        go to state 47


State 74

   49 mif: IF condition ':' . stmt_list END ELSE ':' stmt_list END
   50    | IF condition ':' . stmt_list END ELIF condition ':' stmt_list END eliftstmt
   51    | IF condition ':' . stmt_list END

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 111
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 75

   56 condition: expression EQ . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 112
    lval        go to state 47


State 76

   57 condition: expression DIFF . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 113
    lval        go to state 47


State 77

   52 condition: expression LARGER . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 114
    lval        go to state 47


State 78

   53 condition: expression SMALLER . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 115
    lval        go to state 47


State 79

   54 condition: expression LARGEREQ . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 116
    lval        go to state 47


State 80

   55 condition: expression SMALLEREQ . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 117
    lval        go to state 47


State 81

   67 expression: expression '+' . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 118
    lval        go to state 47


State 82

   68 expression: expression '-' . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 119
    lval        go to state 47


State 83

   72 expression: expression '|' . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 120
    lval        go to state 47


State 84

   69 expression: expression '*' . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 121
    lval        go to state 47


State 85

   70 expression: expression '/' . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 122
    lval        go to state 47


State 86

   71 expression: expression '&' . expression

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 123
    lval        go to state 47


State 87

   47 loop: LOOP IDENTIFIER ':' . stmt_list END

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 124
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 88

   48 loop: LOOP ':' stmt_list . END

    END  shift, and go to state 125


State 89

   34 stmt: VAR idlist IS . type

    INT   shift, and go to state 28
    BYTE  shift, and go to state 29

    type  go to state 126


State 90

   41 stmt: RETURN ':' expression .
   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 41 (stmt)


State 91

   36 stmt: BREAK ':' IDENTIFIER .

    $default  reduce using rule 36 (stmt)


State 92

   38 stmt: CONT ':' IDENTIFIER .

    $default  reduce using rule 38 (stmt)


State 93

   24 pc: IDENTIFIER ':' param .

    $default  reduce using rule 24 (pc)


State 94

   26 param: expression . ',' param
   27      | expression .
   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86
    ','  shift, and go to state 127

    $default  reduce using rule 27 (param)


State 95

   44 fcall: IDENTIFIER '(' ')' .

    $default  reduce using rule 44 (fcall)


State 96

   43 fcall: IDENTIFIER '(' param . ')'

    ')'  shift, and go to state 128


State 97

   33 stmt: lval ASSIGNMENT expression .
   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 33 (stmt)


State 98

   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression
   83 lval: lval '[' expression . ']'

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86
    ']'  shift, and go to state 129


State 99

    3 header: IDENTIFIER IS type ':' optparam .

    $default  reduce using rule 3 (header)


State 100

   23 type: type '[' CONST . ']'

    ']'  shift, and go to state 130


State 101

   12 ftype: INT .
   14 bp: INT . '[' ']'
   16   | INT . '[' CONST ']'

    '['  shift, and go to state 131

    $default  reduce using rule 12 (ftype)


State 102

   13 ftype: BYTE .
   15 bp: BYTE . '[' ']'
   17   | BYTE . '[' CONST ']'

    '['  shift, and go to state 132

    $default  reduce using rule 13 (ftype)


State 103

    9 ftype: REF . INT
   10      | REF . BYTE

    INT   shift, and go to state 133
    BYTE  shift, and go to state 134


State 104

    7 optparam: idlist AS ftype .
    8         | idlist AS ftype . ',' optparam

    ','  shift, and go to state 135

    $default  reduce using rule 7 (optparam)


State 105

   11 ftype: bp .
   18 bp: bp . '[' CONST ']'

    '['  shift, and go to state 136

    $default  reduce using rule 11 (ftype)


State 106

   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression
   78           | '(' expression . ')'

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86
    ')'  shift, and go to state 108


State 107

   63 condition: '(' condition ')' .

    $default  reduce using rule 63 (condition)


State 108

   78 expression: '(' expression ')' .

    $default  reduce using rule 78 (expression)


State 109

   60 condition: condition . AND condition
   60          | condition AND condition .
   61          | condition . OR condition

    $default  reduce using rule 60 (condition)


State 110

   60 condition: condition . AND condition
   61          | condition . OR condition
   61          | condition OR condition .

    AND  shift, and go to state 72

    $default  reduce using rule 61 (condition)


State 111

   49 mif: IF condition ':' stmt_list . END ELSE ':' stmt_list END
   50    | IF condition ':' stmt_list . END ELIF condition ':' stmt_list END eliftstmt
   51    | IF condition ':' stmt_list . END

    END  shift, and go to state 137


State 112

   56 condition: expression EQ expression .
   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 56 (condition)


State 113

   57 condition: expression DIFF expression .
   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 57 (condition)


State 114

   52 condition: expression LARGER expression .
   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 52 (condition)


State 115

   53 condition: expression SMALLER expression .
   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 53 (condition)


State 116

   54 condition: expression LARGEREQ expression .
   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 54 (condition)


State 117

   55 condition: expression SMALLEREQ expression .
   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 55 (condition)


State 118

   67 expression: expression . '+' expression
   67           | expression '+' expression .
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 67 (expression)


State 119

   67 expression: expression . '+' expression
   68           | expression . '-' expression
   68           | expression '-' expression .
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 68 (expression)


State 120

   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression
   72           | expression '|' expression .

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 72 (expression)


State 121

   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   69           | expression '*' expression .
   70           | expression . '/' expression
   71           | expression . '&' expression
   72           | expression . '|' expression

    $default  reduce using rule 69 (expression)


State 122

   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   70           | expression '/' expression .
   71           | expression . '&' expression
   72           | expression . '|' expression

    $default  reduce using rule 70 (expression)


State 123

   67 expression: expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '&' expression
   71           | expression '&' expression .
   72           | expression . '|' expression

    $default  reduce using rule 71 (expression)


State 124

   47 loop: LOOP IDENTIFIER ':' stmt_list . END

    END  shift, and go to state 138


State 125

   48 loop: LOOP ':' stmt_list END .

    $default  reduce using rule 48 (loop)


State 126

   23 type: type . '[' CONST ']'
   34 stmt: VAR idlist IS type .

    '['  shift, and go to state 62

    $default  reduce using rule 34 (stmt)


State 127

   26 param: expression ',' . param

    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    param       go to state 139
    fcall       go to state 44
    expression  go to state 94
    lval        go to state 47


State 128

   43 fcall: IDENTIFIER '(' param ')' .

    $default  reduce using rule 43 (fcall)


State 129

   83 lval: lval '[' expression ']' .

    $default  reduce using rule 83 (lval)


State 130

   23 type: type '[' CONST ']' .

    $default  reduce using rule 23 (type)


State 131

   14 bp: INT '[' . ']'
   16   | INT '[' . CONST ']'

    CONST  shift, and go to state 140
    ']'    shift, and go to state 141


State 132

   15 bp: BYTE '[' . ']'
   17   | BYTE '[' . CONST ']'

    CONST  shift, and go to state 142
    ']'    shift, and go to state 143


State 133

    9 ftype: REF INT .

    $default  reduce using rule 9 (ftype)


State 134

   10 ftype: REF BYTE .

    $default  reduce using rule 10 (ftype)


State 135

    8 optparam: idlist AS ftype ',' . optparam

    IDENTIFIER  shift, and go to state 31

    optparam  go to state 144
    idlist    go to state 33


State 136

   18 bp: bp '[' . CONST ']'

    CONST  shift, and go to state 145


State 137

   49 mif: IF condition ':' stmt_list END . ELSE ':' stmt_list END
   50    | IF condition ':' stmt_list END . ELIF condition ':' stmt_list END eliftstmt
   51    | IF condition ':' stmt_list END .

    ELSE  shift, and go to state 146
    ELIF  shift, and go to state 147

    $default  reduce using rule 51 (mif)


State 138

   47 loop: LOOP IDENTIFIER ':' stmt_list END .

    $default  reduce using rule 47 (loop)


State 139

   26 param: expression ',' param .

    $default  reduce using rule 26 (param)


State 140

   16 bp: INT '[' CONST . ']'

    ']'  shift, and go to state 148


State 141

   14 bp: INT '[' ']' .

    $default  reduce using rule 14 (bp)


State 142

   17 bp: BYTE '[' CONST . ']'

    ']'  shift, and go to state 149


State 143

   15 bp: BYTE '[' ']' .

    $default  reduce using rule 15 (bp)


State 144

    8 optparam: idlist AS ftype ',' optparam .

    $default  reduce using rule 8 (optparam)


State 145

   18 bp: bp '[' CONST . ']'

    ']'  shift, and go to state 150


State 146

   49 mif: IF condition ':' stmt_list END ELSE . ':' stmt_list END

    ':'  shift, and go to state 151


State 147

   50 mif: IF condition ':' stmt_list END ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 34
    TRUE           shift, and go to state 35
    FALSE          shift, and go to state 36
    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '!'            shift, and go to state 43

    fcall       go to state 44
    condition   go to state 152
    expression  go to state 46
    lval        go to state 47


State 148

   16 bp: INT '[' CONST ']' .

    $default  reduce using rule 16 (bp)


State 149

   17 bp: BYTE '[' CONST ']' .

    $default  reduce using rule 17 (bp)


State 150

   18 bp: bp '[' CONST ']' .

    $default  reduce using rule 18 (bp)


State 151

   49 mif: IF condition ':' stmt_list END ELSE ':' . stmt_list END

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 153
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 152

   50 mif: IF condition ':' stmt_list END ELIF condition . ':' stmt_list END eliftstmt
   60 condition: condition . AND condition
   61          | condition . OR condition

    AND  shift, and go to state 72
    OR   shift, and go to state 73
    ':'  shift, and go to state 154


State 153

   49 mif: IF condition ':' stmt_list END ELSE ':' stmt_list . END

    END  shift, and go to state 155


State 154

   50 mif: IF condition ':' stmt_list END ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 156
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 155

   49 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END .

    $default  reduce using rule 49 (mif)


State 156

   50 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list . END eliftstmt

    END  shift, and go to state 157


State 157

   50 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 158
    ELIF  shift, and go to state 159

    eliftstmt  go to state 160


State 158

   65 eliftstmt: ELSE . ':' stmt_list END

    ':'  shift, and go to state 161


State 159

   66 eliftstmt: ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 34
    TRUE           shift, and go to state 35
    FALSE          shift, and go to state 36
    CONST          shift, and go to state 37
    CHAR_CONST     shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '!'            shift, and go to state 43

    fcall       go to state 44
    condition   go to state 162
    expression  go to state 46
    lval        go to state 47


State 160

   50 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 50 (mif)


State 161

   65 eliftstmt: ELSE ':' . stmt_list END

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 163
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 162

   60 condition: condition . AND condition
   61          | condition . OR condition
   66 eliftstmt: ELIF condition . ':' stmt_list END eliftstmt

    AND  shift, and go to state 72
    OR   shift, and go to state 73
    ':'  shift, and go to state 164


State 163

   65 eliftstmt: ELSE ':' stmt_list . END

    END  shift, and go to state 165


State 164

   66 eliftstmt: ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 166
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 165

   65 eliftstmt: ELSE ':' stmt_list END .

    $default  reduce using rule 65 (eliftstmt)


State 166

   66 eliftstmt: ELIF condition ':' stmt_list . END eliftstmt

    END  shift, and go to state 167


State 167

   66 eliftstmt: ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 158
    ELIF  shift, and go to state 159

    eliftstmt  go to state 168


State 168

   66 eliftstmt: ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 66 (eliftstmt)
