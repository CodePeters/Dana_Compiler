Terminals unused in grammar

   TEOF
   BEG


State 75 conflicts: 1 shift/reduce


Grammar

    0 $accept: mainfunc $end

    1 mainfunc: fdef

    2 fdef: DEF header decl_list END

    3 fdecl: DECL header

    4 header: IDENTIFIER IS type ':' optparam
    5       | IDENTIFIER IS type
    6       | IDENTIFIER ':' optparam
    7       | IDENTIFIER

    8 optparam: idlist AS ftype
    9         | idlist AS reftype
   10         | idlist AS ftype ',' optparam
   11         | idlist AS reftype ',' optparam

   12 ftype: bp
   13      | INT
   14      | BYTE

   15 reftype: REF INT
   16        | REF BYTE

   17 bp: INT '[' ']'
   18   | BYTE '[' ']'
   19   | INT '[' CONST ']'
   20   | BYTE '[' CONST ']'
   21   | bp '[' CONST ']'

   22 stmt_list: stmt
   23          | stmt stmt_list

   24 decl_list: stmt_list
   25          | decl decl_list

   26 decl: fdef
   27     | fdecl
   28     | VAR idlist IS type

   29 type: type '[' CONST ']'
   30     | type_term

   31 type_term: INT
   32          | BYTE

   33 pc: IDENTIFIER ':' param
   34   | IDENTIFIER

   35 param: expression ',' param
   36      | expression

   37 stmt: SKIP
   38     | mif
   39     | loop
   40     | lval ASSIGNMENT expression
   41     | BREAK
   42     | BREAK ':' IDENTIFIER
   43     | CONT
   44     | CONT ':' IDENTIFIER
   45     | EXIT
   46     | RETURN ':' expression
   47     | pc
   48     | fcall

   49 fcall: IDENTIFIER '(' param ')'
   50      | IDENTIFIER '(' ')'

   51 idlist: IDENTIFIER
   52       | idlist IDENTIFIER

   53 loop: LOOP IDENTIFIER ':' stmt_list END
   54     | LOOP ':' stmt_list END

   55 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END
   56    | IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   57    | IF condition ':' stmt_list END

   58 condition: expression LARGER expression
   59          | expression SMALLER expression
   60          | expression LARGEREQ expression
   61          | expression SMALLEREQ expression
   62          | expression EQ expression
   63          | expression DIFF expression
   64          | TRUE
   65          | FALSE
   66          | condition AND condition
   67          | condition OR condition
   68          | NOT condition
   69          | '(' condition ')'
   70          | expression

   71 eliftstmt: ELSE ':' stmt_list END
   72          | %empty
   73          | ELIF condition ':' stmt_list END eliftstmt

   74 expression: expression '+' expression
   75           | expression '-' expression
   76           | expression '*' expression
   77           | expression '/' expression
   78           | expression '%' expression
   79           | expression '&' expression
   80           | expression '|' expression
   81           | '+' expression
   82           | '-' expression
   83           | '!' expression
   84           | lval
   85           | CONST
   86           | '(' expression ')'
   87           | fcall
   88           | CHAR_CONST

   89 lval: IDENTIFIER
   90     | STRINGLITERAL
   91     | lval '[' expression ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 83
'%' (37) 78
'&' (38) 79
'(' (40) 49 50 69 86
')' (41) 49 50 69 86
'*' (42) 76
'+' (43) 74 81
',' (44) 10 11 35
'-' (45) 75 82
'/' (47) 77
':' (58) 4 6 33 42 44 46 53 54 55 56 57 71 73
'[' (91) 17 18 19 20 21 29 91
']' (93) 17 18 19 20 21 29 91
'|' (124) 80
error (256)
INT (258) 13 15 17 19 31
BYTE (259) 14 16 18 20 32
IF (260) 55 56 57
ELSE (261) 55 71
LOOP (262) 53 54
AS (263) 8 9 10 11
SKIP (264) 37
DECL (265) 3
DEF (266) 2
END (267) 2 53 54 55 56 57 71 73
VAR (268) 28
IS (269) 4 5 28
TEOF (270)
EQ (271) 62
DIFF (272) 63
LARGER (273) 58
SMALLER (274) 59
RETURN (275) 46
EXIT (276) 45
REF (277) 15 16
LARGEREQ (278) 60
SMALLEREQ (279) 61
ASSIGNMENT (280) 40
AND (281) 66
NOT (282) 68
OR (283) 67
ELIF (284) 56 73
TRUE (285) 64
FALSE (286) 65
BREAK (287) 41 42
CONT (288) 43 44
BEG (289)
CONST (290) 19 20 21 29 85
CHAR_CONST (291) 88
IDENTIFIER (292) 4 5 6 7 33 34 42 44 49 50 51 52 53 89
STRINGLITERAL (293) 90
UNARYPL (294)
UNARYMINUS (295)
BANG (296)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
mainfunc (57)
    on left: 1, on right: 0
fdef (58)
    on left: 2, on right: 1 26
fdecl (59)
    on left: 3, on right: 27
header (60)
    on left: 4 5 6 7, on right: 2 3
optparam (61)
    on left: 8 9 10 11, on right: 4 6 10 11
ftype (62)
    on left: 12 13 14, on right: 8 10
reftype (63)
    on left: 15 16, on right: 9 11
bp (64)
    on left: 17 18 19 20 21, on right: 12 21
stmt_list (65)
    on left: 22 23, on right: 23 24 53 54 55 56 57 71 73
decl_list (66)
    on left: 24 25, on right: 2 25
decl (67)
    on left: 26 27 28, on right: 25
type (68)
    on left: 29 30, on right: 4 5 28 29
type_term (69)
    on left: 31 32, on right: 30
pc (70)
    on left: 33 34, on right: 47
param (71)
    on left: 35 36, on right: 33 35 49
stmt (72)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48, on right: 22 23
fcall (73)
    on left: 49 50, on right: 48 87
idlist (74)
    on left: 51 52, on right: 8 9 10 11 28 52
loop (75)
    on left: 53 54, on right: 39
mif (76)
    on left: 55 56 57, on right: 38
condition (77)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70, on right: 55 56
    57 66 67 68 69 73
eliftstmt (78)
    on left: 71 72 73, on right: 56 73
expression (79)
    on left: 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88, on right:
    35 36 40 46 58 59 60 61 62 63 70 74 75 76 77 78 79 80 81 82 83
    86 91
lval (80)
    on left: 89 90 91, on right: 40 84 91


State 0

    0 $accept: . mainfunc $end

    DEF  shift, and go to state 1

    mainfunc  go to state 2
    fdef      go to state 3


State 1

    2 fdef: DEF . header decl_list END

    IDENTIFIER  shift, and go to state 4

    header  go to state 5


State 2

    0 $accept: mainfunc . $end

    $end  shift, and go to state 6


State 3

    1 mainfunc: fdef .

    $default  reduce using rule 1 (mainfunc)


State 4

    4 header: IDENTIFIER . IS type ':' optparam
    5       | IDENTIFIER . IS type
    6       | IDENTIFIER . ':' optparam
    7       | IDENTIFIER .

    IS   shift, and go to state 7
    ':'  shift, and go to state 8

    $default  reduce using rule 7 (header)


State 5

    2 fdef: DEF header . decl_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 22
    decl_list  go to state 23
    decl       go to state 24
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29
    lval       go to state 30


State 6

    0 $accept: mainfunc $end .

    $default  accept


State 7

    4 header: IDENTIFIER IS . type ':' optparam
    5       | IDENTIFIER IS . type

    INT   shift, and go to state 31
    BYTE  shift, and go to state 32

    type       go to state 33
    type_term  go to state 34


State 8

    6 header: IDENTIFIER ':' . optparam

    IDENTIFIER  shift, and go to state 35

    optparam  go to state 36
    idlist    go to state 37


State 9

   55 mif: IF . condition ':' stmt_list END ELSE ':' stmt_list END
   56    | IF . condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   57    | IF . condition ':' stmt_list END

    NOT            shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 46
    '!'            shift, and go to state 47

    fcall       go to state 48
    condition   go to state 49
    expression  go to state 50
    lval        go to state 51


State 10

   53 loop: LOOP . IDENTIFIER ':' stmt_list END
   54     | LOOP . ':' stmt_list END

    IDENTIFIER  shift, and go to state 52
    ':'         shift, and go to state 53


State 11

   37 stmt: SKIP .

    $default  reduce using rule 37 (stmt)


State 12

    3 fdecl: DECL . header

    IDENTIFIER  shift, and go to state 4

    header  go to state 54


State 13

   28 decl: VAR . idlist IS type

    IDENTIFIER  shift, and go to state 35

    idlist  go to state 55


State 14

   46 stmt: RETURN . ':' expression

    ':'  shift, and go to state 56


State 15

   45 stmt: EXIT .

    $default  reduce using rule 45 (stmt)


State 16

   41 stmt: BREAK .
   42     | BREAK . ':' IDENTIFIER

    ':'  shift, and go to state 57

    $default  reduce using rule 41 (stmt)


State 17

   43 stmt: CONT .
   44     | CONT . ':' IDENTIFIER

    ':'  shift, and go to state 58

    $default  reduce using rule 43 (stmt)


State 18

   33 pc: IDENTIFIER . ':' param
   34   | IDENTIFIER .
   49 fcall: IDENTIFIER . '(' param ')'
   50      | IDENTIFIER . '(' ')'
   89 lval: IDENTIFIER .

    ':'  shift, and go to state 59
    '('  shift, and go to state 60

    ASSIGNMENT  reduce using rule 89 (lval)
    '['         reduce using rule 89 (lval)
    $default    reduce using rule 34 (pc)


State 19

   90 lval: STRINGLITERAL .

    $default  reduce using rule 90 (lval)


State 20

   26 decl: fdef .

    $default  reduce using rule 26 (decl)


State 21

   27 decl: fdecl .

    $default  reduce using rule 27 (decl)


State 22

   24 decl_list: stmt_list .

    $default  reduce using rule 24 (decl_list)


State 23

    2 fdef: DEF header decl_list . END

    END  shift, and go to state 61


State 24

   25 decl_list: decl . decl_list

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 22
    decl_list  go to state 62
    decl       go to state 24
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29
    lval       go to state 30


State 25

   47 stmt: pc .

    $default  reduce using rule 47 (stmt)


State 26

   22 stmt_list: stmt .
   23          | stmt . stmt_list

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    $default  reduce using rule 22 (stmt_list)

    stmt_list  go to state 63
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29
    lval       go to state 30


State 27

   48 stmt: fcall .

    $default  reduce using rule 48 (stmt)


State 28

   39 stmt: loop .

    $default  reduce using rule 39 (stmt)


State 29

   38 stmt: mif .

    $default  reduce using rule 38 (stmt)


State 30

   40 stmt: lval . ASSIGNMENT expression
   91 lval: lval . '[' expression ']'

    ASSIGNMENT  shift, and go to state 64
    '['         shift, and go to state 65


State 31

   31 type_term: INT .

    $default  reduce using rule 31 (type_term)


State 32

   32 type_term: BYTE .

    $default  reduce using rule 32 (type_term)


State 33

    4 header: IDENTIFIER IS type . ':' optparam
    5       | IDENTIFIER IS type .
   29 type: type . '[' CONST ']'

    ':'  shift, and go to state 66
    '['  shift, and go to state 67

    $default  reduce using rule 5 (header)


State 34

   30 type: type_term .

    $default  reduce using rule 30 (type)


State 35

   51 idlist: IDENTIFIER .

    $default  reduce using rule 51 (idlist)


State 36

    6 header: IDENTIFIER ':' optparam .

    $default  reduce using rule 6 (header)


State 37

    8 optparam: idlist . AS ftype
    9         | idlist . AS reftype
   10         | idlist . AS ftype ',' optparam
   11         | idlist . AS reftype ',' optparam
   52 idlist: idlist . IDENTIFIER

    AS          shift, and go to state 68
    IDENTIFIER  shift, and go to state 69


State 38

   68 condition: NOT . condition

    NOT            shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 46
    '!'            shift, and go to state 47

    fcall       go to state 48
    condition   go to state 70
    expression  go to state 50
    lval        go to state 51


State 39

   64 condition: TRUE .

    $default  reduce using rule 64 (condition)


State 40

   65 condition: FALSE .

    $default  reduce using rule 65 (condition)


State 41

   85 expression: CONST .

    $default  reduce using rule 85 (expression)


State 42

   88 expression: CHAR_CONST .

    $default  reduce using rule 88 (expression)


State 43

   49 fcall: IDENTIFIER . '(' param ')'
   50      | IDENTIFIER . '(' ')'
   89 lval: IDENTIFIER .

    '('  shift, and go to state 60

    $default  reduce using rule 89 (lval)


State 44

   81 expression: '+' . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 72
    lval        go to state 51


State 45

   82 expression: '-' . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 73
    lval        go to state 51


State 46

   69 condition: '(' . condition ')'
   86 expression: '(' . expression ')'

    NOT            shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 46
    '!'            shift, and go to state 47

    fcall       go to state 48
    condition   go to state 74
    expression  go to state 75
    lval        go to state 51


State 47

   83 expression: '!' . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 76
    lval        go to state 51


State 48

   87 expression: fcall .

    $default  reduce using rule 87 (expression)


State 49

   55 mif: IF condition . ':' stmt_list END ELSE ':' stmt_list END
   56    | IF condition . ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   57    | IF condition . ':' stmt_list END
   66 condition: condition . AND condition
   67          | condition . OR condition

    AND  shift, and go to state 77
    OR   shift, and go to state 78
    ':'  shift, and go to state 79


State 50

   58 condition: expression . LARGER expression
   59          | expression . SMALLER expression
   60          | expression . LARGEREQ expression
   61          | expression . SMALLEREQ expression
   62          | expression . EQ expression
   63          | expression . DIFF expression
   70          | expression .
   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression

    EQ         shift, and go to state 80
    DIFF       shift, and go to state 81
    LARGER     shift, and go to state 82
    SMALLER    shift, and go to state 83
    LARGEREQ   shift, and go to state 84
    SMALLEREQ  shift, and go to state 85
    '+'        shift, and go to state 86
    '-'        shift, and go to state 87
    '|'        shift, and go to state 88
    '*'        shift, and go to state 89
    '/'        shift, and go to state 90
    '&'        shift, and go to state 91
    '%'        shift, and go to state 92

    $default  reduce using rule 70 (condition)


State 51

   84 expression: lval .
   91 lval: lval . '[' expression ']'

    '['  shift, and go to state 65

    $default  reduce using rule 84 (expression)


State 52

   53 loop: LOOP IDENTIFIER . ':' stmt_list END

    ':'  shift, and go to state 93


State 53

   54 loop: LOOP ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    stmt_list  go to state 94
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29
    lval       go to state 30


State 54

    3 fdecl: DECL header .

    $default  reduce using rule 3 (fdecl)


State 55

   28 decl: VAR idlist . IS type
   52 idlist: idlist . IDENTIFIER

    IS          shift, and go to state 95
    IDENTIFIER  shift, and go to state 69


State 56

   46 stmt: RETURN ':' . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 96
    lval        go to state 51


State 57

   42 stmt: BREAK ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 97


State 58

   44 stmt: CONT ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 98


State 59

   33 pc: IDENTIFIER ':' . param

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    param       go to state 99
    fcall       go to state 48
    expression  go to state 100
    lval        go to state 51


State 60

   49 fcall: IDENTIFIER '(' . param ')'
   50      | IDENTIFIER '(' . ')'

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    ')'            shift, and go to state 101
    '!'            shift, and go to state 47

    param       go to state 102
    fcall       go to state 48
    expression  go to state 100
    lval        go to state 51


State 61

    2 fdef: DEF header decl_list END .

    $default  reduce using rule 2 (fdef)


State 62

   25 decl_list: decl decl_list .

    $default  reduce using rule 25 (decl_list)


State 63

   23 stmt_list: stmt stmt_list .

    $default  reduce using rule 23 (stmt_list)


State 64

   40 stmt: lval ASSIGNMENT . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 103
    lval        go to state 51


State 65

   91 lval: lval '[' . expression ']'

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 104
    lval        go to state 51


State 66

    4 header: IDENTIFIER IS type ':' . optparam

    IDENTIFIER  shift, and go to state 35

    optparam  go to state 105
    idlist    go to state 37


State 67

   29 type: type '[' . CONST ']'

    CONST  shift, and go to state 106


State 68

    8 optparam: idlist AS . ftype
    9         | idlist AS . reftype
   10         | idlist AS . ftype ',' optparam
   11         | idlist AS . reftype ',' optparam

    INT   shift, and go to state 107
    BYTE  shift, and go to state 108
    REF   shift, and go to state 109

    ftype    go to state 110
    reftype  go to state 111
    bp       go to state 112


State 69

   52 idlist: idlist IDENTIFIER .

    $default  reduce using rule 52 (idlist)


State 70

   66 condition: condition . AND condition
   67          | condition . OR condition
   68          | NOT condition .

    $default  reduce using rule 68 (condition)


State 71

   86 expression: '(' . expression ')'

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 113
    lval        go to state 51


State 72

   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression
   81           | '+' expression .

    $default  reduce using rule 81 (expression)


State 73

   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression
   82           | '-' expression .

    $default  reduce using rule 82 (expression)


State 74

   66 condition: condition . AND condition
   67          | condition . OR condition
   69          | '(' condition . ')'

    AND  shift, and go to state 77
    OR   shift, and go to state 78
    ')'  shift, and go to state 114


State 75

   58 condition: expression . LARGER expression
   59          | expression . SMALLER expression
   60          | expression . LARGEREQ expression
   61          | expression . SMALLEREQ expression
   62          | expression . EQ expression
   63          | expression . DIFF expression
   70          | expression .
   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression
   86           | '(' expression . ')'

    EQ         shift, and go to state 80
    DIFF       shift, and go to state 81
    LARGER     shift, and go to state 82
    SMALLER    shift, and go to state 83
    LARGEREQ   shift, and go to state 84
    SMALLEREQ  shift, and go to state 85
    '+'        shift, and go to state 86
    '-'        shift, and go to state 87
    '|'        shift, and go to state 88
    '*'        shift, and go to state 89
    '/'        shift, and go to state 90
    '&'        shift, and go to state 91
    '%'        shift, and go to state 92
    ')'        shift, and go to state 115

    ')'       [reduce using rule 70 (condition)]
    $default  reduce using rule 70 (condition)


State 76

   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression
   83           | '!' expression .

    $default  reduce using rule 83 (expression)


State 77

   66 condition: condition AND . condition

    NOT            shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 46
    '!'            shift, and go to state 47

    fcall       go to state 48
    condition   go to state 116
    expression  go to state 50
    lval        go to state 51


State 78

   67 condition: condition OR . condition

    NOT            shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 46
    '!'            shift, and go to state 47

    fcall       go to state 48
    condition   go to state 117
    expression  go to state 50
    lval        go to state 51


State 79

   55 mif: IF condition ':' . stmt_list END ELSE ':' stmt_list END
   56    | IF condition ':' . stmt_list END ELIF condition ':' stmt_list END eliftstmt
   57    | IF condition ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    stmt_list  go to state 118
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29
    lval       go to state 30


State 80

   62 condition: expression EQ . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 119
    lval        go to state 51


State 81

   63 condition: expression DIFF . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 120
    lval        go to state 51


State 82

   58 condition: expression LARGER . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 121
    lval        go to state 51


State 83

   59 condition: expression SMALLER . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 122
    lval        go to state 51


State 84

   60 condition: expression LARGEREQ . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 123
    lval        go to state 51


State 85

   61 condition: expression SMALLEREQ . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 124
    lval        go to state 51


State 86

   74 expression: expression '+' . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 125
    lval        go to state 51


State 87

   75 expression: expression '-' . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 126
    lval        go to state 51


State 88

   80 expression: expression '|' . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 127
    lval        go to state 51


State 89

   76 expression: expression '*' . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 128
    lval        go to state 51


State 90

   77 expression: expression '/' . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 129
    lval        go to state 51


State 91

   79 expression: expression '&' . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 130
    lval        go to state 51


State 92

   78 expression: expression '%' . expression

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    fcall       go to state 48
    expression  go to state 131
    lval        go to state 51


State 93

   53 loop: LOOP IDENTIFIER ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    stmt_list  go to state 132
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29
    lval       go to state 30


State 94

   54 loop: LOOP ':' stmt_list . END

    END  shift, and go to state 133


State 95

   28 decl: VAR idlist IS . type

    INT   shift, and go to state 31
    BYTE  shift, and go to state 32

    type       go to state 134
    type_term  go to state 34


State 96

   46 stmt: RETURN ':' expression .
   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    '%'  shift, and go to state 92

    $default  reduce using rule 46 (stmt)


State 97

   42 stmt: BREAK ':' IDENTIFIER .

    $default  reduce using rule 42 (stmt)


State 98

   44 stmt: CONT ':' IDENTIFIER .

    $default  reduce using rule 44 (stmt)


State 99

   33 pc: IDENTIFIER ':' param .

    $default  reduce using rule 33 (pc)


State 100

   35 param: expression . ',' param
   36      | expression .
   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    '%'  shift, and go to state 92
    ','  shift, and go to state 135

    $default  reduce using rule 36 (param)


State 101

   50 fcall: IDENTIFIER '(' ')' .

    $default  reduce using rule 50 (fcall)


State 102

   49 fcall: IDENTIFIER '(' param . ')'

    ')'  shift, and go to state 136


State 103

   40 stmt: lval ASSIGNMENT expression .
   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    '%'  shift, and go to state 92

    $default  reduce using rule 40 (stmt)


State 104

   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression
   91 lval: lval '[' expression . ']'

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    '%'  shift, and go to state 92
    ']'  shift, and go to state 137


State 105

    4 header: IDENTIFIER IS type ':' optparam .

    $default  reduce using rule 4 (header)


State 106

   29 type: type '[' CONST . ']'

    ']'  shift, and go to state 138


State 107

   13 ftype: INT .
   17 bp: INT . '[' ']'
   19   | INT . '[' CONST ']'

    '['  shift, and go to state 139

    $default  reduce using rule 13 (ftype)


State 108

   14 ftype: BYTE .
   18 bp: BYTE . '[' ']'
   20   | BYTE . '[' CONST ']'

    '['  shift, and go to state 140

    $default  reduce using rule 14 (ftype)


State 109

   15 reftype: REF . INT
   16        | REF . BYTE

    INT   shift, and go to state 141
    BYTE  shift, and go to state 142


State 110

    8 optparam: idlist AS ftype .
   10         | idlist AS ftype . ',' optparam

    ','  shift, and go to state 143

    $default  reduce using rule 8 (optparam)


State 111

    9 optparam: idlist AS reftype .
   11         | idlist AS reftype . ',' optparam

    ','  shift, and go to state 144

    $default  reduce using rule 9 (optparam)


State 112

   12 ftype: bp .
   21 bp: bp . '[' CONST ']'

    '['  shift, and go to state 145

    $default  reduce using rule 12 (ftype)


State 113

   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression
   86           | '(' expression . ')'

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    '%'  shift, and go to state 92
    ')'  shift, and go to state 115


State 114

   69 condition: '(' condition ')' .

    $default  reduce using rule 69 (condition)


State 115

   86 expression: '(' expression ')' .

    $default  reduce using rule 86 (expression)


State 116

   66 condition: condition . AND condition
   66          | condition AND condition .
   67          | condition . OR condition

    $default  reduce using rule 66 (condition)


State 117

   66 condition: condition . AND condition
   67          | condition . OR condition
   67          | condition OR condition .

    AND  shift, and go to state 77

    $default  reduce using rule 67 (condition)


State 118

   55 mif: IF condition ':' stmt_list . END ELSE ':' stmt_list END
   56    | IF condition ':' stmt_list . END ELIF condition ':' stmt_list END eliftstmt
   57    | IF condition ':' stmt_list . END

    END  shift, and go to state 146


State 119

   62 condition: expression EQ expression .
   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    '%'  shift, and go to state 92

    $default  reduce using rule 62 (condition)


State 120

   63 condition: expression DIFF expression .
   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    '%'  shift, and go to state 92

    $default  reduce using rule 63 (condition)


State 121

   58 condition: expression LARGER expression .
   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    '%'  shift, and go to state 92

    $default  reduce using rule 58 (condition)


State 122

   59 condition: expression SMALLER expression .
   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    '%'  shift, and go to state 92

    $default  reduce using rule 59 (condition)


State 123

   60 condition: expression LARGEREQ expression .
   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    '%'  shift, and go to state 92

    $default  reduce using rule 60 (condition)


State 124

   61 condition: expression SMALLEREQ expression .
   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    '%'  shift, and go to state 92

    $default  reduce using rule 61 (condition)


State 125

   74 expression: expression . '+' expression
   74           | expression '+' expression .
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    '%'  shift, and go to state 92

    $default  reduce using rule 74 (expression)


State 126

   74 expression: expression . '+' expression
   75           | expression . '-' expression
   75           | expression '-' expression .
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    '%'  shift, and go to state 92

    $default  reduce using rule 75 (expression)


State 127

   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression
   80           | expression '|' expression .

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    '%'  shift, and go to state 92

    $default  reduce using rule 80 (expression)


State 128

   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   76           | expression '*' expression .
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression

    $default  reduce using rule 76 (expression)


State 129

   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   77           | expression '/' expression .
   78           | expression . '%' expression
   79           | expression . '&' expression
   80           | expression . '|' expression

    $default  reduce using rule 77 (expression)


State 130

   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   79           | expression . '&' expression
   79           | expression '&' expression .
   80           | expression . '|' expression

    $default  reduce using rule 79 (expression)


State 131

   74 expression: expression . '+' expression
   75           | expression . '-' expression
   76           | expression . '*' expression
   77           | expression . '/' expression
   78           | expression . '%' expression
   78           | expression '%' expression .
   79           | expression . '&' expression
   80           | expression . '|' expression

    $default  reduce using rule 78 (expression)


State 132

   53 loop: LOOP IDENTIFIER ':' stmt_list . END

    END  shift, and go to state 147


State 133

   54 loop: LOOP ':' stmt_list END .

    $default  reduce using rule 54 (loop)


State 134

   28 decl: VAR idlist IS type .
   29 type: type . '[' CONST ']'

    '['  shift, and go to state 67

    $default  reduce using rule 28 (decl)


State 135

   35 param: expression ',' . param

    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 71
    '!'            shift, and go to state 47

    param       go to state 148
    fcall       go to state 48
    expression  go to state 100
    lval        go to state 51


State 136

   49 fcall: IDENTIFIER '(' param ')' .

    $default  reduce using rule 49 (fcall)


State 137

   91 lval: lval '[' expression ']' .

    $default  reduce using rule 91 (lval)


State 138

   29 type: type '[' CONST ']' .

    $default  reduce using rule 29 (type)


State 139

   17 bp: INT '[' . ']'
   19   | INT '[' . CONST ']'

    CONST  shift, and go to state 149
    ']'    shift, and go to state 150


State 140

   18 bp: BYTE '[' . ']'
   20   | BYTE '[' . CONST ']'

    CONST  shift, and go to state 151
    ']'    shift, and go to state 152


State 141

   15 reftype: REF INT .

    $default  reduce using rule 15 (reftype)


State 142

   16 reftype: REF BYTE .

    $default  reduce using rule 16 (reftype)


State 143

   10 optparam: idlist AS ftype ',' . optparam

    IDENTIFIER  shift, and go to state 35

    optparam  go to state 153
    idlist    go to state 37


State 144

   11 optparam: idlist AS reftype ',' . optparam

    IDENTIFIER  shift, and go to state 35

    optparam  go to state 154
    idlist    go to state 37


State 145

   21 bp: bp '[' . CONST ']'

    CONST  shift, and go to state 155


State 146

   55 mif: IF condition ':' stmt_list END . ELSE ':' stmt_list END
   56    | IF condition ':' stmt_list END . ELIF condition ':' stmt_list END eliftstmt
   57    | IF condition ':' stmt_list END .

    ELSE  shift, and go to state 156
    ELIF  shift, and go to state 157

    $default  reduce using rule 57 (mif)


State 147

   53 loop: LOOP IDENTIFIER ':' stmt_list END .

    $default  reduce using rule 53 (loop)


State 148

   35 param: expression ',' param .

    $default  reduce using rule 35 (param)


State 149

   19 bp: INT '[' CONST . ']'

    ']'  shift, and go to state 158


State 150

   17 bp: INT '[' ']' .

    $default  reduce using rule 17 (bp)


State 151

   20 bp: BYTE '[' CONST . ']'

    ']'  shift, and go to state 159


State 152

   18 bp: BYTE '[' ']' .

    $default  reduce using rule 18 (bp)


State 153

   10 optparam: idlist AS ftype ',' optparam .

    $default  reduce using rule 10 (optparam)


State 154

   11 optparam: idlist AS reftype ',' optparam .

    $default  reduce using rule 11 (optparam)


State 155

   21 bp: bp '[' CONST . ']'

    ']'  shift, and go to state 160


State 156

   55 mif: IF condition ':' stmt_list END ELSE . ':' stmt_list END

    ':'  shift, and go to state 161


State 157

   56 mif: IF condition ':' stmt_list END ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 46
    '!'            shift, and go to state 47

    fcall       go to state 48
    condition   go to state 162
    expression  go to state 50
    lval        go to state 51


State 158

   19 bp: INT '[' CONST ']' .

    $default  reduce using rule 19 (bp)


State 159

   20 bp: BYTE '[' CONST ']' .

    $default  reduce using rule 20 (bp)


State 160

   21 bp: bp '[' CONST ']' .

    $default  reduce using rule 21 (bp)


State 161

   55 mif: IF condition ':' stmt_list END ELSE ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    stmt_list  go to state 163
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29
    lval       go to state 30


State 162

   56 mif: IF condition ':' stmt_list END ELIF condition . ':' stmt_list END eliftstmt
   66 condition: condition . AND condition
   67          | condition . OR condition

    AND  shift, and go to state 77
    OR   shift, and go to state 78
    ':'  shift, and go to state 164


State 163

   55 mif: IF condition ':' stmt_list END ELSE ':' stmt_list . END

    END  shift, and go to state 165


State 164

   56 mif: IF condition ':' stmt_list END ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    stmt_list  go to state 166
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29
    lval       go to state 30


State 165

   55 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END .

    $default  reduce using rule 55 (mif)


State 166

   56 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list . END eliftstmt

    END  shift, and go to state 167


State 167

   56 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 168
    ELIF  shift, and go to state 169

    $default  reduce using rule 72 (eliftstmt)

    eliftstmt  go to state 170


State 168

   71 eliftstmt: ELSE . ':' stmt_list END

    ':'  shift, and go to state 171


State 169

   73 eliftstmt: ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    CONST          shift, and go to state 41
    CHAR_CONST     shift, and go to state 42
    IDENTIFIER     shift, and go to state 43
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 44
    '-'            shift, and go to state 45
    '('            shift, and go to state 46
    '!'            shift, and go to state 47

    fcall       go to state 48
    condition   go to state 172
    expression  go to state 50
    lval        go to state 51


State 170

   56 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 56 (mif)


State 171

   71 eliftstmt: ELSE ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    stmt_list  go to state 173
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29
    lval       go to state 30


State 172

   66 condition: condition . AND condition
   67          | condition . OR condition
   73 eliftstmt: ELIF condition . ':' stmt_list END eliftstmt

    AND  shift, and go to state 77
    OR   shift, and go to state 78
    ':'  shift, and go to state 174


State 173

   71 eliftstmt: ELSE ':' stmt_list . END

    END  shift, and go to state 175


State 174

   73 eliftstmt: ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    stmt_list  go to state 176
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29
    lval       go to state 30


State 175

   71 eliftstmt: ELSE ':' stmt_list END .

    $default  reduce using rule 71 (eliftstmt)


State 176

   73 eliftstmt: ELIF condition ':' stmt_list . END eliftstmt

    END  shift, and go to state 177


State 177

   73 eliftstmt: ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 168
    ELIF  shift, and go to state 169

    $default  reduce using rule 72 (eliftstmt)

    eliftstmt  go to state 178


State 178

   73 eliftstmt: ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 73 (eliftstmt)
