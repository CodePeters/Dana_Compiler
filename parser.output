Grammar

    0 $accept: fdef $end

    1 fdef: DEF header BEG stmt_list END

    2 fdecl: DECL header

    3 header: IDENTIFIER opt
    4       | IDENTIFIER ':' optparam
    5       | IDENTIFIER

    6 opt: IS type ':' optparam
    7    | IS type

    8 optparam: IDENTIFIER AS type
    9         | IDENTIFIER AS type ',' optparam

   10 stmt_list: stmt
   11          | stmt_list stmt

   12 lval: IDENTIFIER
   13     | STRINGLITERAL
   14     | lval '[' expression ']'

   15 type: INT '[' CONST ']'
   16     | BYTE '[' CONST ']'
   17     | INT
   18     | BYTE

   19 pc: IDENTIFIER ':' param
   20   | IDENTIFIER

   21 param: expression ',' param
   22      | expression

   23 stmt: SKIP
   24     | pc
   25     | mif
   26     | fdef
   27     | loop
   28     | lval ASSIGNMENT expression
   29     | VAR idlist IS type
   30     | BREAK
   31     | BREAK ':' IDENTIFIER
   32     | CONT
   33     | CONT ':' IDENTIFIER
   34     | fdecl
   35     | EXIT
   36     | RETURN ':' expression

   37 idlist: IDENTIFIER
   38       | IDENTIFIER idlist

   39 loop: LOOP IDENTIFIER ':' BEG stmt_list END
   40     | LOOP ':' BEG stmt_list END

   41 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   42    | IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   43    | IF condition ':' BEG stmt_list END

   44 condition: expression LARGER expression
   45          | expression SMALLER expression
   46          | expression LARGEREQ expression
   47          | expression SMALLEREQ expression
   48          | expression EQ expression
   49          | expression DIFF expression
   50          | TRUE
   51          | FALSE
   52          | condition AND condition
   53          | condition OR condition
   54          | NOT condition
   55          | '(' condition ')'

   56 eliftstmt: ELSE ':' BEG stmt_list END
   57          | ELIF expression ':' BEG stmt_list END eliftstmt

   58 expression: expression '+' expression
   59           | expression '-' expression
   60           | expression '*' expression
   61           | expression '/' expression
   62           | expression '&' expression
   63           | expression '|' expression
   64           | '+' expression
   65           | '-' expression
   66           | '!' expression
   67           | IDENTIFIER
   68           | STRINGLITERAL
   69           | CONST
   70           | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 66
'&' (38) 62
'(' (40) 55 70
')' (41) 55 70
'*' (42) 60
'+' (43) 58 64
',' (44) 9 21
'-' (45) 59 65
'/' (47) 61
':' (58) 4 6 19 31 33 36 39 40 41 42 43 56 57
'[' (91) 14 15 16
']' (93) 14 15 16
'|' (124) 63
error (256)
IDENTIFIER (258) 3 4 5 8 9 12 19 20 31 33 37 38 39 67
INT (259) 15 17
BYTE (260) 16 18
IF (261) 41 42 43
ELSE (262) 41 56
STRINGLITERAL (263) 13 68
LOOP (264) 39 40
AS (265) 8 9
SKIP (266) 23
DECL (267) 2
DEF (268) 1
BEG (269) 1 39 40 41 42 43 56 57
END (270) 1 39 40 41 42 43 56 57
VAR (271) 29
IS (272) 6 7 29
EQ (273) 48
DIFF (274) 49
LARGER (275) 44
SMALLER (276) 45
RETURN (277) 36
EXIT (278) 35
LARGEREQ (279) 46
SMALLEREQ (280) 47
ASSIGNMENT (281) 28
CONST (282) 15 16 69
AND (283) 52
NOT (284) 54
OR (285) 53
ELIF (286) 42 57
TRUE (287) 50
FALSE (288) 51
BREAK (289) 30 31
CONT (290) 32 33
UNARYPL (291)
UNARYMINUS (292)
BANGBANG (293)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
fdef (53)
    on left: 1, on right: 0 26
fdecl (54)
    on left: 2, on right: 34
header (55)
    on left: 3 4 5, on right: 1 2
opt (56)
    on left: 6 7, on right: 3
optparam (57)
    on left: 8 9, on right: 4 6 9
stmt_list (58)
    on left: 10 11, on right: 1 11 39 40 41 42 43 56 57
lval (59)
    on left: 12 13 14, on right: 14 28
type (60)
    on left: 15 16 17 18, on right: 6 7 8 9 29
pc (61)
    on left: 19 20, on right: 24
param (62)
    on left: 21 22, on right: 19 21
stmt (63)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36, on right: 10
    11
idlist (64)
    on left: 37 38, on right: 29 38
loop (65)
    on left: 39 40, on right: 27
mif (66)
    on left: 41 42 43, on right: 25
condition (67)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55, on right: 41 43 52
    53 54 55
eliftstmt (68)
    on left: 56 57, on right: 42 57
expression (69)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70, on right: 14 21
    22 28 36 42 44 45 46 47 48 49 57 58 59 60 61 62 63 64 65 66 70


State 0

    0 $accept: . fdef $end

    DEF  shift, and go to state 1

    fdef  go to state 2


State 1

    1 fdef: DEF . header BEG stmt_list END

    IDENTIFIER  shift, and go to state 3

    header  go to state 4


State 2

    0 $accept: fdef . $end

    $end  shift, and go to state 5


State 3

    3 header: IDENTIFIER . opt
    4       | IDENTIFIER . ':' optparam
    5       | IDENTIFIER .

    IS   shift, and go to state 6
    ':'  shift, and go to state 7

    $default  reduce using rule 5 (header)

    opt  go to state 8


State 4

    1 fdef: DEF header . BEG stmt_list END

    BEG  shift, and go to state 9


State 5

    0 $accept: fdef $end .

    $default  accept


State 6

    6 opt: IS . type ':' optparam
    7    | IS . type

    INT   shift, and go to state 10
    BYTE  shift, and go to state 11

    type  go to state 12


State 7

    4 header: IDENTIFIER ':' . optparam

    IDENTIFIER  shift, and go to state 13

    optparam  go to state 14


State 8

    3 header: IDENTIFIER opt .

    $default  reduce using rule 3 (header)


State 9

    1 fdef: DEF header BEG . stmt_list END

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef       go to state 26
    fdecl      go to state 27
    stmt_list  go to state 28
    lval       go to state 29
    pc         go to state 30
    stmt       go to state 31
    loop       go to state 32
    mif        go to state 33


State 10

   15 type: INT . '[' CONST ']'
   17     | INT .

    '['  shift, and go to state 34

    $default  reduce using rule 17 (type)


State 11

   16 type: BYTE . '[' CONST ']'
   18     | BYTE .

    '['  shift, and go to state 35

    $default  reduce using rule 18 (type)


State 12

    6 opt: IS type . ':' optparam
    7    | IS type .

    ':'  shift, and go to state 36

    $default  reduce using rule 7 (opt)


State 13

    8 optparam: IDENTIFIER . AS type
    9         | IDENTIFIER . AS type ',' optparam

    AS  shift, and go to state 37


State 14

    4 header: IDENTIFIER ':' optparam .

    $default  reduce using rule 4 (header)


State 15

   12 lval: IDENTIFIER .
   19 pc: IDENTIFIER . ':' param
   20   | IDENTIFIER .

    ':'  shift, and go to state 38

    ASSIGNMENT  reduce using rule 12 (lval)
    '['         reduce using rule 12 (lval)
    $default    reduce using rule 20 (pc)


State 16

   41 mif: IF . condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   42    | IF . expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   43    | IF . condition ':' BEG stmt_list END

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 47
    '!'            shift, and go to state 48

    condition   go to state 49
    expression  go to state 50


State 17

   13 lval: STRINGLITERAL .

    $default  reduce using rule 13 (lval)


State 18

   39 loop: LOOP . IDENTIFIER ':' BEG stmt_list END
   40     | LOOP . ':' BEG stmt_list END

    IDENTIFIER  shift, and go to state 51
    ':'         shift, and go to state 52


State 19

   23 stmt: SKIP .

    $default  reduce using rule 23 (stmt)


State 20

    2 fdecl: DECL . header

    IDENTIFIER  shift, and go to state 3

    header  go to state 53


State 21

   29 stmt: VAR . idlist IS type

    IDENTIFIER  shift, and go to state 54

    idlist  go to state 55


State 22

   36 stmt: RETURN . ':' expression

    ':'  shift, and go to state 56


State 23

   35 stmt: EXIT .

    $default  reduce using rule 35 (stmt)


State 24

   30 stmt: BREAK .
   31     | BREAK . ':' IDENTIFIER

    ':'  shift, and go to state 57

    $default  reduce using rule 30 (stmt)


State 25

   32 stmt: CONT .
   33     | CONT . ':' IDENTIFIER

    ':'  shift, and go to state 58

    $default  reduce using rule 32 (stmt)


State 26

   26 stmt: fdef .

    $default  reduce using rule 26 (stmt)


State 27

   34 stmt: fdecl .

    $default  reduce using rule 34 (stmt)


State 28

    1 fdef: DEF header BEG stmt_list . END
   11 stmt_list: stmt_list . stmt

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    END            shift, and go to state 59
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef   go to state 26
    fdecl  go to state 27
    lval   go to state 29
    pc     go to state 30
    stmt   go to state 60
    loop   go to state 32
    mif    go to state 33


State 29

   14 lval: lval . '[' expression ']'
   28 stmt: lval . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 61
    '['         shift, and go to state 62


State 30

   24 stmt: pc .

    $default  reduce using rule 24 (stmt)


State 31

   10 stmt_list: stmt .

    $default  reduce using rule 10 (stmt_list)


State 32

   27 stmt: loop .

    $default  reduce using rule 27 (stmt)


State 33

   25 stmt: mif .

    $default  reduce using rule 25 (stmt)


State 34

   15 type: INT '[' . CONST ']'

    CONST  shift, and go to state 63


State 35

   16 type: BYTE '[' . CONST ']'

    CONST  shift, and go to state 64


State 36

    6 opt: IS type ':' . optparam

    IDENTIFIER  shift, and go to state 13

    optparam  go to state 65


State 37

    8 optparam: IDENTIFIER AS . type
    9         | IDENTIFIER AS . type ',' optparam

    INT   shift, and go to state 10
    BYTE  shift, and go to state 11

    type  go to state 66


State 38

   19 pc: IDENTIFIER ':' . param

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    param       go to state 68
    expression  go to state 69


State 39

   67 expression: IDENTIFIER .

    $default  reduce using rule 67 (expression)


State 40

   68 expression: STRINGLITERAL .

    $default  reduce using rule 68 (expression)


State 41

   69 expression: CONST .

    $default  reduce using rule 69 (expression)


State 42

   54 condition: NOT . condition

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 47
    '!'            shift, and go to state 48

    condition   go to state 70
    expression  go to state 71


State 43

   50 condition: TRUE .

    $default  reduce using rule 50 (condition)


State 44

   51 condition: FALSE .

    $default  reduce using rule 51 (condition)


State 45

   64 expression: '+' . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 72


State 46

   65 expression: '-' . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 73


State 47

   55 condition: '(' . condition ')'
   70 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 47
    '!'            shift, and go to state 48

    condition   go to state 74
    expression  go to state 75


State 48

   66 expression: '!' . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 76


State 49

   41 mif: IF condition . ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   43    | IF condition . ':' BEG stmt_list END
   52 condition: condition . AND condition
   53          | condition . OR condition

    AND  shift, and go to state 77
    OR   shift, and go to state 78
    ':'  shift, and go to state 79


State 50

   42 mif: IF expression . ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   44 condition: expression . LARGER expression
   45          | expression . SMALLER expression
   46          | expression . LARGEREQ expression
   47          | expression . SMALLEREQ expression
   48          | expression . EQ expression
   49          | expression . DIFF expression
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    EQ         shift, and go to state 80
    DIFF       shift, and go to state 81
    LARGER     shift, and go to state 82
    SMALLER    shift, and go to state 83
    LARGEREQ   shift, and go to state 84
    SMALLEREQ  shift, and go to state 85
    '+'        shift, and go to state 86
    '-'        shift, and go to state 87
    '|'        shift, and go to state 88
    '*'        shift, and go to state 89
    '/'        shift, and go to state 90
    '&'        shift, and go to state 91
    ':'        shift, and go to state 92


State 51

   39 loop: LOOP IDENTIFIER . ':' BEG stmt_list END

    ':'  shift, and go to state 93


State 52

   40 loop: LOOP ':' . BEG stmt_list END

    BEG  shift, and go to state 94


State 53

    2 fdecl: DECL header .

    $default  reduce using rule 2 (fdecl)


State 54

   37 idlist: IDENTIFIER .
   38       | IDENTIFIER . idlist

    IDENTIFIER  shift, and go to state 54

    $default  reduce using rule 37 (idlist)

    idlist  go to state 95


State 55

   29 stmt: VAR idlist . IS type

    IS  shift, and go to state 96


State 56

   36 stmt: RETURN ':' . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 97


State 57

   31 stmt: BREAK ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 98


State 58

   33 stmt: CONT ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 99


State 59

    1 fdef: DEF header BEG stmt_list END .

    $default  reduce using rule 1 (fdef)


State 60

   11 stmt_list: stmt_list stmt .

    $default  reduce using rule 11 (stmt_list)


State 61

   28 stmt: lval ASSIGNMENT . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 100


State 62

   14 lval: lval '[' . expression ']'

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 101


State 63

   15 type: INT '[' CONST . ']'

    ']'  shift, and go to state 102


State 64

   16 type: BYTE '[' CONST . ']'

    ']'  shift, and go to state 103


State 65

    6 opt: IS type ':' optparam .

    $default  reduce using rule 6 (opt)


State 66

    8 optparam: IDENTIFIER AS type .
    9         | IDENTIFIER AS type . ',' optparam

    ','  shift, and go to state 104

    $default  reduce using rule 8 (optparam)


State 67

   70 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 105


State 68

   19 pc: IDENTIFIER ':' param .

    $default  reduce using rule 19 (pc)


State 69

   21 param: expression . ',' param
   22      | expression .
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    ','  shift, and go to state 106

    $default  reduce using rule 22 (param)


State 70

   52 condition: condition . AND condition
   53          | condition . OR condition
   54          | NOT condition .

    $default  reduce using rule 54 (condition)


State 71

   44 condition: expression . LARGER expression
   45          | expression . SMALLER expression
   46          | expression . LARGEREQ expression
   47          | expression . SMALLEREQ expression
   48          | expression . EQ expression
   49          | expression . DIFF expression
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    EQ         shift, and go to state 80
    DIFF       shift, and go to state 81
    LARGER     shift, and go to state 82
    SMALLER    shift, and go to state 83
    LARGEREQ   shift, and go to state 84
    SMALLEREQ  shift, and go to state 85
    '+'        shift, and go to state 86
    '-'        shift, and go to state 87
    '|'        shift, and go to state 88
    '*'        shift, and go to state 89
    '/'        shift, and go to state 90
    '&'        shift, and go to state 91


State 72

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression
   64           | '+' expression .

    $default  reduce using rule 64 (expression)


State 73

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression
   65           | '-' expression .

    $default  reduce using rule 65 (expression)


State 74

   52 condition: condition . AND condition
   53          | condition . OR condition
   55          | '(' condition . ')'

    AND  shift, and go to state 77
    OR   shift, and go to state 78
    ')'  shift, and go to state 107


State 75

   44 condition: expression . LARGER expression
   45          | expression . SMALLER expression
   46          | expression . LARGEREQ expression
   47          | expression . SMALLEREQ expression
   48          | expression . EQ expression
   49          | expression . DIFF expression
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression
   70           | '(' expression . ')'

    EQ         shift, and go to state 80
    DIFF       shift, and go to state 81
    LARGER     shift, and go to state 82
    SMALLER    shift, and go to state 83
    LARGEREQ   shift, and go to state 84
    SMALLEREQ  shift, and go to state 85
    '+'        shift, and go to state 86
    '-'        shift, and go to state 87
    '|'        shift, and go to state 88
    '*'        shift, and go to state 89
    '/'        shift, and go to state 90
    '&'        shift, and go to state 91
    ')'        shift, and go to state 108


State 76

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression
   66           | '!' expression .

    $default  reduce using rule 66 (expression)


State 77

   52 condition: condition AND . condition

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 47
    '!'            shift, and go to state 48

    condition   go to state 109
    expression  go to state 71


State 78

   53 condition: condition OR . condition

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 47
    '!'            shift, and go to state 48

    condition   go to state 110
    expression  go to state 71


State 79

   41 mif: IF condition ':' . BEG stmt_list END ELSE ':' BEG stmt_list END
   43    | IF condition ':' . BEG stmt_list END

    BEG  shift, and go to state 111


State 80

   48 condition: expression EQ . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 112


State 81

   49 condition: expression DIFF . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 113


State 82

   44 condition: expression LARGER . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 114


State 83

   45 condition: expression SMALLER . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 115


State 84

   46 condition: expression LARGEREQ . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 116


State 85

   47 condition: expression SMALLEREQ . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 117


State 86

   58 expression: expression '+' . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 118


State 87

   59 expression: expression '-' . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 119


State 88

   63 expression: expression '|' . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 120


State 89

   60 expression: expression '*' . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 121


State 90

   61 expression: expression '/' . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 122


State 91

   62 expression: expression '&' . expression

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 123


State 92

   42 mif: IF expression ':' . BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt

    BEG  shift, and go to state 124


State 93

   39 loop: LOOP IDENTIFIER ':' . BEG stmt_list END

    BEG  shift, and go to state 125


State 94

   40 loop: LOOP ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef       go to state 26
    fdecl      go to state 27
    stmt_list  go to state 126
    lval       go to state 29
    pc         go to state 30
    stmt       go to state 31
    loop       go to state 32
    mif        go to state 33


State 95

   38 idlist: IDENTIFIER idlist .

    $default  reduce using rule 38 (idlist)


State 96

   29 stmt: VAR idlist IS . type

    INT   shift, and go to state 10
    BYTE  shift, and go to state 11

    type  go to state 127


State 97

   36 stmt: RETURN ':' expression .
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91

    $default  reduce using rule 36 (stmt)


State 98

   31 stmt: BREAK ':' IDENTIFIER .

    $default  reduce using rule 31 (stmt)


State 99

   33 stmt: CONT ':' IDENTIFIER .

    $default  reduce using rule 33 (stmt)


State 100

   28 stmt: lval ASSIGNMENT expression .
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91

    $default  reduce using rule 28 (stmt)


State 101

   14 lval: lval '[' expression . ']'
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    ']'  shift, and go to state 128


State 102

   15 type: INT '[' CONST ']' .

    $default  reduce using rule 15 (type)


State 103

   16 type: BYTE '[' CONST ']' .

    $default  reduce using rule 16 (type)


State 104

    9 optparam: IDENTIFIER AS type ',' . optparam

    IDENTIFIER  shift, and go to state 13

    optparam  go to state 129


State 105

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression
   70           | '(' expression . ')'

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    ')'  shift, and go to state 108


State 106

   21 param: expression ',' . param

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    param       go to state 130
    expression  go to state 69


State 107

   55 condition: '(' condition ')' .

    $default  reduce using rule 55 (condition)


State 108

   70 expression: '(' expression ')' .

    $default  reduce using rule 70 (expression)


State 109

   52 condition: condition . AND condition
   52          | condition AND condition .
   53          | condition . OR condition

    $default  reduce using rule 52 (condition)


State 110

   52 condition: condition . AND condition
   53          | condition . OR condition
   53          | condition OR condition .

    AND  shift, and go to state 77

    $default  reduce using rule 53 (condition)


State 111

   41 mif: IF condition ':' BEG . stmt_list END ELSE ':' BEG stmt_list END
   43    | IF condition ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef       go to state 26
    fdecl      go to state 27
    stmt_list  go to state 131
    lval       go to state 29
    pc         go to state 30
    stmt       go to state 31
    loop       go to state 32
    mif        go to state 33


State 112

   48 condition: expression EQ expression .
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91

    $default  reduce using rule 48 (condition)


State 113

   49 condition: expression DIFF expression .
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91

    $default  reduce using rule 49 (condition)


State 114

   44 condition: expression LARGER expression .
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91

    $default  reduce using rule 44 (condition)


State 115

   45 condition: expression SMALLER expression .
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91

    $default  reduce using rule 45 (condition)


State 116

   46 condition: expression LARGEREQ expression .
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91

    $default  reduce using rule 46 (condition)


State 117

   47 condition: expression SMALLEREQ expression .
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91

    $default  reduce using rule 47 (condition)


State 118

   58 expression: expression . '+' expression
   58           | expression '+' expression .
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91

    $default  reduce using rule 58 (expression)


State 119

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   59           | expression '-' expression .
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91

    $default  reduce using rule 59 (expression)


State 120

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression
   63           | expression '|' expression .

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91

    $default  reduce using rule 63 (expression)


State 121

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   60           | expression '*' expression .
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    $default  reduce using rule 60 (expression)


State 122

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   61           | expression '/' expression .
   62           | expression . '&' expression
   63           | expression . '|' expression

    $default  reduce using rule 61 (expression)


State 123

   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   62           | expression '&' expression .
   63           | expression . '|' expression

    $default  reduce using rule 62 (expression)


State 124

   42 mif: IF expression ':' BEG . stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef       go to state 26
    fdecl      go to state 27
    stmt_list  go to state 132
    lval       go to state 29
    pc         go to state 30
    stmt       go to state 31
    loop       go to state 32
    mif        go to state 33


State 125

   39 loop: LOOP IDENTIFIER ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef       go to state 26
    fdecl      go to state 27
    stmt_list  go to state 133
    lval       go to state 29
    pc         go to state 30
    stmt       go to state 31
    loop       go to state 32
    mif        go to state 33


State 126

   11 stmt_list: stmt_list . stmt
   40 loop: LOOP ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    END            shift, and go to state 134
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef   go to state 26
    fdecl  go to state 27
    lval   go to state 29
    pc     go to state 30
    stmt   go to state 60
    loop   go to state 32
    mif    go to state 33


State 127

   29 stmt: VAR idlist IS type .

    $default  reduce using rule 29 (stmt)


State 128

   14 lval: lval '[' expression ']' .

    $default  reduce using rule 14 (lval)


State 129

    9 optparam: IDENTIFIER AS type ',' optparam .

    $default  reduce using rule 9 (optparam)


State 130

   21 param: expression ',' param .

    $default  reduce using rule 21 (param)


State 131

   11 stmt_list: stmt_list . stmt
   41 mif: IF condition ':' BEG stmt_list . END ELSE ':' BEG stmt_list END
   43    | IF condition ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    END            shift, and go to state 135
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef   go to state 26
    fdecl  go to state 27
    lval   go to state 29
    pc     go to state 30
    stmt   go to state 60
    loop   go to state 32
    mif    go to state 33


State 132

   11 stmt_list: stmt_list . stmt
   42 mif: IF expression ':' BEG stmt_list . END ELIF expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    END            shift, and go to state 136
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef   go to state 26
    fdecl  go to state 27
    lval   go to state 29
    pc     go to state 30
    stmt   go to state 60
    loop   go to state 32
    mif    go to state 33


State 133

   11 stmt_list: stmt_list . stmt
   39 loop: LOOP IDENTIFIER ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    END            shift, and go to state 137
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef   go to state 26
    fdecl  go to state 27
    lval   go to state 29
    pc     go to state 30
    stmt   go to state 60
    loop   go to state 32
    mif    go to state 33


State 134

   40 loop: LOOP ':' BEG stmt_list END .

    $default  reduce using rule 40 (loop)


State 135

   41 mif: IF condition ':' BEG stmt_list END . ELSE ':' BEG stmt_list END
   43    | IF condition ':' BEG stmt_list END .

    ELSE  shift, and go to state 138

    $default  reduce using rule 43 (mif)


State 136

   42 mif: IF expression ':' BEG stmt_list END . ELIF expression ':' BEG stmt_list END eliftstmt

    ELIF  shift, and go to state 139


State 137

   39 loop: LOOP IDENTIFIER ':' BEG stmt_list END .

    $default  reduce using rule 39 (loop)


State 138

   41 mif: IF condition ':' BEG stmt_list END ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 140


State 139

   42 mif: IF expression ':' BEG stmt_list END ELIF . expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 141


State 140

   41 mif: IF condition ':' BEG stmt_list END ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 142


State 141

   42 mif: IF expression ':' BEG stmt_list END ELIF expression . ':' BEG stmt_list END eliftstmt
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    ':'  shift, and go to state 143


State 142

   41 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef       go to state 26
    fdecl      go to state 27
    stmt_list  go to state 144
    lval       go to state 29
    pc         go to state 30
    stmt       go to state 31
    loop       go to state 32
    mif        go to state 33


State 143

   42 mif: IF expression ':' BEG stmt_list END ELIF expression ':' . BEG stmt_list END eliftstmt

    BEG  shift, and go to state 145


State 144

   11 stmt_list: stmt_list . stmt
   41 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    END            shift, and go to state 146
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef   go to state 26
    fdecl  go to state 27
    lval   go to state 29
    pc     go to state 30
    stmt   go to state 60
    loop   go to state 32
    mif    go to state 33


State 145

   42 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef       go to state 26
    fdecl      go to state 27
    stmt_list  go to state 147
    lval       go to state 29
    pc         go to state 30
    stmt       go to state 31
    loop       go to state 32
    mif        go to state 33


State 146

   41 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END .

    $default  reduce using rule 41 (mif)


State 147

   11 stmt_list: stmt_list . stmt
   42 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    END            shift, and go to state 148
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef   go to state 26
    fdecl  go to state 27
    lval   go to state 29
    pc     go to state 30
    stmt   go to state 60
    loop   go to state 32
    mif    go to state 33


State 148

   42 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END . eliftstmt

    ELSE  shift, and go to state 149
    ELIF  shift, and go to state 150

    eliftstmt  go to state 151


State 149

   56 eliftstmt: ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 152


State 150

   57 eliftstmt: ELIF . expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 40
    CONST          shift, and go to state 41
    '+'            shift, and go to state 45
    '-'            shift, and go to state 46
    '('            shift, and go to state 67
    '!'            shift, and go to state 48

    expression  go to state 153


State 151

   42 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt .

    $default  reduce using rule 42 (mif)


State 152

   56 eliftstmt: ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 154


State 153

   57 eliftstmt: ELIF expression . ':' BEG stmt_list END eliftstmt
   58 expression: expression . '+' expression
   59           | expression . '-' expression
   60           | expression . '*' expression
   61           | expression . '/' expression
   62           | expression . '&' expression
   63           | expression . '|' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '|'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '&'  shift, and go to state 91
    ':'  shift, and go to state 155


State 154

   56 eliftstmt: ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef       go to state 26
    fdecl      go to state 27
    stmt_list  go to state 156
    lval       go to state 29
    pc         go to state 30
    stmt       go to state 31
    loop       go to state 32
    mif        go to state 33


State 155

   57 eliftstmt: ELIF expression ':' . BEG stmt_list END eliftstmt

    BEG  shift, and go to state 157


State 156

   11 stmt_list: stmt_list . stmt
   56 eliftstmt: ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    END            shift, and go to state 158
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef   go to state 26
    fdecl  go to state 27
    lval   go to state 29
    pc     go to state 30
    stmt   go to state 60
    loop   go to state 32
    mif    go to state 33


State 157

   57 eliftstmt: ELIF expression ':' BEG . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef       go to state 26
    fdecl      go to state 27
    stmt_list  go to state 159
    lval       go to state 29
    pc         go to state 30
    stmt       go to state 31
    loop       go to state 32
    mif        go to state 33


State 158

   56 eliftstmt: ELSE ':' BEG stmt_list END .

    $default  reduce using rule 56 (eliftstmt)


State 159

   11 stmt_list: stmt_list . stmt
   57 eliftstmt: ELIF expression ':' BEG stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 15
    IF             shift, and go to state 16
    STRINGLITERAL  shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    END            shift, and go to state 160
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25

    fdef   go to state 26
    fdecl  go to state 27
    lval   go to state 29
    pc     go to state 30
    stmt   go to state 60
    loop   go to state 32
    mif    go to state 33


State 160

   57 eliftstmt: ELIF expression ':' BEG stmt_list END . eliftstmt

    ELSE  shift, and go to state 149
    ELIF  shift, and go to state 150

    eliftstmt  go to state 161


State 161

   57 eliftstmt: ELIF expression ':' BEG stmt_list END eliftstmt .

    $default  reduce using rule 57 (eliftstmt)
