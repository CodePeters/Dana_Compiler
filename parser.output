Terminals unused in grammar

   TEOF
   BEG


State 70 conflicts: 1 shift/reduce


Grammar

    0 $accept: fdef $end

    1 fdef: DEF header stmt_list END

    2 fdecl: DECL header

    3 header: IDENTIFIER opt
    4       | IDENTIFIER ':' optparam
    5       | IDENTIFIER

    6 opt: IS type ':' optparam
    7    | IS type

    8 optparam: idlist AS ftype
    9         | idlist AS ftype ',' optparam

   10 ftype: REF INT
   11      | REF BYTE
   12      | bp
   13      | INT
   14      | BYTE

   15 bp: INT '[' ']'
   16   | BYTE '[' ']'
   17   | INT '[' CONST ']'
   18   | BYTE '[' CONST ']'
   19   | bp '[' CONST ']'

   20 stmt_list: stmt
   21          | stmt stmt_list

   22 type: INT
   23     | BYTE
   24     | type '[' CONST ']'

   25 pc: IDENTIFIER ':' param
   26   | IDENTIFIER

   27 param: expression ',' param
   28      | expression

   29 stmt: SKIP
   30     | pc
   31     | mif
   32     | fdef
   33     | loop
   34     | lval ASSIGNMENT expression
   35     | VAR idlist IS type
   36     | BREAK
   37     | BREAK ':' IDENTIFIER
   38     | CONT
   39     | CONT ':' IDENTIFIER
   40     | fdecl
   41     | EXIT
   42     | RETURN ':' expression
   43     | fcall

   44 fcall: IDENTIFIER '(' param ')'
   45      | IDENTIFIER '(' ')'

   46 idlist: IDENTIFIER
   47       | IDENTIFIER idlist

   48 loop: LOOP IDENTIFIER ':' stmt_list END
   49     | LOOP ':' stmt_list END

   50 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END
   51    | IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   52    | IF condition ':' stmt_list END

   53 condition: expression LARGER expression
   54          | expression SMALLER expression
   55          | expression LARGEREQ expression
   56          | expression SMALLEREQ expression
   57          | expression EQ expression
   58          | expression DIFF expression
   59          | TRUE
   60          | FALSE
   61          | condition AND condition
   62          | condition OR condition
   63          | NOT condition
   64          | '(' condition ')'
   65          | expression

   66 eliftstmt: ELSE ':' stmt_list END
   67          | ELIF condition ':' stmt_list END eliftstmt

   68 expression: expression '+' expression
   69           | expression '-' expression
   70           | expression '*' expression
   71           | expression '/' expression
   72           | expression '&' expression
   73           | expression '|' expression
   74           | '+' expression
   75           | '-' expression
   76           | '!' expression
   77           | lval
   78           | CONST
   79           | '(' expression ')'
   80           | fcall

   81 lval: IDENTIFIER
   82     | STRINGLITERAL
   83     | lval '[' expression ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 76
'&' (38) 72
'(' (40) 44 45 64 79
')' (41) 44 45 64 79
'*' (42) 70
'+' (43) 68 74
',' (44) 9 27
'-' (45) 69 75
'/' (47) 71
':' (58) 4 6 25 37 39 42 48 49 50 51 52 66 67
'[' (91) 15 16 17 18 19 24 83
']' (93) 15 16 17 18 19 24 83
'|' (124) 73
error (256)
INT (258) 10 13 15 17 22
BYTE (259) 11 14 16 18 23
IF (260) 50 51 52
ELSE (261) 50 66
LOOP (262) 48 49
AS (263) 8 9
SKIP (264) 29
DECL (265) 2
DEF (266) 1
END (267) 1 48 49 50 51 52 66 67
VAR (268) 35
IS (269) 6 7 35
TEOF (270)
EQ (271) 57
DIFF (272) 58
LARGER (273) 53
SMALLER (274) 54
RETURN (275) 42
EXIT (276) 41
REF (277) 10 11
LARGEREQ (278) 55
SMALLEREQ (279) 56
ASSIGNMENT (280) 34
AND (281) 61
NOT (282) 63
OR (283) 62
ELIF (284) 51 67
TRUE (285) 59
FALSE (286) 60
BREAK (287) 36 37
CONT (288) 38 39
BEG (289)
CONST (290) 17 18 19 24 78
IDENTIFIER (291) 3 4 5 25 26 37 39 44 45 46 47 48 81
STRINGLITERAL (292) 82
UNARYPL (293)
UNARYMINUS (294)
BANGBANG (295)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
fdef (55)
    on left: 1, on right: 0 32
fdecl (56)
    on left: 2, on right: 40
header (57)
    on left: 3 4 5, on right: 1 2
opt (58)
    on left: 6 7, on right: 3
optparam (59)
    on left: 8 9, on right: 4 6 9
ftype (60)
    on left: 10 11 12 13 14, on right: 8 9
bp (61)
    on left: 15 16 17 18 19, on right: 12 19
stmt_list (62)
    on left: 20 21, on right: 1 21 48 49 50 51 52 66 67
type (63)
    on left: 22 23 24, on right: 6 7 24 35
pc (64)
    on left: 25 26, on right: 30
param (65)
    on left: 27 28, on right: 25 27 44
stmt (66)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43, on right:
    20 21
fcall (67)
    on left: 44 45, on right: 43 80
idlist (68)
    on left: 46 47, on right: 8 9 35 47
loop (69)
    on left: 48 49, on right: 33
mif (70)
    on left: 50 51 52, on right: 31
condition (71)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65, on right: 50 51
    52 61 62 63 64 67
eliftstmt (72)
    on left: 66 67, on right: 51 67
expression (73)
    on left: 68 69 70 71 72 73 74 75 76 77 78 79 80, on right: 27 28
    34 42 53 54 55 56 57 58 65 68 69 70 71 72 73 74 75 76 79 83
lval (74)
    on left: 81 82 83, on right: 34 77 83


State 0

    0 $accept: . fdef $end

    DEF  shift, and go to state 1

    fdef  go to state 2


State 1

    1 fdef: DEF . header stmt_list END

    IDENTIFIER  shift, and go to state 3

    header  go to state 4


State 2

    0 $accept: fdef . $end

    $end  shift, and go to state 5


State 3

    3 header: IDENTIFIER . opt
    4       | IDENTIFIER . ':' optparam
    5       | IDENTIFIER .

    IS   shift, and go to state 6
    ':'  shift, and go to state 7

    $default  reduce using rule 5 (header)

    opt  go to state 8


State 4

    1 fdef: DEF header . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 22
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 5

    0 $accept: fdef $end .

    $default  accept


State 6

    6 opt: IS . type ':' optparam
    7    | IS . type

    INT   shift, and go to state 29
    BYTE  shift, and go to state 30

    type  go to state 31


State 7

    4 header: IDENTIFIER ':' . optparam

    IDENTIFIER  shift, and go to state 32

    optparam  go to state 33
    idlist    go to state 34


State 8

    3 header: IDENTIFIER opt .

    $default  reduce using rule 3 (header)


State 9

   50 mif: IF . condition ':' stmt_list END ELSE ':' stmt_list END
   51    | IF . condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   52    | IF . condition ':' stmt_list END

    NOT            shift, and go to state 35
    TRUE           shift, and go to state 36
    FALSE          shift, and go to state 37
    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '!'            shift, and go to state 43

    fcall       go to state 44
    condition   go to state 45
    expression  go to state 46
    lval        go to state 47


State 10

   48 loop: LOOP . IDENTIFIER ':' stmt_list END
   49     | LOOP . ':' stmt_list END

    IDENTIFIER  shift, and go to state 48
    ':'         shift, and go to state 49


State 11

   29 stmt: SKIP .

    $default  reduce using rule 29 (stmt)


State 12

    2 fdecl: DECL . header

    IDENTIFIER  shift, and go to state 3

    header  go to state 50


State 13

   35 stmt: VAR . idlist IS type

    IDENTIFIER  shift, and go to state 32

    idlist  go to state 51


State 14

   42 stmt: RETURN . ':' expression

    ':'  shift, and go to state 52


State 15

   41 stmt: EXIT .

    $default  reduce using rule 41 (stmt)


State 16

   36 stmt: BREAK .
   37     | BREAK . ':' IDENTIFIER

    ':'  shift, and go to state 53

    $default  reduce using rule 36 (stmt)


State 17

   38 stmt: CONT .
   39     | CONT . ':' IDENTIFIER

    ':'  shift, and go to state 54

    $default  reduce using rule 38 (stmt)


State 18

   25 pc: IDENTIFIER . ':' param
   26   | IDENTIFIER .
   44 fcall: IDENTIFIER . '(' param ')'
   45      | IDENTIFIER . '(' ')'
   81 lval: IDENTIFIER .

    ':'  shift, and go to state 55
    '('  shift, and go to state 56

    ASSIGNMENT  reduce using rule 81 (lval)
    '['         reduce using rule 81 (lval)
    $default    reduce using rule 26 (pc)


State 19

   82 lval: STRINGLITERAL .

    $default  reduce using rule 82 (lval)


State 20

   32 stmt: fdef .

    $default  reduce using rule 32 (stmt)


State 21

   40 stmt: fdecl .

    $default  reduce using rule 40 (stmt)


State 22

    1 fdef: DEF header stmt_list . END

    END  shift, and go to state 57


State 23

   30 stmt: pc .

    $default  reduce using rule 30 (stmt)


State 24

   20 stmt_list: stmt .
   21          | stmt . stmt_list

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    $default  reduce using rule 20 (stmt_list)

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 58
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 25

   43 stmt: fcall .

    $default  reduce using rule 43 (stmt)


State 26

   33 stmt: loop .

    $default  reduce using rule 33 (stmt)


State 27

   31 stmt: mif .

    $default  reduce using rule 31 (stmt)


State 28

   34 stmt: lval . ASSIGNMENT expression
   83 lval: lval . '[' expression ']'

    ASSIGNMENT  shift, and go to state 59
    '['         shift, and go to state 60


State 29

   22 type: INT .

    $default  reduce using rule 22 (type)


State 30

   23 type: BYTE .

    $default  reduce using rule 23 (type)


State 31

    6 opt: IS type . ':' optparam
    7    | IS type .
   24 type: type . '[' CONST ']'

    ':'  shift, and go to state 61
    '['  shift, and go to state 62

    $default  reduce using rule 7 (opt)


State 32

   46 idlist: IDENTIFIER .
   47       | IDENTIFIER . idlist

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 46 (idlist)

    idlist  go to state 63


State 33

    4 header: IDENTIFIER ':' optparam .

    $default  reduce using rule 4 (header)


State 34

    8 optparam: idlist . AS ftype
    9         | idlist . AS ftype ',' optparam

    AS  shift, and go to state 64


State 35

   63 condition: NOT . condition

    NOT            shift, and go to state 35
    TRUE           shift, and go to state 36
    FALSE          shift, and go to state 37
    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '!'            shift, and go to state 43

    fcall       go to state 44
    condition   go to state 65
    expression  go to state 46
    lval        go to state 47


State 36

   59 condition: TRUE .

    $default  reduce using rule 59 (condition)


State 37

   60 condition: FALSE .

    $default  reduce using rule 60 (condition)


State 38

   78 expression: CONST .

    $default  reduce using rule 78 (expression)


State 39

   44 fcall: IDENTIFIER . '(' param ')'
   45      | IDENTIFIER . '(' ')'
   81 lval: IDENTIFIER .

    '('  shift, and go to state 56

    $default  reduce using rule 81 (lval)


State 40

   74 expression: '+' . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 67
    lval        go to state 47


State 41

   75 expression: '-' . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 68
    lval        go to state 47


State 42

   64 condition: '(' . condition ')'
   79 expression: '(' . expression ')'

    NOT            shift, and go to state 35
    TRUE           shift, and go to state 36
    FALSE          shift, and go to state 37
    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '!'            shift, and go to state 43

    fcall       go to state 44
    condition   go to state 69
    expression  go to state 70
    lval        go to state 47


State 43

   76 expression: '!' . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 71
    lval        go to state 47


State 44

   80 expression: fcall .

    $default  reduce using rule 80 (expression)


State 45

   50 mif: IF condition . ':' stmt_list END ELSE ':' stmt_list END
   51    | IF condition . ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   52    | IF condition . ':' stmt_list END
   61 condition: condition . AND condition
   62          | condition . OR condition

    AND  shift, and go to state 72
    OR   shift, and go to state 73
    ':'  shift, and go to state 74


State 46

   53 condition: expression . LARGER expression
   54          | expression . SMALLER expression
   55          | expression . LARGEREQ expression
   56          | expression . SMALLEREQ expression
   57          | expression . EQ expression
   58          | expression . DIFF expression
   65          | expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    EQ         shift, and go to state 75
    DIFF       shift, and go to state 76
    LARGER     shift, and go to state 77
    SMALLER    shift, and go to state 78
    LARGEREQ   shift, and go to state 79
    SMALLEREQ  shift, and go to state 80
    '+'        shift, and go to state 81
    '-'        shift, and go to state 82
    '|'        shift, and go to state 83
    '*'        shift, and go to state 84
    '/'        shift, and go to state 85
    '&'        shift, and go to state 86

    $default  reduce using rule 65 (condition)


State 47

   77 expression: lval .
   83 lval: lval . '[' expression ']'

    '['  shift, and go to state 60

    $default  reduce using rule 77 (expression)


State 48

   48 loop: LOOP IDENTIFIER . ':' stmt_list END

    ':'  shift, and go to state 87


State 49

   49 loop: LOOP ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 88
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 50

    2 fdecl: DECL header .

    $default  reduce using rule 2 (fdecl)


State 51

   35 stmt: VAR idlist . IS type

    IS  shift, and go to state 89


State 52

   42 stmt: RETURN ':' . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 90
    lval        go to state 47


State 53

   37 stmt: BREAK ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 91


State 54

   39 stmt: CONT ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 92


State 55

   25 pc: IDENTIFIER ':' . param

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    param       go to state 93
    fcall       go to state 44
    expression  go to state 94
    lval        go to state 47


State 56

   44 fcall: IDENTIFIER '(' . param ')'
   45      | IDENTIFIER '(' . ')'

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    ')'            shift, and go to state 95
    '!'            shift, and go to state 43

    param       go to state 96
    fcall       go to state 44
    expression  go to state 94
    lval        go to state 47


State 57

    1 fdef: DEF header stmt_list END .

    $default  reduce using rule 1 (fdef)


State 58

   21 stmt_list: stmt stmt_list .

    $default  reduce using rule 21 (stmt_list)


State 59

   34 stmt: lval ASSIGNMENT . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 97
    lval        go to state 47


State 60

   83 lval: lval '[' . expression ']'

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 98
    lval        go to state 47


State 61

    6 opt: IS type ':' . optparam

    IDENTIFIER  shift, and go to state 32

    optparam  go to state 99
    idlist    go to state 34


State 62

   24 type: type '[' . CONST ']'

    CONST  shift, and go to state 100


State 63

   47 idlist: IDENTIFIER idlist .

    $default  reduce using rule 47 (idlist)


State 64

    8 optparam: idlist AS . ftype
    9         | idlist AS . ftype ',' optparam

    INT   shift, and go to state 101
    BYTE  shift, and go to state 102
    REF   shift, and go to state 103

    ftype  go to state 104
    bp     go to state 105


State 65

   61 condition: condition . AND condition
   62          | condition . OR condition
   63          | NOT condition .

    $default  reduce using rule 63 (condition)


State 66

   79 expression: '(' . expression ')'

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 106
    lval        go to state 47


State 67

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression
   74           | '+' expression .

    $default  reduce using rule 74 (expression)


State 68

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression
   75           | '-' expression .

    $default  reduce using rule 75 (expression)


State 69

   61 condition: condition . AND condition
   62          | condition . OR condition
   64          | '(' condition . ')'

    AND  shift, and go to state 72
    OR   shift, and go to state 73
    ')'  shift, and go to state 107


State 70

   53 condition: expression . LARGER expression
   54          | expression . SMALLER expression
   55          | expression . LARGEREQ expression
   56          | expression . SMALLEREQ expression
   57          | expression . EQ expression
   58          | expression . DIFF expression
   65          | expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression
   79           | '(' expression . ')'

    EQ         shift, and go to state 75
    DIFF       shift, and go to state 76
    LARGER     shift, and go to state 77
    SMALLER    shift, and go to state 78
    LARGEREQ   shift, and go to state 79
    SMALLEREQ  shift, and go to state 80
    '+'        shift, and go to state 81
    '-'        shift, and go to state 82
    '|'        shift, and go to state 83
    '*'        shift, and go to state 84
    '/'        shift, and go to state 85
    '&'        shift, and go to state 86
    ')'        shift, and go to state 108

    ')'       [reduce using rule 65 (condition)]
    $default  reduce using rule 65 (condition)


State 71

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression
   76           | '!' expression .

    $default  reduce using rule 76 (expression)


State 72

   61 condition: condition AND . condition

    NOT            shift, and go to state 35
    TRUE           shift, and go to state 36
    FALSE          shift, and go to state 37
    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '!'            shift, and go to state 43

    fcall       go to state 44
    condition   go to state 109
    expression  go to state 46
    lval        go to state 47


State 73

   62 condition: condition OR . condition

    NOT            shift, and go to state 35
    TRUE           shift, and go to state 36
    FALSE          shift, and go to state 37
    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '!'            shift, and go to state 43

    fcall       go to state 44
    condition   go to state 110
    expression  go to state 46
    lval        go to state 47


State 74

   50 mif: IF condition ':' . stmt_list END ELSE ':' stmt_list END
   51    | IF condition ':' . stmt_list END ELIF condition ':' stmt_list END eliftstmt
   52    | IF condition ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 111
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 75

   57 condition: expression EQ . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 112
    lval        go to state 47


State 76

   58 condition: expression DIFF . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 113
    lval        go to state 47


State 77

   53 condition: expression LARGER . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 114
    lval        go to state 47


State 78

   54 condition: expression SMALLER . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 115
    lval        go to state 47


State 79

   55 condition: expression LARGEREQ . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 116
    lval        go to state 47


State 80

   56 condition: expression SMALLEREQ . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 117
    lval        go to state 47


State 81

   68 expression: expression '+' . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 118
    lval        go to state 47


State 82

   69 expression: expression '-' . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 119
    lval        go to state 47


State 83

   73 expression: expression '|' . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 120
    lval        go to state 47


State 84

   70 expression: expression '*' . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 121
    lval        go to state 47


State 85

   71 expression: expression '/' . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 122
    lval        go to state 47


State 86

   72 expression: expression '&' . expression

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    fcall       go to state 44
    expression  go to state 123
    lval        go to state 47


State 87

   48 loop: LOOP IDENTIFIER ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 124
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 88

   49 loop: LOOP ':' stmt_list . END

    END  shift, and go to state 125


State 89

   35 stmt: VAR idlist IS . type

    INT   shift, and go to state 29
    BYTE  shift, and go to state 30

    type  go to state 126


State 90

   42 stmt: RETURN ':' expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 42 (stmt)


State 91

   37 stmt: BREAK ':' IDENTIFIER .

    $default  reduce using rule 37 (stmt)


State 92

   39 stmt: CONT ':' IDENTIFIER .

    $default  reduce using rule 39 (stmt)


State 93

   25 pc: IDENTIFIER ':' param .

    $default  reduce using rule 25 (pc)


State 94

   27 param: expression . ',' param
   28      | expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86
    ','  shift, and go to state 127

    $default  reduce using rule 28 (param)


State 95

   45 fcall: IDENTIFIER '(' ')' .

    $default  reduce using rule 45 (fcall)


State 96

   44 fcall: IDENTIFIER '(' param . ')'

    ')'  shift, and go to state 128


State 97

   34 stmt: lval ASSIGNMENT expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 34 (stmt)


State 98

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression
   83 lval: lval '[' expression . ']'

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86
    ']'  shift, and go to state 129


State 99

    6 opt: IS type ':' optparam .

    $default  reduce using rule 6 (opt)


State 100

   24 type: type '[' CONST . ']'

    ']'  shift, and go to state 130


State 101

   13 ftype: INT .
   15 bp: INT . '[' ']'
   17   | INT . '[' CONST ']'

    '['  shift, and go to state 131

    $default  reduce using rule 13 (ftype)


State 102

   14 ftype: BYTE .
   16 bp: BYTE . '[' ']'
   18   | BYTE . '[' CONST ']'

    '['  shift, and go to state 132

    $default  reduce using rule 14 (ftype)


State 103

   10 ftype: REF . INT
   11      | REF . BYTE

    INT   shift, and go to state 133
    BYTE  shift, and go to state 134


State 104

    8 optparam: idlist AS ftype .
    9         | idlist AS ftype . ',' optparam

    ','  shift, and go to state 135

    $default  reduce using rule 8 (optparam)


State 105

   12 ftype: bp .
   19 bp: bp . '[' CONST ']'

    '['  shift, and go to state 136

    $default  reduce using rule 12 (ftype)


State 106

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression
   79           | '(' expression . ')'

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86
    ')'  shift, and go to state 108


State 107

   64 condition: '(' condition ')' .

    $default  reduce using rule 64 (condition)


State 108

   79 expression: '(' expression ')' .

    $default  reduce using rule 79 (expression)


State 109

   61 condition: condition . AND condition
   61          | condition AND condition .
   62          | condition . OR condition

    $default  reduce using rule 61 (condition)


State 110

   61 condition: condition . AND condition
   62          | condition . OR condition
   62          | condition OR condition .

    AND  shift, and go to state 72

    $default  reduce using rule 62 (condition)


State 111

   50 mif: IF condition ':' stmt_list . END ELSE ':' stmt_list END
   51    | IF condition ':' stmt_list . END ELIF condition ':' stmt_list END eliftstmt
   52    | IF condition ':' stmt_list . END

    END  shift, and go to state 137


State 112

   57 condition: expression EQ expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 57 (condition)


State 113

   58 condition: expression DIFF expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 58 (condition)


State 114

   53 condition: expression LARGER expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 53 (condition)


State 115

   54 condition: expression SMALLER expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 54 (condition)


State 116

   55 condition: expression LARGEREQ expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 55 (condition)


State 117

   56 condition: expression SMALLEREQ expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    '|'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 56 (condition)


State 118

   68 expression: expression . '+' expression
   68           | expression '+' expression .
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 68 (expression)


State 119

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   69           | expression '-' expression .
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 69 (expression)


State 120

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression
   73           | expression '|' expression .

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '&'  shift, and go to state 86

    $default  reduce using rule 73 (expression)


State 121

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   70           | expression '*' expression .
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    $default  reduce using rule 70 (expression)


State 122

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   71           | expression '/' expression .
   72           | expression . '&' expression
   73           | expression . '|' expression

    $default  reduce using rule 71 (expression)


State 123

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   72           | expression '&' expression .
   73           | expression . '|' expression

    $default  reduce using rule 72 (expression)


State 124

   48 loop: LOOP IDENTIFIER ':' stmt_list . END

    END  shift, and go to state 138


State 125

   49 loop: LOOP ':' stmt_list END .

    $default  reduce using rule 49 (loop)


State 126

   24 type: type . '[' CONST ']'
   35 stmt: VAR idlist IS type .

    '['  shift, and go to state 62

    $default  reduce using rule 35 (stmt)


State 127

   27 param: expression ',' . param

    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 66
    '!'            shift, and go to state 43

    param       go to state 139
    fcall       go to state 44
    expression  go to state 94
    lval        go to state 47


State 128

   44 fcall: IDENTIFIER '(' param ')' .

    $default  reduce using rule 44 (fcall)


State 129

   83 lval: lval '[' expression ']' .

    $default  reduce using rule 83 (lval)


State 130

   24 type: type '[' CONST ']' .

    $default  reduce using rule 24 (type)


State 131

   15 bp: INT '[' . ']'
   17   | INT '[' . CONST ']'

    CONST  shift, and go to state 140
    ']'    shift, and go to state 141


State 132

   16 bp: BYTE '[' . ']'
   18   | BYTE '[' . CONST ']'

    CONST  shift, and go to state 142
    ']'    shift, and go to state 143


State 133

   10 ftype: REF INT .

    $default  reduce using rule 10 (ftype)


State 134

   11 ftype: REF BYTE .

    $default  reduce using rule 11 (ftype)


State 135

    9 optparam: idlist AS ftype ',' . optparam

    IDENTIFIER  shift, and go to state 32

    optparam  go to state 144
    idlist    go to state 34


State 136

   19 bp: bp '[' . CONST ']'

    CONST  shift, and go to state 145


State 137

   50 mif: IF condition ':' stmt_list END . ELSE ':' stmt_list END
   51    | IF condition ':' stmt_list END . ELIF condition ':' stmt_list END eliftstmt
   52    | IF condition ':' stmt_list END .

    ELSE  shift, and go to state 146
    ELIF  shift, and go to state 147

    $default  reduce using rule 52 (mif)


State 138

   48 loop: LOOP IDENTIFIER ':' stmt_list END .

    $default  reduce using rule 48 (loop)


State 139

   27 param: expression ',' param .

    $default  reduce using rule 27 (param)


State 140

   17 bp: INT '[' CONST . ']'

    ']'  shift, and go to state 148


State 141

   15 bp: INT '[' ']' .

    $default  reduce using rule 15 (bp)


State 142

   18 bp: BYTE '[' CONST . ']'

    ']'  shift, and go to state 149


State 143

   16 bp: BYTE '[' ']' .

    $default  reduce using rule 16 (bp)


State 144

    9 optparam: idlist AS ftype ',' optparam .

    $default  reduce using rule 9 (optparam)


State 145

   19 bp: bp '[' CONST . ']'

    ']'  shift, and go to state 150


State 146

   50 mif: IF condition ':' stmt_list END ELSE . ':' stmt_list END

    ':'  shift, and go to state 151


State 147

   51 mif: IF condition ':' stmt_list END ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 35
    TRUE           shift, and go to state 36
    FALSE          shift, and go to state 37
    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '!'            shift, and go to state 43

    fcall       go to state 44
    condition   go to state 152
    expression  go to state 46
    lval        go to state 47


State 148

   17 bp: INT '[' CONST ']' .

    $default  reduce using rule 17 (bp)


State 149

   18 bp: BYTE '[' CONST ']' .

    $default  reduce using rule 18 (bp)


State 150

   19 bp: bp '[' CONST ']' .

    $default  reduce using rule 19 (bp)


State 151

   50 mif: IF condition ':' stmt_list END ELSE ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 153
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 152

   51 mif: IF condition ':' stmt_list END ELIF condition . ':' stmt_list END eliftstmt
   61 condition: condition . AND condition
   62          | condition . OR condition

    AND  shift, and go to state 72
    OR   shift, and go to state 73
    ':'  shift, and go to state 154


State 153

   50 mif: IF condition ':' stmt_list END ELSE ':' stmt_list . END

    END  shift, and go to state 155


State 154

   51 mif: IF condition ':' stmt_list END ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 156
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 155

   50 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END .

    $default  reduce using rule 50 (mif)


State 156

   51 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list . END eliftstmt

    END  shift, and go to state 157


State 157

   51 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 158
    ELIF  shift, and go to state 159

    eliftstmt  go to state 160


State 158

   66 eliftstmt: ELSE . ':' stmt_list END

    ':'  shift, and go to state 161


State 159

   67 eliftstmt: ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 35
    TRUE           shift, and go to state 36
    FALSE          shift, and go to state 37
    CONST          shift, and go to state 38
    IDENTIFIER     shift, and go to state 39
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '!'            shift, and go to state 43

    fcall       go to state 44
    condition   go to state 162
    expression  go to state 46
    lval        go to state 47


State 160

   51 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 51 (mif)


State 161

   66 eliftstmt: ELSE ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 163
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 162

   61 condition: condition . AND condition
   62          | condition . OR condition
   67 eliftstmt: ELIF condition . ':' stmt_list END eliftstmt

    AND  shift, and go to state 72
    OR   shift, and go to state 73
    ':'  shift, and go to state 164


State 163

   66 eliftstmt: ELSE ':' stmt_list . END

    END  shift, and go to state 165


State 164

   67 eliftstmt: ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 166
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 165

   66 eliftstmt: ELSE ':' stmt_list END .

    $default  reduce using rule 66 (eliftstmt)


State 166

   67 eliftstmt: ELIF condition ':' stmt_list . END eliftstmt

    END  shift, and go to state 167


State 167

   67 eliftstmt: ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 158
    ELIF  shift, and go to state 159

    eliftstmt  go to state 168


State 168

   67 eliftstmt: ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 67 (eliftstmt)
