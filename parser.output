Terminals unused in grammar

   AS
   DECL
   DEF
   ADD
   MUL
   DIV
   SUB
   EQ
   DIFF
   LARGER
   SMALLER
   LARGEREQ
   SMALLEREQ
   COLON
   AND
   NOT
   OR
   TRUE
   FALSE
   BREAK
   CONT


Grammar

    0 $accept: body $end

    1 body: BEG stmt_list END

    2 stmt_list: stmt
    3          | stmt_list stmt

    4 lval: IDENTIFIER
    5     | STRINGLITERAL
    6     | lval '[' expression ']'

    7 type: INT '[' CONST ']'
    8     | BYTE '[' CONST ']'
    9     | INT
   10     | BYTE

   11 stmt: SKIP
   12     | mif
   13     | loop
   14     | lval ASSIGNMENT expression
   15     | VAR lval IS type

   16 loop: LOOP IDENTIFIER ':' BEG stmt_list END

   17 mif: IF expression ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   18    | IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   19    | IF expression ':' BEG stmt_list END

   20 eliftstmt: ELSE ':' BEG stmt_list END
   21          | ELIF expression ':' BEG stmt_list END eliftstmt

   22 expression: expression '+' expression
   23           | expression '-' expression
   24           | expression '*' expression
   25           | expression '/' expression
   26           | IDENTIFIER
   27           | STRINGLITERAL
   28           | CONST
   29           | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 29
')' (41) 29
'*' (42) 24
'+' (43) 22
'-' (45) 23
'/' (47) 25
':' (58) 16 17 18 19 20 21
'[' (91) 6 7 8
']' (93) 6 7 8
error (256)
IDENTIFIER (258) 4 16 26
INT (259) 7 9
BYTE (260) 8 10
IF (261) 17 18 19
ELSE (262) 17 20
STRINGLITERAL (263) 5 27
LOOP (264) 16
AS (265)
SKIP (266) 11
DECL (267)
DEF (268)
BEG (269) 1 16 17 18 19 20 21
END (270) 1 16 17 18 19 20 21
VAR (271) 15
IS (272) 15
ADD (273)
MUL (274)
DIV (275)
SUB (276)
EQ (277)
DIFF (278)
LARGER (279)
SMALLER (280)
LARGEREQ (281)
SMALLEREQ (282)
COLON (283)
ASSIGNMENT (284) 14
CONST (285) 7 8 28
AND (286)
NOT (287)
OR (288)
ELIF (289) 18 21
TRUE (290)
FALSE (291)
BREAK (292)
CONT (293)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
body (49)
    on left: 1, on right: 0
stmt_list (50)
    on left: 2 3, on right: 1 3 16 17 18 19 20 21
lval (51)
    on left: 4 5 6, on right: 6 14 15
type (52)
    on left: 7 8 9 10, on right: 15
stmt (53)
    on left: 11 12 13 14 15, on right: 2 3
loop (54)
    on left: 16, on right: 13
mif (55)
    on left: 17 18 19, on right: 12
eliftstmt (56)
    on left: 20 21, on right: 18 21
expression (57)
    on left: 22 23 24 25 26 27 28 29, on right: 6 14 17 18 19 21 22
    23 24 25 29


State 0

    0 $accept: . body $end

    BEG  shift, and go to state 1

    body  go to state 2


State 1

    1 body: BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 9
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 2

    0 $accept: body . $end

    $end  shift, and go to state 14


State 3

    4 lval: IDENTIFIER .

    $default  reduce using rule 4 (lval)


State 4

   17 mif: IF . expression ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   18    | IF . expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   19    | IF . expression ':' BEG stmt_list END

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 19


State 5

    5 lval: STRINGLITERAL .

    $default  reduce using rule 5 (lval)


State 6

   16 loop: LOOP . IDENTIFIER ':' BEG stmt_list END

    IDENTIFIER  shift, and go to state 20


State 7

   11 stmt: SKIP .

    $default  reduce using rule 11 (stmt)


State 8

   15 stmt: VAR . lval IS type

    IDENTIFIER     shift, and go to state 3
    STRINGLITERAL  shift, and go to state 5

    lval  go to state 21


State 9

    1 body: BEG stmt_list . END
    3 stmt_list: stmt_list . stmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 22
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 23
    loop  go to state 12
    mif   go to state 13


State 10

    6 lval: lval . '[' expression ']'
   14 stmt: lval . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 24
    '['         shift, and go to state 25


State 11

    2 stmt_list: stmt .

    $default  reduce using rule 2 (stmt_list)


State 12

   13 stmt: loop .

    $default  reduce using rule 13 (stmt)


State 13

   12 stmt: mif .

    $default  reduce using rule 12 (stmt)


State 14

    0 $accept: body $end .

    $default  accept


State 15

   26 expression: IDENTIFIER .

    $default  reduce using rule 26 (expression)


State 16

   27 expression: STRINGLITERAL .

    $default  reduce using rule 27 (expression)


State 17

   28 expression: CONST .

    $default  reduce using rule 28 (expression)


State 18

   29 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 26


State 19

   17 mif: IF expression . ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   18    | IF expression . ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   19    | IF expression . ':' BEG stmt_list END
   22 expression: expression . '+' expression
   23           | expression . '-' expression
   24           | expression . '*' expression
   25           | expression . '/' expression

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    ':'  shift, and go to state 31


State 20

   16 loop: LOOP IDENTIFIER . ':' BEG stmt_list END

    ':'  shift, and go to state 32


State 21

    6 lval: lval . '[' expression ']'
   15 stmt: VAR lval . IS type

    IS   shift, and go to state 33
    '['  shift, and go to state 25


State 22

    1 body: BEG stmt_list END .

    $default  reduce using rule 1 (body)


State 23

    3 stmt_list: stmt_list stmt .

    $default  reduce using rule 3 (stmt_list)


State 24

   14 stmt: lval ASSIGNMENT . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 34


State 25

    6 lval: lval '[' . expression ']'

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 35


State 26

   22 expression: expression . '+' expression
   23           | expression . '-' expression
   24           | expression . '*' expression
   25           | expression . '/' expression
   29           | '(' expression . ')'

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    ')'  shift, and go to state 36


State 27

   22 expression: expression '+' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 37


State 28

   23 expression: expression '-' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 38


State 29

   24 expression: expression '*' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 39


State 30

   25 expression: expression '/' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 40


State 31

   17 mif: IF expression ':' . BEG stmt_list END ELSE ':' BEG stmt_list END
   18    | IF expression ':' . BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   19    | IF expression ':' . BEG stmt_list END

    BEG  shift, and go to state 41


State 32

   16 loop: LOOP IDENTIFIER ':' . BEG stmt_list END

    BEG  shift, and go to state 42


State 33

   15 stmt: VAR lval IS . type

    INT   shift, and go to state 43
    BYTE  shift, and go to state 44

    type  go to state 45


State 34

   14 stmt: lval ASSIGNMENT expression .
   22 expression: expression . '+' expression
   23           | expression . '-' expression
   24           | expression . '*' expression
   25           | expression . '/' expression

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 14 (stmt)


State 35

    6 lval: lval '[' expression . ']'
   22 expression: expression . '+' expression
   23           | expression . '-' expression
   24           | expression . '*' expression
   25           | expression . '/' expression

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    ']'  shift, and go to state 46


State 36

   29 expression: '(' expression ')' .

    $default  reduce using rule 29 (expression)


State 37

   22 expression: expression . '+' expression
   22           | expression '+' expression .
   23           | expression . '-' expression
   24           | expression . '*' expression
   25           | expression . '/' expression

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 22 (expression)


State 38

   22 expression: expression . '+' expression
   23           | expression . '-' expression
   23           | expression '-' expression .
   24           | expression . '*' expression
   25           | expression . '/' expression

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 23 (expression)


State 39

   22 expression: expression . '+' expression
   23           | expression . '-' expression
   24           | expression . '*' expression
   24           | expression '*' expression .
   25           | expression . '/' expression

    $default  reduce using rule 24 (expression)


State 40

   22 expression: expression . '+' expression
   23           | expression . '-' expression
   24           | expression . '*' expression
   25           | expression . '/' expression
   25           | expression '/' expression .

    $default  reduce using rule 25 (expression)


State 41

   17 mif: IF expression ':' BEG . stmt_list END ELSE ':' BEG stmt_list END
   18    | IF expression ':' BEG . stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   19    | IF expression ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 47
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 42

   16 loop: LOOP IDENTIFIER ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 48
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 43

    7 type: INT . '[' CONST ']'
    9     | INT .

    '['  shift, and go to state 49

    $default  reduce using rule 9 (type)


State 44

    8 type: BYTE . '[' CONST ']'
   10     | BYTE .

    '['  shift, and go to state 50

    $default  reduce using rule 10 (type)


State 45

   15 stmt: VAR lval IS type .

    $default  reduce using rule 15 (stmt)


State 46

    6 lval: lval '[' expression ']' .

    $default  reduce using rule 6 (lval)


State 47

    3 stmt_list: stmt_list . stmt
   17 mif: IF expression ':' BEG stmt_list . END ELSE ':' BEG stmt_list END
   18    | IF expression ':' BEG stmt_list . END ELIF expression ':' BEG stmt_list END eliftstmt
   19    | IF expression ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 51
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 23
    loop  go to state 12
    mif   go to state 13


State 48

    3 stmt_list: stmt_list . stmt
   16 loop: LOOP IDENTIFIER ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 52
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 23
    loop  go to state 12
    mif   go to state 13


State 49

    7 type: INT '[' . CONST ']'

    CONST  shift, and go to state 53


State 50

    8 type: BYTE '[' . CONST ']'

    CONST  shift, and go to state 54


State 51

   17 mif: IF expression ':' BEG stmt_list END . ELSE ':' BEG stmt_list END
   18    | IF expression ':' BEG stmt_list END . ELIF expression ':' BEG stmt_list END eliftstmt
   19    | IF expression ':' BEG stmt_list END .

    ELSE  shift, and go to state 55
    ELIF  shift, and go to state 56

    $default  reduce using rule 19 (mif)


State 52

   16 loop: LOOP IDENTIFIER ':' BEG stmt_list END .

    $default  reduce using rule 16 (loop)


State 53

    7 type: INT '[' CONST . ']'

    ']'  shift, and go to state 57


State 54

    8 type: BYTE '[' CONST . ']'

    ']'  shift, and go to state 58


State 55

   17 mif: IF expression ':' BEG stmt_list END ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 59


State 56

   18 mif: IF expression ':' BEG stmt_list END ELIF . expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 60


State 57

    7 type: INT '[' CONST ']' .

    $default  reduce using rule 7 (type)


State 58

    8 type: BYTE '[' CONST ']' .

    $default  reduce using rule 8 (type)


State 59

   17 mif: IF expression ':' BEG stmt_list END ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 61


State 60

   18 mif: IF expression ':' BEG stmt_list END ELIF expression . ':' BEG stmt_list END eliftstmt
   22 expression: expression . '+' expression
   23           | expression . '-' expression
   24           | expression . '*' expression
   25           | expression . '/' expression

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    ':'  shift, and go to state 62


State 61

   17 mif: IF expression ':' BEG stmt_list END ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 63
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 62

   18 mif: IF expression ':' BEG stmt_list END ELIF expression ':' . BEG stmt_list END eliftstmt

    BEG  shift, and go to state 64


State 63

    3 stmt_list: stmt_list . stmt
   17 mif: IF expression ':' BEG stmt_list END ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 65
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 23
    loop  go to state 12
    mif   go to state 13


State 64

   18 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 66
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 65

   17 mif: IF expression ':' BEG stmt_list END ELSE ':' BEG stmt_list END .

    $default  reduce using rule 17 (mif)


State 66

    3 stmt_list: stmt_list . stmt
   18 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 67
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 23
    loop  go to state 12
    mif   go to state 13


State 67

   18 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END . eliftstmt

    ELSE  shift, and go to state 68
    ELIF  shift, and go to state 69

    eliftstmt  go to state 70


State 68

   20 eliftstmt: ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 71


State 69

   21 eliftstmt: ELIF . expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 72


State 70

   18 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt .

    $default  reduce using rule 18 (mif)


State 71

   20 eliftstmt: ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 73


State 72

   21 eliftstmt: ELIF expression . ':' BEG stmt_list END eliftstmt
   22 expression: expression . '+' expression
   23           | expression . '-' expression
   24           | expression . '*' expression
   25           | expression . '/' expression

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    ':'  shift, and go to state 74


State 73

   20 eliftstmt: ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 75
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 74

   21 eliftstmt: ELIF expression ':' . BEG stmt_list END eliftstmt

    BEG  shift, and go to state 76


State 75

    3 stmt_list: stmt_list . stmt
   20 eliftstmt: ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 77
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 23
    loop  go to state 12
    mif   go to state 13


State 76

   21 eliftstmt: ELIF expression ':' BEG . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 78
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 77

   20 eliftstmt: ELSE ':' BEG stmt_list END .

    $default  reduce using rule 20 (eliftstmt)


State 78

    3 stmt_list: stmt_list . stmt
   21 eliftstmt: ELIF expression ':' BEG stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 79
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 23
    loop  go to state 12
    mif   go to state 13


State 79

   21 eliftstmt: ELIF expression ':' BEG stmt_list END . eliftstmt

    ELSE  shift, and go to state 68
    ELIF  shift, and go to state 69

    eliftstmt  go to state 80


State 80

   21 eliftstmt: ELIF expression ':' BEG stmt_list END eliftstmt .

    $default  reduce using rule 21 (eliftstmt)
