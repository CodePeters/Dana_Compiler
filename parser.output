Terminals unused in grammar

   TEOF
   BEG


State 72 conflicts: 1 shift/reduce


Grammar

    0 $accept: mainfunc $end

    1 mainfunc: fdef

    2 fdef: DEF header stmt_list END

    3 fdecl: DECL header

    4 header: IDENTIFIER IS type ':' optparam
    5       | IDENTIFIER IS type
    6       | IDENTIFIER ':' optparam
    7       | IDENTIFIER

    8 optparam: idlist AS ftype
    9         | idlist AS ftype ',' optparam

   10 ftype: REF INT
   11      | REF BYTE
   12      | bp
   13      | INT
   14      | BYTE

   15 bp: INT '[' ']'
   16   | BYTE '[' ']'
   17   | INT '[' CONST ']'
   18   | BYTE '[' CONST ']'
   19   | bp '[' CONST ']'

   20 stmt_list: stmt
   21          | stmt stmt_list

   22 type: type '[' CONST ']'
   23     | type_term

   24 type_term: INT
   25          | BYTE

   26 pc: IDENTIFIER ':' param
   27   | IDENTIFIER

   28 param: expression ',' param
   29      | expression

   30 stmt: SKIP
   31     | pc
   32     | mif
   33     | fdef
   34     | loop
   35     | lval ASSIGNMENT expression
   36     | VAR idlist IS type
   37     | BREAK
   38     | BREAK ':' IDENTIFIER
   39     | CONT
   40     | CONT ':' IDENTIFIER
   41     | fdecl
   42     | EXIT
   43     | RETURN ':' expression
   44     | fcall

   45 fcall: IDENTIFIER '(' param ')'
   46      | IDENTIFIER '(' ')'

   47 idlist: IDENTIFIER
   48       | idlist IDENTIFIER

   49 loop: LOOP IDENTIFIER ':' stmt_list END
   50     | LOOP ':' stmt_list END

   51 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END
   52    | IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition ':' stmt_list END

   54 condition: expression LARGER expression
   55          | expression SMALLER expression
   56          | expression LARGEREQ expression
   57          | expression SMALLEREQ expression
   58          | expression EQ expression
   59          | expression DIFF expression
   60          | TRUE
   61          | FALSE
   62          | condition AND condition
   63          | condition OR condition
   64          | NOT condition
   65          | '(' condition ')'
   66          | expression

   67 eliftstmt: ELSE ':' stmt_list END
   68          | ELIF condition ':' stmt_list END eliftstmt

   69 expression: expression '+' expression
   70           | expression '-' expression
   71           | expression '*' expression
   72           | expression '/' expression
   73           | expression '&' expression
   74           | expression '|' expression
   75           | '+' expression
   76           | '-' expression
   77           | '!' expression
   78           | lval
   79           | CONST
   80           | '(' expression ')'
   81           | fcall
   82           | CHAR_CONST

   83 lval: IDENTIFIER
   84     | STRINGLITERAL
   85     | lval '[' expression ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 77
'&' (38) 73
'(' (40) 45 46 65 80
')' (41) 45 46 65 80
'*' (42) 71
'+' (43) 69 75
',' (44) 9 28
'-' (45) 70 76
'/' (47) 72
':' (58) 4 6 26 38 40 43 49 50 51 52 53 67 68
'[' (91) 15 16 17 18 19 22 85
']' (93) 15 16 17 18 19 22 85
'|' (124) 74
error (256)
INT (258) 10 13 15 17 24
BYTE (259) 11 14 16 18 25
IF (260) 51 52 53
ELSE (261) 51 67
LOOP (262) 49 50
AS (263) 8 9
SKIP (264) 30
DECL (265) 3
DEF (266) 2
END (267) 2 49 50 51 52 53 67 68
VAR (268) 36
IS (269) 4 5 36
TEOF (270)
EQ (271) 58
DIFF (272) 59
LARGER (273) 54
SMALLER (274) 55
RETURN (275) 43
EXIT (276) 42
REF (277) 10 11
LARGEREQ (278) 56
SMALLEREQ (279) 57
ASSIGNMENT (280) 35
AND (281) 62
NOT (282) 64
OR (283) 63
ELIF (284) 52 68
TRUE (285) 60
FALSE (286) 61
BREAK (287) 37 38
CONT (288) 39 40
BEG (289)
CONST (290) 17 18 19 22 79
CHAR_CONST (291) 82
IDENTIFIER (292) 4 5 6 7 26 27 38 40 45 46 47 48 49 83
STRINGLITERAL (293) 84
UNARYPL (294)
UNARYMINUS (295)
BANG (296)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
mainfunc (56)
    on left: 1, on right: 0
fdef (57)
    on left: 2, on right: 1 33
fdecl (58)
    on left: 3, on right: 41
header (59)
    on left: 4 5 6 7, on right: 2 3
optparam (60)
    on left: 8 9, on right: 4 6 9
ftype (61)
    on left: 10 11 12 13 14, on right: 8 9
bp (62)
    on left: 15 16 17 18 19, on right: 12 19
stmt_list (63)
    on left: 20 21, on right: 2 21 49 50 51 52 53 67 68
type (64)
    on left: 22 23, on right: 4 5 22 36
type_term (65)
    on left: 24 25, on right: 23
pc (66)
    on left: 26 27, on right: 31
param (67)
    on left: 28 29, on right: 26 28 45
stmt (68)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44, on right:
    20 21
fcall (69)
    on left: 45 46, on right: 44 81
idlist (70)
    on left: 47 48, on right: 8 9 36 48
loop (71)
    on left: 49 50, on right: 34
mif (72)
    on left: 51 52 53, on right: 32
condition (73)
    on left: 54 55 56 57 58 59 60 61 62 63 64 65 66, on right: 51 52
    53 62 63 64 65 68
eliftstmt (74)
    on left: 67 68, on right: 52 68
expression (75)
    on left: 69 70 71 72 73 74 75 76 77 78 79 80 81 82, on right: 28
    29 35 43 54 55 56 57 58 59 66 69 70 71 72 73 74 75 76 77 80 85
lval (76)
    on left: 83 84 85, on right: 35 78 85


State 0

    0 $accept: . mainfunc $end

    DEF  shift, and go to state 1

    mainfunc  go to state 2
    fdef      go to state 3


State 1

    2 fdef: DEF . header stmt_list END

    IDENTIFIER  shift, and go to state 4

    header  go to state 5


State 2

    0 $accept: mainfunc . $end

    $end  shift, and go to state 6


State 3

    1 mainfunc: fdef .

    $default  reduce using rule 1 (mainfunc)


State 4

    4 header: IDENTIFIER . IS type ':' optparam
    5       | IDENTIFIER . IS type
    6       | IDENTIFIER . ':' optparam
    7       | IDENTIFIER .

    IS   shift, and go to state 7
    ':'  shift, and go to state 8

    $default  reduce using rule 7 (header)


State 5

    2 fdef: DEF header . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 22
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 6

    0 $accept: mainfunc $end .

    $default  accept


State 7

    4 header: IDENTIFIER IS . type ':' optparam
    5       | IDENTIFIER IS . type

    INT   shift, and go to state 29
    BYTE  shift, and go to state 30

    type       go to state 31
    type_term  go to state 32


State 8

    6 header: IDENTIFIER ':' . optparam

    IDENTIFIER  shift, and go to state 33

    optparam  go to state 34
    idlist    go to state 35


State 9

   51 mif: IF . condition ':' stmt_list END ELSE ':' stmt_list END
   52    | IF . condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   53    | IF . condition ':' stmt_list END

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 47
    expression  go to state 48
    lval        go to state 49


State 10

   49 loop: LOOP . IDENTIFIER ':' stmt_list END
   50     | LOOP . ':' stmt_list END

    IDENTIFIER  shift, and go to state 50
    ':'         shift, and go to state 51


State 11

   30 stmt: SKIP .

    $default  reduce using rule 30 (stmt)


State 12

    3 fdecl: DECL . header

    IDENTIFIER  shift, and go to state 4

    header  go to state 52


State 13

   36 stmt: VAR . idlist IS type

    IDENTIFIER  shift, and go to state 33

    idlist  go to state 53


State 14

   43 stmt: RETURN . ':' expression

    ':'  shift, and go to state 54


State 15

   42 stmt: EXIT .

    $default  reduce using rule 42 (stmt)


State 16

   37 stmt: BREAK .
   38     | BREAK . ':' IDENTIFIER

    ':'  shift, and go to state 55

    $default  reduce using rule 37 (stmt)


State 17

   39 stmt: CONT .
   40     | CONT . ':' IDENTIFIER

    ':'  shift, and go to state 56

    $default  reduce using rule 39 (stmt)


State 18

   26 pc: IDENTIFIER . ':' param
   27   | IDENTIFIER .
   45 fcall: IDENTIFIER . '(' param ')'
   46      | IDENTIFIER . '(' ')'
   83 lval: IDENTIFIER .

    ':'  shift, and go to state 57
    '('  shift, and go to state 58

    ASSIGNMENT  reduce using rule 83 (lval)
    '['         reduce using rule 83 (lval)
    $default    reduce using rule 27 (pc)


State 19

   84 lval: STRINGLITERAL .

    $default  reduce using rule 84 (lval)


State 20

   33 stmt: fdef .

    $default  reduce using rule 33 (stmt)


State 21

   41 stmt: fdecl .

    $default  reduce using rule 41 (stmt)


State 22

    2 fdef: DEF header stmt_list . END

    END  shift, and go to state 59


State 23

   31 stmt: pc .

    $default  reduce using rule 31 (stmt)


State 24

   20 stmt_list: stmt .
   21          | stmt . stmt_list

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    $default  reduce using rule 20 (stmt_list)

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 60
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 25

   44 stmt: fcall .

    $default  reduce using rule 44 (stmt)


State 26

   34 stmt: loop .

    $default  reduce using rule 34 (stmt)


State 27

   32 stmt: mif .

    $default  reduce using rule 32 (stmt)


State 28

   35 stmt: lval . ASSIGNMENT expression
   85 lval: lval . '[' expression ']'

    ASSIGNMENT  shift, and go to state 61
    '['         shift, and go to state 62


State 29

   24 type_term: INT .

    $default  reduce using rule 24 (type_term)


State 30

   25 type_term: BYTE .

    $default  reduce using rule 25 (type_term)


State 31

    4 header: IDENTIFIER IS type . ':' optparam
    5       | IDENTIFIER IS type .
   22 type: type . '[' CONST ']'

    ':'  shift, and go to state 63
    '['  shift, and go to state 64

    $default  reduce using rule 5 (header)


State 32

   23 type: type_term .

    $default  reduce using rule 23 (type)


State 33

   47 idlist: IDENTIFIER .

    $default  reduce using rule 47 (idlist)


State 34

    6 header: IDENTIFIER ':' optparam .

    $default  reduce using rule 6 (header)


State 35

    8 optparam: idlist . AS ftype
    9         | idlist . AS ftype ',' optparam
   48 idlist: idlist . IDENTIFIER

    AS          shift, and go to state 65
    IDENTIFIER  shift, and go to state 66


State 36

   64 condition: NOT . condition

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 67
    expression  go to state 48
    lval        go to state 49


State 37

   60 condition: TRUE .

    $default  reduce using rule 60 (condition)


State 38

   61 condition: FALSE .

    $default  reduce using rule 61 (condition)


State 39

   79 expression: CONST .

    $default  reduce using rule 79 (expression)


State 40

   82 expression: CHAR_CONST .

    $default  reduce using rule 82 (expression)


State 41

   45 fcall: IDENTIFIER . '(' param ')'
   46      | IDENTIFIER . '(' ')'
   83 lval: IDENTIFIER .

    '('  shift, and go to state 58

    $default  reduce using rule 83 (lval)


State 42

   75 expression: '+' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 69
    lval        go to state 49


State 43

   76 expression: '-' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 70
    lval        go to state 49


State 44

   65 condition: '(' . condition ')'
   80 expression: '(' . expression ')'

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 71
    expression  go to state 72
    lval        go to state 49


State 45

   77 expression: '!' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 73
    lval        go to state 49


State 46

   81 expression: fcall .

    $default  reduce using rule 81 (expression)


State 47

   51 mif: IF condition . ':' stmt_list END ELSE ':' stmt_list END
   52    | IF condition . ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition . ':' stmt_list END
   62 condition: condition . AND condition
   63          | condition . OR condition

    AND  shift, and go to state 74
    OR   shift, and go to state 75
    ':'  shift, and go to state 76


State 48

   54 condition: expression . LARGER expression
   55          | expression . SMALLER expression
   56          | expression . LARGEREQ expression
   57          | expression . SMALLEREQ expression
   58          | expression . EQ expression
   59          | expression . DIFF expression
   66          | expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    EQ         shift, and go to state 77
    DIFF       shift, and go to state 78
    LARGER     shift, and go to state 79
    SMALLER    shift, and go to state 80
    LARGEREQ   shift, and go to state 81
    SMALLEREQ  shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '|'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '&'        shift, and go to state 88

    $default  reduce using rule 66 (condition)


State 49

   78 expression: lval .
   85 lval: lval . '[' expression ']'

    '['  shift, and go to state 62

    $default  reduce using rule 78 (expression)


State 50

   49 loop: LOOP IDENTIFIER . ':' stmt_list END

    ':'  shift, and go to state 89


State 51

   50 loop: LOOP ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 90
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 52

    3 fdecl: DECL header .

    $default  reduce using rule 3 (fdecl)


State 53

   36 stmt: VAR idlist . IS type
   48 idlist: idlist . IDENTIFIER

    IS          shift, and go to state 91
    IDENTIFIER  shift, and go to state 66


State 54

   43 stmt: RETURN ':' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 92
    lval        go to state 49


State 55

   38 stmt: BREAK ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 93


State 56

   40 stmt: CONT ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 94


State 57

   26 pc: IDENTIFIER ':' . param

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    param       go to state 95
    fcall       go to state 46
    expression  go to state 96
    lval        go to state 49


State 58

   45 fcall: IDENTIFIER '(' . param ')'
   46      | IDENTIFIER '(' . ')'

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    ')'            shift, and go to state 97
    '!'            shift, and go to state 45

    param       go to state 98
    fcall       go to state 46
    expression  go to state 96
    lval        go to state 49


State 59

    2 fdef: DEF header stmt_list END .

    $default  reduce using rule 2 (fdef)


State 60

   21 stmt_list: stmt stmt_list .

    $default  reduce using rule 21 (stmt_list)


State 61

   35 stmt: lval ASSIGNMENT . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 99
    lval        go to state 49


State 62

   85 lval: lval '[' . expression ']'

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 100
    lval        go to state 49


State 63

    4 header: IDENTIFIER IS type ':' . optparam

    IDENTIFIER  shift, and go to state 33

    optparam  go to state 101
    idlist    go to state 35


State 64

   22 type: type '[' . CONST ']'

    CONST  shift, and go to state 102


State 65

    8 optparam: idlist AS . ftype
    9         | idlist AS . ftype ',' optparam

    INT   shift, and go to state 103
    BYTE  shift, and go to state 104
    REF   shift, and go to state 105

    ftype  go to state 106
    bp     go to state 107


State 66

   48 idlist: idlist IDENTIFIER .

    $default  reduce using rule 48 (idlist)


State 67

   62 condition: condition . AND condition
   63          | condition . OR condition
   64          | NOT condition .

    $default  reduce using rule 64 (condition)


State 68

   80 expression: '(' . expression ')'

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 108
    lval        go to state 49


State 69

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   75           | '+' expression .

    $default  reduce using rule 75 (expression)


State 70

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   76           | '-' expression .

    $default  reduce using rule 76 (expression)


State 71

   62 condition: condition . AND condition
   63          | condition . OR condition
   65          | '(' condition . ')'

    AND  shift, and go to state 74
    OR   shift, and go to state 75
    ')'  shift, and go to state 109


State 72

   54 condition: expression . LARGER expression
   55          | expression . SMALLER expression
   56          | expression . LARGEREQ expression
   57          | expression . SMALLEREQ expression
   58          | expression . EQ expression
   59          | expression . DIFF expression
   66          | expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   80           | '(' expression . ')'

    EQ         shift, and go to state 77
    DIFF       shift, and go to state 78
    LARGER     shift, and go to state 79
    SMALLER    shift, and go to state 80
    LARGEREQ   shift, and go to state 81
    SMALLEREQ  shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '|'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '&'        shift, and go to state 88
    ')'        shift, and go to state 110

    ')'       [reduce using rule 66 (condition)]
    $default  reduce using rule 66 (condition)


State 73

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   77           | '!' expression .

    $default  reduce using rule 77 (expression)


State 74

   62 condition: condition AND . condition

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 111
    expression  go to state 48
    lval        go to state 49


State 75

   63 condition: condition OR . condition

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 112
    expression  go to state 48
    lval        go to state 49


State 76

   51 mif: IF condition ':' . stmt_list END ELSE ':' stmt_list END
   52    | IF condition ':' . stmt_list END ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 113
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 77

   58 condition: expression EQ . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 114
    lval        go to state 49


State 78

   59 condition: expression DIFF . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 115
    lval        go to state 49


State 79

   54 condition: expression LARGER . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 116
    lval        go to state 49


State 80

   55 condition: expression SMALLER . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 117
    lval        go to state 49


State 81

   56 condition: expression LARGEREQ . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 118
    lval        go to state 49


State 82

   57 condition: expression SMALLEREQ . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 119
    lval        go to state 49


State 83

   69 expression: expression '+' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 120
    lval        go to state 49


State 84

   70 expression: expression '-' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 121
    lval        go to state 49


State 85

   74 expression: expression '|' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 122
    lval        go to state 49


State 86

   71 expression: expression '*' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 123
    lval        go to state 49


State 87

   72 expression: expression '/' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 124
    lval        go to state 49


State 88

   73 expression: expression '&' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 125
    lval        go to state 49


State 89

   49 loop: LOOP IDENTIFIER ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 126
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 90

   50 loop: LOOP ':' stmt_list . END

    END  shift, and go to state 127


State 91

   36 stmt: VAR idlist IS . type

    INT   shift, and go to state 29
    BYTE  shift, and go to state 30

    type       go to state 128
    type_term  go to state 32


State 92

   43 stmt: RETURN ':' expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 43 (stmt)


State 93

   38 stmt: BREAK ':' IDENTIFIER .

    $default  reduce using rule 38 (stmt)


State 94

   40 stmt: CONT ':' IDENTIFIER .

    $default  reduce using rule 40 (stmt)


State 95

   26 pc: IDENTIFIER ':' param .

    $default  reduce using rule 26 (pc)


State 96

   28 param: expression . ',' param
   29      | expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88
    ','  shift, and go to state 129

    $default  reduce using rule 29 (param)


State 97

   46 fcall: IDENTIFIER '(' ')' .

    $default  reduce using rule 46 (fcall)


State 98

   45 fcall: IDENTIFIER '(' param . ')'

    ')'  shift, and go to state 130


State 99

   35 stmt: lval ASSIGNMENT expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 35 (stmt)


State 100

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   85 lval: lval '[' expression . ']'

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88
    ']'  shift, and go to state 131


State 101

    4 header: IDENTIFIER IS type ':' optparam .

    $default  reduce using rule 4 (header)


State 102

   22 type: type '[' CONST . ']'

    ']'  shift, and go to state 132


State 103

   13 ftype: INT .
   15 bp: INT . '[' ']'
   17   | INT . '[' CONST ']'

    '['  shift, and go to state 133

    $default  reduce using rule 13 (ftype)


State 104

   14 ftype: BYTE .
   16 bp: BYTE . '[' ']'
   18   | BYTE . '[' CONST ']'

    '['  shift, and go to state 134

    $default  reduce using rule 14 (ftype)


State 105

   10 ftype: REF . INT
   11      | REF . BYTE

    INT   shift, and go to state 135
    BYTE  shift, and go to state 136


State 106

    8 optparam: idlist AS ftype .
    9         | idlist AS ftype . ',' optparam

    ','  shift, and go to state 137

    $default  reduce using rule 8 (optparam)


State 107

   12 ftype: bp .
   19 bp: bp . '[' CONST ']'

    '['  shift, and go to state 138

    $default  reduce using rule 12 (ftype)


State 108

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   80           | '(' expression . ')'

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88
    ')'  shift, and go to state 110


State 109

   65 condition: '(' condition ')' .

    $default  reduce using rule 65 (condition)


State 110

   80 expression: '(' expression ')' .

    $default  reduce using rule 80 (expression)


State 111

   62 condition: condition . AND condition
   62          | condition AND condition .
   63          | condition . OR condition

    $default  reduce using rule 62 (condition)


State 112

   62 condition: condition . AND condition
   63          | condition . OR condition
   63          | condition OR condition .

    AND  shift, and go to state 74

    $default  reduce using rule 63 (condition)


State 113

   51 mif: IF condition ':' stmt_list . END ELSE ':' stmt_list END
   52    | IF condition ':' stmt_list . END ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition ':' stmt_list . END

    END  shift, and go to state 139


State 114

   58 condition: expression EQ expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 58 (condition)


State 115

   59 condition: expression DIFF expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 59 (condition)


State 116

   54 condition: expression LARGER expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 54 (condition)


State 117

   55 condition: expression SMALLER expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 55 (condition)


State 118

   56 condition: expression LARGEREQ expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 56 (condition)


State 119

   57 condition: expression SMALLEREQ expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 57 (condition)


State 120

   69 expression: expression . '+' expression
   69           | expression '+' expression .
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 69 (expression)


State 121

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   70           | expression '-' expression .
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 70 (expression)


State 122

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   74           | expression '|' expression .

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 74 (expression)


State 123

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   71           | expression '*' expression .
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    $default  reduce using rule 71 (expression)


State 124

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   72           | expression '/' expression .
   73           | expression . '&' expression
   74           | expression . '|' expression

    $default  reduce using rule 72 (expression)


State 125

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   73           | expression '&' expression .
   74           | expression . '|' expression

    $default  reduce using rule 73 (expression)


State 126

   49 loop: LOOP IDENTIFIER ':' stmt_list . END

    END  shift, and go to state 140


State 127

   50 loop: LOOP ':' stmt_list END .

    $default  reduce using rule 50 (loop)


State 128

   22 type: type . '[' CONST ']'
   36 stmt: VAR idlist IS type .

    '['  shift, and go to state 64

    $default  reduce using rule 36 (stmt)


State 129

   28 param: expression ',' . param

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    param       go to state 141
    fcall       go to state 46
    expression  go to state 96
    lval        go to state 49


State 130

   45 fcall: IDENTIFIER '(' param ')' .

    $default  reduce using rule 45 (fcall)


State 131

   85 lval: lval '[' expression ']' .

    $default  reduce using rule 85 (lval)


State 132

   22 type: type '[' CONST ']' .

    $default  reduce using rule 22 (type)


State 133

   15 bp: INT '[' . ']'
   17   | INT '[' . CONST ']'

    CONST  shift, and go to state 142
    ']'    shift, and go to state 143


State 134

   16 bp: BYTE '[' . ']'
   18   | BYTE '[' . CONST ']'

    CONST  shift, and go to state 144
    ']'    shift, and go to state 145


State 135

   10 ftype: REF INT .

    $default  reduce using rule 10 (ftype)


State 136

   11 ftype: REF BYTE .

    $default  reduce using rule 11 (ftype)


State 137

    9 optparam: idlist AS ftype ',' . optparam

    IDENTIFIER  shift, and go to state 33

    optparam  go to state 146
    idlist    go to state 35


State 138

   19 bp: bp '[' . CONST ']'

    CONST  shift, and go to state 147


State 139

   51 mif: IF condition ':' stmt_list END . ELSE ':' stmt_list END
   52    | IF condition ':' stmt_list END . ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition ':' stmt_list END .

    ELSE  shift, and go to state 148
    ELIF  shift, and go to state 149

    $default  reduce using rule 53 (mif)


State 140

   49 loop: LOOP IDENTIFIER ':' stmt_list END .

    $default  reduce using rule 49 (loop)


State 141

   28 param: expression ',' param .

    $default  reduce using rule 28 (param)


State 142

   17 bp: INT '[' CONST . ']'

    ']'  shift, and go to state 150


State 143

   15 bp: INT '[' ']' .

    $default  reduce using rule 15 (bp)


State 144

   18 bp: BYTE '[' CONST . ']'

    ']'  shift, and go to state 151


State 145

   16 bp: BYTE '[' ']' .

    $default  reduce using rule 16 (bp)


State 146

    9 optparam: idlist AS ftype ',' optparam .

    $default  reduce using rule 9 (optparam)


State 147

   19 bp: bp '[' CONST . ']'

    ']'  shift, and go to state 152


State 148

   51 mif: IF condition ':' stmt_list END ELSE . ':' stmt_list END

    ':'  shift, and go to state 153


State 149

   52 mif: IF condition ':' stmt_list END ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 154
    expression  go to state 48
    lval        go to state 49


State 150

   17 bp: INT '[' CONST ']' .

    $default  reduce using rule 17 (bp)


State 151

   18 bp: BYTE '[' CONST ']' .

    $default  reduce using rule 18 (bp)


State 152

   19 bp: bp '[' CONST ']' .

    $default  reduce using rule 19 (bp)


State 153

   51 mif: IF condition ':' stmt_list END ELSE ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 155
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 154

   52 mif: IF condition ':' stmt_list END ELIF condition . ':' stmt_list END eliftstmt
   62 condition: condition . AND condition
   63          | condition . OR condition

    AND  shift, and go to state 74
    OR   shift, and go to state 75
    ':'  shift, and go to state 156


State 155

   51 mif: IF condition ':' stmt_list END ELSE ':' stmt_list . END

    END  shift, and go to state 157


State 156

   52 mif: IF condition ':' stmt_list END ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 158
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 157

   51 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END .

    $default  reduce using rule 51 (mif)


State 158

   52 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list . END eliftstmt

    END  shift, and go to state 159


State 159

   52 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 160
    ELIF  shift, and go to state 161

    eliftstmt  go to state 162


State 160

   67 eliftstmt: ELSE . ':' stmt_list END

    ':'  shift, and go to state 163


State 161

   68 eliftstmt: ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 164
    expression  go to state 48
    lval        go to state 49


State 162

   52 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 52 (mif)


State 163

   67 eliftstmt: ELSE ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 165
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 164

   62 condition: condition . AND condition
   63          | condition . OR condition
   68 eliftstmt: ELIF condition . ':' stmt_list END eliftstmt

    AND  shift, and go to state 74
    OR   shift, and go to state 75
    ':'  shift, and go to state 166


State 165

   67 eliftstmt: ELSE ':' stmt_list . END

    END  shift, and go to state 167


State 166

   68 eliftstmt: ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 168
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 167

   67 eliftstmt: ELSE ':' stmt_list END .

    $default  reduce using rule 67 (eliftstmt)


State 168

   68 eliftstmt: ELIF condition ':' stmt_list . END eliftstmt

    END  shift, and go to state 169


State 169

   68 eliftstmt: ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 160
    ELIF  shift, and go to state 161

    eliftstmt  go to state 170


State 170

   68 eliftstmt: ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 68 (eliftstmt)
