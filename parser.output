Terminals unused in grammar

   AS
   DECL
   DEF
   ADD
   MUL
   DIV
   SUB
   EQ
   DIFF
   LARGER
   SMALLER
   LARGEREQ
   SMALLEREQ
   COLON
   BREAK
   CONT


Grammar

    0 $accept: body $end

    1 body: BEG stmt_list END

    2 stmt_list: stmt
    3          | stmt_list stmt

    4 lval: IDENTIFIER
    5     | STRINGLITERAL
    6     | lval '[' expression ']'

    7 type: INT '[' CONST ']'
    8     | BYTE '[' CONST ']'
    9     | INT
   10     | BYTE

   11 stmt: SKIP
   12     | mif
   13     | loop
   14     | lval ASSIGNMENT expression
   15     | VAR lval IS type

   16 loop: LOOP IDENTIFIER ':' BEG stmt_list END
   17     | LOOP ':' BEG stmt_list END

   18 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   19    | IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   20    | IF condition ':' BEG stmt_list END

   21 condition: expression '>' expression
   22          | expression '<' expression
   23          | TRUE
   24          | FALSE
   25          | condition AND condition
   26          | condition OR condition
   27          | NOT condition

   28 eliftstmt: ELSE ':' BEG stmt_list END
   29          | ELIF expression ':' BEG stmt_list END eliftstmt

   30 expression: expression '+' expression
   31           | expression '-' expression
   32           | expression '*' expression
   33           | expression '/' expression
   34           | '+' expression
   35           | '-' expression
   36           | IDENTIFIER
   37           | STRINGLITERAL
   38           | CONST
   39           | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 39
')' (41) 39
'*' (42) 32
'+' (43) 30 34
'-' (45) 31 35
'/' (47) 33
':' (58) 16 17 18 19 20 28 29
'<' (60) 22
'>' (62) 21
'[' (91) 6 7 8
']' (93) 6 7 8
error (256)
IDENTIFIER (258) 4 16 36
INT (259) 7 9
BYTE (260) 8 10
IF (261) 18 19 20
ELSE (262) 18 28
STRINGLITERAL (263) 5 37
LOOP (264) 16 17
AS (265)
SKIP (266) 11
DECL (267)
DEF (268)
BEG (269) 1 16 17 18 19 20 28 29
END (270) 1 16 17 18 19 20 28 29
VAR (271) 15
IS (272) 15
ADD (273)
MUL (274)
DIV (275)
SUB (276)
EQ (277)
DIFF (278)
LARGER (279)
SMALLER (280)
LARGEREQ (281)
SMALLEREQ (282)
COLON (283)
ASSIGNMENT (284) 14
CONST (285) 7 8 38
AND (286) 25
NOT (287) 27
OR (288) 26
ELIF (289) 19 29
TRUE (290) 23
FALSE (291) 24
BREAK (292)
CONT (293)
UNARYPL (294)
UNARYMINUS (295)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
body (53)
    on left: 1, on right: 0
stmt_list (54)
    on left: 2 3, on right: 1 3 16 17 18 19 20 28 29
lval (55)
    on left: 4 5 6, on right: 6 14 15
type (56)
    on left: 7 8 9 10, on right: 15
stmt (57)
    on left: 11 12 13 14 15, on right: 2 3
loop (58)
    on left: 16 17, on right: 13
mif (59)
    on left: 18 19 20, on right: 12
condition (60)
    on left: 21 22 23 24 25 26 27, on right: 18 20 25 26 27
eliftstmt (61)
    on left: 28 29, on right: 19 29
expression (62)
    on left: 30 31 32 33 34 35 36 37 38 39, on right: 6 14 19 21 22
    29 30 31 32 33 34 35 39


State 0

    0 $accept: . body $end

    BEG  shift, and go to state 1

    body  go to state 2


State 1

    1 body: BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 9
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 2

    0 $accept: body . $end

    $end  shift, and go to state 14


State 3

    4 lval: IDENTIFIER .

    $default  reduce using rule 4 (lval)


State 4

   18 mif: IF . condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   19    | IF . expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   20    | IF . condition ':' BEG stmt_list END

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    NOT            shift, and go to state 18
    TRUE           shift, and go to state 19
    FALSE          shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    condition   go to state 24
    expression  go to state 25


State 5

    5 lval: STRINGLITERAL .

    $default  reduce using rule 5 (lval)


State 6

   16 loop: LOOP . IDENTIFIER ':' BEG stmt_list END
   17     | LOOP . ':' BEG stmt_list END

    IDENTIFIER  shift, and go to state 26
    ':'         shift, and go to state 27


State 7

   11 stmt: SKIP .

    $default  reduce using rule 11 (stmt)


State 8

   15 stmt: VAR . lval IS type

    IDENTIFIER     shift, and go to state 3
    STRINGLITERAL  shift, and go to state 5

    lval  go to state 28


State 9

    1 body: BEG stmt_list . END
    3 stmt_list: stmt_list . stmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 29
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 30
    loop  go to state 12
    mif   go to state 13


State 10

    6 lval: lval . '[' expression ']'
   14 stmt: lval . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 31
    '['         shift, and go to state 32


State 11

    2 stmt_list: stmt .

    $default  reduce using rule 2 (stmt_list)


State 12

   13 stmt: loop .

    $default  reduce using rule 13 (stmt)


State 13

   12 stmt: mif .

    $default  reduce using rule 12 (stmt)


State 14

    0 $accept: body $end .

    $default  accept


State 15

   36 expression: IDENTIFIER .

    $default  reduce using rule 36 (expression)


State 16

   37 expression: STRINGLITERAL .

    $default  reduce using rule 37 (expression)


State 17

   38 expression: CONST .

    $default  reduce using rule 38 (expression)


State 18

   27 condition: NOT . condition

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    NOT            shift, and go to state 18
    TRUE           shift, and go to state 19
    FALSE          shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    condition   go to state 33
    expression  go to state 34


State 19

   23 condition: TRUE .

    $default  reduce using rule 23 (condition)


State 20

   24 condition: FALSE .

    $default  reduce using rule 24 (condition)


State 21

   34 expression: '+' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 35


State 22

   35 expression: '-' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 36


State 23

   39 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 37


State 24

   18 mif: IF condition . ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   20    | IF condition . ':' BEG stmt_list END
   25 condition: condition . AND condition
   26          | condition . OR condition

    AND  shift, and go to state 38
    OR   shift, and go to state 39
    ':'  shift, and go to state 40


State 25

   19 mif: IF expression . ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   21 condition: expression . '>' expression
   22          | expression . '<' expression
   30 expression: expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    '<'  shift, and go to state 45
    '>'  shift, and go to state 46
    ':'  shift, and go to state 47


State 26

   16 loop: LOOP IDENTIFIER . ':' BEG stmt_list END

    ':'  shift, and go to state 48


State 27

   17 loop: LOOP ':' . BEG stmt_list END

    BEG  shift, and go to state 49


State 28

    6 lval: lval . '[' expression ']'
   15 stmt: VAR lval . IS type

    IS   shift, and go to state 50
    '['  shift, and go to state 32


State 29

    1 body: BEG stmt_list END .

    $default  reduce using rule 1 (body)


State 30

    3 stmt_list: stmt_list stmt .

    $default  reduce using rule 3 (stmt_list)


State 31

   14 stmt: lval ASSIGNMENT . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 51


State 32

    6 lval: lval '[' . expression ']'

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 52


State 33

   25 condition: condition . AND condition
   26          | condition . OR condition
   27          | NOT condition .

    AND  shift, and go to state 38
    OR   shift, and go to state 39

    $default  reduce using rule 27 (condition)


State 34

   21 condition: expression . '>' expression
   22          | expression . '<' expression
   30 expression: expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    '<'  shift, and go to state 45
    '>'  shift, and go to state 46


State 35

   30 expression: expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   34           | '+' expression .

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44

    $default  reduce using rule 34 (expression)


State 36

   30 expression: expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   35           | '-' expression .

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44

    $default  reduce using rule 35 (expression)


State 37

   30 expression: expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   39           | '(' expression . ')'

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    ')'  shift, and go to state 53


State 38

   25 condition: condition AND . condition

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    NOT            shift, and go to state 18
    TRUE           shift, and go to state 19
    FALSE          shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    condition   go to state 54
    expression  go to state 34


State 39

   26 condition: condition OR . condition

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    NOT            shift, and go to state 18
    TRUE           shift, and go to state 19
    FALSE          shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    condition   go to state 55
    expression  go to state 34


State 40

   18 mif: IF condition ':' . BEG stmt_list END ELSE ':' BEG stmt_list END
   20    | IF condition ':' . BEG stmt_list END

    BEG  shift, and go to state 56


State 41

   30 expression: expression '+' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 57


State 42

   31 expression: expression '-' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 58


State 43

   32 expression: expression '*' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 59


State 44

   33 expression: expression '/' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 60


State 45

   22 condition: expression '<' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 61


State 46

   21 condition: expression '>' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 62


State 47

   19 mif: IF expression ':' . BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt

    BEG  shift, and go to state 63


State 48

   16 loop: LOOP IDENTIFIER ':' . BEG stmt_list END

    BEG  shift, and go to state 64


State 49

   17 loop: LOOP ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 65
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 50

   15 stmt: VAR lval IS . type

    INT   shift, and go to state 66
    BYTE  shift, and go to state 67

    type  go to state 68


State 51

   14 stmt: lval ASSIGNMENT expression .
   30 expression: expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44

    $default  reduce using rule 14 (stmt)


State 52

    6 lval: lval '[' expression . ']'
   30 expression: expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    ']'  shift, and go to state 69


State 53

   39 expression: '(' expression ')' .

    $default  reduce using rule 39 (expression)


State 54

   25 condition: condition . AND condition
   25          | condition AND condition .
   26          | condition . OR condition

    OR  shift, and go to state 39

    $default  reduce using rule 25 (condition)


State 55

   25 condition: condition . AND condition
   26          | condition . OR condition
   26          | condition OR condition .

    $default  reduce using rule 26 (condition)


State 56

   18 mif: IF condition ':' BEG . stmt_list END ELSE ':' BEG stmt_list END
   20    | IF condition ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 70
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 57

   30 expression: expression . '+' expression
   30           | expression '+' expression .
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression

    '*'  shift, and go to state 43
    '/'  shift, and go to state 44

    $default  reduce using rule 30 (expression)


State 58

   30 expression: expression . '+' expression
   31           | expression . '-' expression
   31           | expression '-' expression .
   32           | expression . '*' expression
   33           | expression . '/' expression

    '*'  shift, and go to state 43
    '/'  shift, and go to state 44

    $default  reduce using rule 31 (expression)


State 59

   30 expression: expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   32           | expression '*' expression .
   33           | expression . '/' expression

    $default  reduce using rule 32 (expression)


State 60

   30 expression: expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression
   33           | expression '/' expression .

    $default  reduce using rule 33 (expression)


State 61

   22 condition: expression '<' expression .
   30 expression: expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44

    $default  reduce using rule 22 (condition)


State 62

   21 condition: expression '>' expression .
   30 expression: expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44

    $default  reduce using rule 21 (condition)


State 63

   19 mif: IF expression ':' BEG . stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 71
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 64

   16 loop: LOOP IDENTIFIER ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 72
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 65

    3 stmt_list: stmt_list . stmt
   17 loop: LOOP ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 73
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 30
    loop  go to state 12
    mif   go to state 13


State 66

    7 type: INT . '[' CONST ']'
    9     | INT .

    '['  shift, and go to state 74

    $default  reduce using rule 9 (type)


State 67

    8 type: BYTE . '[' CONST ']'
   10     | BYTE .

    '['  shift, and go to state 75

    $default  reduce using rule 10 (type)


State 68

   15 stmt: VAR lval IS type .

    $default  reduce using rule 15 (stmt)


State 69

    6 lval: lval '[' expression ']' .

    $default  reduce using rule 6 (lval)


State 70

    3 stmt_list: stmt_list . stmt
   18 mif: IF condition ':' BEG stmt_list . END ELSE ':' BEG stmt_list END
   20    | IF condition ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 76
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 30
    loop  go to state 12
    mif   go to state 13


State 71

    3 stmt_list: stmt_list . stmt
   19 mif: IF expression ':' BEG stmt_list . END ELIF expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 77
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 30
    loop  go to state 12
    mif   go to state 13


State 72

    3 stmt_list: stmt_list . stmt
   16 loop: LOOP IDENTIFIER ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 78
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 30
    loop  go to state 12
    mif   go to state 13


State 73

   17 loop: LOOP ':' BEG stmt_list END .

    $default  reduce using rule 17 (loop)


State 74

    7 type: INT '[' . CONST ']'

    CONST  shift, and go to state 79


State 75

    8 type: BYTE '[' . CONST ']'

    CONST  shift, and go to state 80


State 76

   18 mif: IF condition ':' BEG stmt_list END . ELSE ':' BEG stmt_list END
   20    | IF condition ':' BEG stmt_list END .

    ELSE  shift, and go to state 81

    $default  reduce using rule 20 (mif)


State 77

   19 mif: IF expression ':' BEG stmt_list END . ELIF expression ':' BEG stmt_list END eliftstmt

    ELIF  shift, and go to state 82


State 78

   16 loop: LOOP IDENTIFIER ':' BEG stmt_list END .

    $default  reduce using rule 16 (loop)


State 79

    7 type: INT '[' CONST . ']'

    ']'  shift, and go to state 83


State 80

    8 type: BYTE '[' CONST . ']'

    ']'  shift, and go to state 84


State 81

   18 mif: IF condition ':' BEG stmt_list END ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 85


State 82

   19 mif: IF expression ':' BEG stmt_list END ELIF . expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 86


State 83

    7 type: INT '[' CONST ']' .

    $default  reduce using rule 7 (type)


State 84

    8 type: BYTE '[' CONST ']' .

    $default  reduce using rule 8 (type)


State 85

   18 mif: IF condition ':' BEG stmt_list END ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 87


State 86

   19 mif: IF expression ':' BEG stmt_list END ELIF expression . ':' BEG stmt_list END eliftstmt
   30 expression: expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    ':'  shift, and go to state 88


State 87

   18 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 89
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 88

   19 mif: IF expression ':' BEG stmt_list END ELIF expression ':' . BEG stmt_list END eliftstmt

    BEG  shift, and go to state 90


State 89

    3 stmt_list: stmt_list . stmt
   18 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 91
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 30
    loop  go to state 12
    mif   go to state 13


State 90

   19 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 92
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 91

   18 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END .

    $default  reduce using rule 18 (mif)


State 92

    3 stmt_list: stmt_list . stmt
   19 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 93
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 30
    loop  go to state 12
    mif   go to state 13


State 93

   19 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END . eliftstmt

    ELSE  shift, and go to state 94
    ELIF  shift, and go to state 95

    eliftstmt  go to state 96


State 94

   28 eliftstmt: ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 97


State 95

   29 eliftstmt: ELIF . expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expression  go to state 98


State 96

   19 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt .

    $default  reduce using rule 19 (mif)


State 97

   28 eliftstmt: ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 99


State 98

   29 eliftstmt: ELIF expression . ':' BEG stmt_list END eliftstmt
   30 expression: expression . '+' expression
   31           | expression . '-' expression
   32           | expression . '*' expression
   33           | expression . '/' expression

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    ':'  shift, and go to state 100


State 99

   28 eliftstmt: ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 101
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 100

   29 eliftstmt: ELIF expression ':' . BEG stmt_list END eliftstmt

    BEG  shift, and go to state 102


State 101

    3 stmt_list: stmt_list . stmt
   28 eliftstmt: ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 103
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 30
    loop  go to state 12
    mif   go to state 13


State 102

   29 eliftstmt: ELIF expression ':' BEG . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 104
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 103

   28 eliftstmt: ELSE ':' BEG stmt_list END .

    $default  reduce using rule 28 (eliftstmt)


State 104

    3 stmt_list: stmt_list . stmt
   29 eliftstmt: ELIF expression ':' BEG stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 105
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 30
    loop  go to state 12
    mif   go to state 13


State 105

   29 eliftstmt: ELIF expression ':' BEG stmt_list END . eliftstmt

    ELSE  shift, and go to state 94
    ELIF  shift, and go to state 95

    eliftstmt  go to state 106


State 106

   29 eliftstmt: ELIF expression ':' BEG stmt_list END eliftstmt .

    $default  reduce using rule 29 (eliftstmt)
