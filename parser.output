Terminals unused in grammar

   TEOF
   BEG


State 72 conflicts: 1 shift/reduce


Grammar

    0 $accept: mainfunc $end

    1 mainfunc: fdef

    2 fdef: DEF header stmt_list END

    3 fdecl: DECL header

    4 header: IDENTIFIER IS type ':' optparam
    5       | IDENTIFIER IS type
    6       | IDENTIFIER ':' optparam
    7       | IDENTIFIER

    8 optparam: idlist AS ftype
    9         | idlist AS reftype
   10         | idlist AS ftype ',' optparam
   11         | idlist AS reftype ',' optparam

   12 ftype: bp
   13      | INT
   14      | BYTE

   15 reftype: REF INT
   16        | REF BYTE

   17 bp: INT '[' ']'
   18   | BYTE '[' ']'
   19   | INT '[' CONST ']'
   20   | BYTE '[' CONST ']'
   21   | bp '[' CONST ']'

   22 stmt_list: stmt
   23          | stmt stmt_list

   24 type: type '[' CONST ']'
   25     | type_term

   26 type_term: INT
   27          | BYTE

   28 pc: IDENTIFIER ':' param
   29   | IDENTIFIER

   30 param: expression ',' param
   31      | expression

   32 stmt: SKIP
   33     | pc
   34     | mif
   35     | fdef
   36     | loop
   37     | lval ASSIGNMENT expression
   38     | VAR idlist IS type
   39     | BREAK
   40     | BREAK ':' IDENTIFIER
   41     | CONT
   42     | CONT ':' IDENTIFIER
   43     | fdecl
   44     | EXIT
   45     | RETURN ':' expression
   46     | fcall

   47 fcall: IDENTIFIER '(' param ')'
   48      | IDENTIFIER '(' ')'

   49 idlist: IDENTIFIER
   50       | idlist IDENTIFIER

   51 loop: LOOP IDENTIFIER ':' stmt_list END
   52     | LOOP ':' stmt_list END

   53 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END
   54    | IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   55    | IF condition ':' stmt_list END

   56 condition: expression LARGER expression
   57          | expression SMALLER expression
   58          | expression LARGEREQ expression
   59          | expression SMALLEREQ expression
   60          | expression EQ expression
   61          | expression DIFF expression
   62          | TRUE
   63          | FALSE
   64          | condition AND condition
   65          | condition OR condition
   66          | NOT condition
   67          | '(' condition ')'
   68          | expression

   69 eliftstmt: ELSE ':' stmt_list END
   70          | ELIF condition ':' stmt_list END eliftstmt

   71 expression: expression '+' expression
   72           | expression '-' expression
   73           | expression '*' expression
   74           | expression '/' expression
   75           | expression '&' expression
   76           | expression '|' expression
   77           | '+' expression
   78           | '-' expression
   79           | '!' expression
   80           | lval
   81           | CONST
   82           | '(' expression ')'
   83           | fcall
   84           | CHAR_CONST

   85 lval: IDENTIFIER
   86     | STRINGLITERAL
   87     | lval '[' expression ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 79
'&' (38) 75
'(' (40) 47 48 67 82
')' (41) 47 48 67 82
'*' (42) 73
'+' (43) 71 77
',' (44) 10 11 30
'-' (45) 72 78
'/' (47) 74
':' (58) 4 6 28 40 42 45 51 52 53 54 55 69 70
'[' (91) 17 18 19 20 21 24 87
']' (93) 17 18 19 20 21 24 87
'|' (124) 76
error (256)
INT (258) 13 15 17 19 26
BYTE (259) 14 16 18 20 27
IF (260) 53 54 55
ELSE (261) 53 69
LOOP (262) 51 52
AS (263) 8 9 10 11
SKIP (264) 32
DECL (265) 3
DEF (266) 2
END (267) 2 51 52 53 54 55 69 70
VAR (268) 38
IS (269) 4 5 38
TEOF (270)
EQ (271) 60
DIFF (272) 61
LARGER (273) 56
SMALLER (274) 57
RETURN (275) 45
EXIT (276) 44
REF (277) 15 16
LARGEREQ (278) 58
SMALLEREQ (279) 59
ASSIGNMENT (280) 37
AND (281) 64
NOT (282) 66
OR (283) 65
ELIF (284) 54 70
TRUE (285) 62
FALSE (286) 63
BREAK (287) 39 40
CONT (288) 41 42
BEG (289)
CONST (290) 19 20 21 24 81
CHAR_CONST (291) 84
IDENTIFIER (292) 4 5 6 7 28 29 40 42 47 48 49 50 51 85
STRINGLITERAL (293) 86
UNARYPL (294)
UNARYMINUS (295)
BANG (296)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
mainfunc (56)
    on left: 1, on right: 0
fdef (57)
    on left: 2, on right: 1 35
fdecl (58)
    on left: 3, on right: 43
header (59)
    on left: 4 5 6 7, on right: 2 3
optparam (60)
    on left: 8 9 10 11, on right: 4 6 10 11
ftype (61)
    on left: 12 13 14, on right: 8 10
reftype (62)
    on left: 15 16, on right: 9 11
bp (63)
    on left: 17 18 19 20 21, on right: 12 21
stmt_list (64)
    on left: 22 23, on right: 2 23 51 52 53 54 55 69 70
type (65)
    on left: 24 25, on right: 4 5 24 38
type_term (66)
    on left: 26 27, on right: 25
pc (67)
    on left: 28 29, on right: 33
param (68)
    on left: 30 31, on right: 28 30 47
stmt (69)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46, on right:
    22 23
fcall (70)
    on left: 47 48, on right: 46 83
idlist (71)
    on left: 49 50, on right: 8 9 10 11 38 50
loop (72)
    on left: 51 52, on right: 36
mif (73)
    on left: 53 54 55, on right: 34
condition (74)
    on left: 56 57 58 59 60 61 62 63 64 65 66 67 68, on right: 53 54
    55 64 65 66 67 70
eliftstmt (75)
    on left: 69 70, on right: 54 70
expression (76)
    on left: 71 72 73 74 75 76 77 78 79 80 81 82 83 84, on right: 30
    31 37 45 56 57 58 59 60 61 68 71 72 73 74 75 76 77 78 79 82 87
lval (77)
    on left: 85 86 87, on right: 37 80 87


State 0

    0 $accept: . mainfunc $end

    DEF  shift, and go to state 1

    mainfunc  go to state 2
    fdef      go to state 3


State 1

    2 fdef: DEF . header stmt_list END

    IDENTIFIER  shift, and go to state 4

    header  go to state 5


State 2

    0 $accept: mainfunc . $end

    $end  shift, and go to state 6


State 3

    1 mainfunc: fdef .

    $default  reduce using rule 1 (mainfunc)


State 4

    4 header: IDENTIFIER . IS type ':' optparam
    5       | IDENTIFIER . IS type
    6       | IDENTIFIER . ':' optparam
    7       | IDENTIFIER .

    IS   shift, and go to state 7
    ':'  shift, and go to state 8

    $default  reduce using rule 7 (header)


State 5

    2 fdef: DEF header . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 22
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 6

    0 $accept: mainfunc $end .

    $default  accept


State 7

    4 header: IDENTIFIER IS . type ':' optparam
    5       | IDENTIFIER IS . type

    INT   shift, and go to state 29
    BYTE  shift, and go to state 30

    type       go to state 31
    type_term  go to state 32


State 8

    6 header: IDENTIFIER ':' . optparam

    IDENTIFIER  shift, and go to state 33

    optparam  go to state 34
    idlist    go to state 35


State 9

   53 mif: IF . condition ':' stmt_list END ELSE ':' stmt_list END
   54    | IF . condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   55    | IF . condition ':' stmt_list END

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 47
    expression  go to state 48
    lval        go to state 49


State 10

   51 loop: LOOP . IDENTIFIER ':' stmt_list END
   52     | LOOP . ':' stmt_list END

    IDENTIFIER  shift, and go to state 50
    ':'         shift, and go to state 51


State 11

   32 stmt: SKIP .

    $default  reduce using rule 32 (stmt)


State 12

    3 fdecl: DECL . header

    IDENTIFIER  shift, and go to state 4

    header  go to state 52


State 13

   38 stmt: VAR . idlist IS type

    IDENTIFIER  shift, and go to state 33

    idlist  go to state 53


State 14

   45 stmt: RETURN . ':' expression

    ':'  shift, and go to state 54


State 15

   44 stmt: EXIT .

    $default  reduce using rule 44 (stmt)


State 16

   39 stmt: BREAK .
   40     | BREAK . ':' IDENTIFIER

    ':'  shift, and go to state 55

    $default  reduce using rule 39 (stmt)


State 17

   41 stmt: CONT .
   42     | CONT . ':' IDENTIFIER

    ':'  shift, and go to state 56

    $default  reduce using rule 41 (stmt)


State 18

   28 pc: IDENTIFIER . ':' param
   29   | IDENTIFIER .
   47 fcall: IDENTIFIER . '(' param ')'
   48      | IDENTIFIER . '(' ')'
   85 lval: IDENTIFIER .

    ':'  shift, and go to state 57
    '('  shift, and go to state 58

    ASSIGNMENT  reduce using rule 85 (lval)
    '['         reduce using rule 85 (lval)
    $default    reduce using rule 29 (pc)


State 19

   86 lval: STRINGLITERAL .

    $default  reduce using rule 86 (lval)


State 20

   35 stmt: fdef .

    $default  reduce using rule 35 (stmt)


State 21

   43 stmt: fdecl .

    $default  reduce using rule 43 (stmt)


State 22

    2 fdef: DEF header stmt_list . END

    END  shift, and go to state 59


State 23

   33 stmt: pc .

    $default  reduce using rule 33 (stmt)


State 24

   22 stmt_list: stmt .
   23          | stmt . stmt_list

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    $default  reduce using rule 22 (stmt_list)

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 60
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 25

   46 stmt: fcall .

    $default  reduce using rule 46 (stmt)


State 26

   36 stmt: loop .

    $default  reduce using rule 36 (stmt)


State 27

   34 stmt: mif .

    $default  reduce using rule 34 (stmt)


State 28

   37 stmt: lval . ASSIGNMENT expression
   87 lval: lval . '[' expression ']'

    ASSIGNMENT  shift, and go to state 61
    '['         shift, and go to state 62


State 29

   26 type_term: INT .

    $default  reduce using rule 26 (type_term)


State 30

   27 type_term: BYTE .

    $default  reduce using rule 27 (type_term)


State 31

    4 header: IDENTIFIER IS type . ':' optparam
    5       | IDENTIFIER IS type .
   24 type: type . '[' CONST ']'

    ':'  shift, and go to state 63
    '['  shift, and go to state 64

    $default  reduce using rule 5 (header)


State 32

   25 type: type_term .

    $default  reduce using rule 25 (type)


State 33

   49 idlist: IDENTIFIER .

    $default  reduce using rule 49 (idlist)


State 34

    6 header: IDENTIFIER ':' optparam .

    $default  reduce using rule 6 (header)


State 35

    8 optparam: idlist . AS ftype
    9         | idlist . AS reftype
   10         | idlist . AS ftype ',' optparam
   11         | idlist . AS reftype ',' optparam
   50 idlist: idlist . IDENTIFIER

    AS          shift, and go to state 65
    IDENTIFIER  shift, and go to state 66


State 36

   66 condition: NOT . condition

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 67
    expression  go to state 48
    lval        go to state 49


State 37

   62 condition: TRUE .

    $default  reduce using rule 62 (condition)


State 38

   63 condition: FALSE .

    $default  reduce using rule 63 (condition)


State 39

   81 expression: CONST .

    $default  reduce using rule 81 (expression)


State 40

   84 expression: CHAR_CONST .

    $default  reduce using rule 84 (expression)


State 41

   47 fcall: IDENTIFIER . '(' param ')'
   48      | IDENTIFIER . '(' ')'
   85 lval: IDENTIFIER .

    '('  shift, and go to state 58

    $default  reduce using rule 85 (lval)


State 42

   77 expression: '+' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 69
    lval        go to state 49


State 43

   78 expression: '-' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 70
    lval        go to state 49


State 44

   67 condition: '(' . condition ')'
   82 expression: '(' . expression ')'

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 71
    expression  go to state 72
    lval        go to state 49


State 45

   79 expression: '!' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 73
    lval        go to state 49


State 46

   83 expression: fcall .

    $default  reduce using rule 83 (expression)


State 47

   53 mif: IF condition . ':' stmt_list END ELSE ':' stmt_list END
   54    | IF condition . ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   55    | IF condition . ':' stmt_list END
   64 condition: condition . AND condition
   65          | condition . OR condition

    AND  shift, and go to state 74
    OR   shift, and go to state 75
    ':'  shift, and go to state 76


State 48

   56 condition: expression . LARGER expression
   57          | expression . SMALLER expression
   58          | expression . LARGEREQ expression
   59          | expression . SMALLEREQ expression
   60          | expression . EQ expression
   61          | expression . DIFF expression
   68          | expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    EQ         shift, and go to state 77
    DIFF       shift, and go to state 78
    LARGER     shift, and go to state 79
    SMALLER    shift, and go to state 80
    LARGEREQ   shift, and go to state 81
    SMALLEREQ  shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '|'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '&'        shift, and go to state 88

    $default  reduce using rule 68 (condition)


State 49

   80 expression: lval .
   87 lval: lval . '[' expression ']'

    '['  shift, and go to state 62

    $default  reduce using rule 80 (expression)


State 50

   51 loop: LOOP IDENTIFIER . ':' stmt_list END

    ':'  shift, and go to state 89


State 51

   52 loop: LOOP ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 90
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 52

    3 fdecl: DECL header .

    $default  reduce using rule 3 (fdecl)


State 53

   38 stmt: VAR idlist . IS type
   50 idlist: idlist . IDENTIFIER

    IS          shift, and go to state 91
    IDENTIFIER  shift, and go to state 66


State 54

   45 stmt: RETURN ':' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 92
    lval        go to state 49


State 55

   40 stmt: BREAK ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 93


State 56

   42 stmt: CONT ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 94


State 57

   28 pc: IDENTIFIER ':' . param

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    param       go to state 95
    fcall       go to state 46
    expression  go to state 96
    lval        go to state 49


State 58

   47 fcall: IDENTIFIER '(' . param ')'
   48      | IDENTIFIER '(' . ')'

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    ')'            shift, and go to state 97
    '!'            shift, and go to state 45

    param       go to state 98
    fcall       go to state 46
    expression  go to state 96
    lval        go to state 49


State 59

    2 fdef: DEF header stmt_list END .

    $default  reduce using rule 2 (fdef)


State 60

   23 stmt_list: stmt stmt_list .

    $default  reduce using rule 23 (stmt_list)


State 61

   37 stmt: lval ASSIGNMENT . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 99
    lval        go to state 49


State 62

   87 lval: lval '[' . expression ']'

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 100
    lval        go to state 49


State 63

    4 header: IDENTIFIER IS type ':' . optparam

    IDENTIFIER  shift, and go to state 33

    optparam  go to state 101
    idlist    go to state 35


State 64

   24 type: type '[' . CONST ']'

    CONST  shift, and go to state 102


State 65

    8 optparam: idlist AS . ftype
    9         | idlist AS . reftype
   10         | idlist AS . ftype ',' optparam
   11         | idlist AS . reftype ',' optparam

    INT   shift, and go to state 103
    BYTE  shift, and go to state 104
    REF   shift, and go to state 105

    ftype    go to state 106
    reftype  go to state 107
    bp       go to state 108


State 66

   50 idlist: idlist IDENTIFIER .

    $default  reduce using rule 50 (idlist)


State 67

   64 condition: condition . AND condition
   65          | condition . OR condition
   66          | NOT condition .

    $default  reduce using rule 66 (condition)


State 68

   82 expression: '(' . expression ')'

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 109
    lval        go to state 49


State 69

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression
   77           | '+' expression .

    $default  reduce using rule 77 (expression)


State 70

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression
   78           | '-' expression .

    $default  reduce using rule 78 (expression)


State 71

   64 condition: condition . AND condition
   65          | condition . OR condition
   67          | '(' condition . ')'

    AND  shift, and go to state 74
    OR   shift, and go to state 75
    ')'  shift, and go to state 110


State 72

   56 condition: expression . LARGER expression
   57          | expression . SMALLER expression
   58          | expression . LARGEREQ expression
   59          | expression . SMALLEREQ expression
   60          | expression . EQ expression
   61          | expression . DIFF expression
   68          | expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression
   82           | '(' expression . ')'

    EQ         shift, and go to state 77
    DIFF       shift, and go to state 78
    LARGER     shift, and go to state 79
    SMALLER    shift, and go to state 80
    LARGEREQ   shift, and go to state 81
    SMALLEREQ  shift, and go to state 82
    '+'        shift, and go to state 83
    '-'        shift, and go to state 84
    '|'        shift, and go to state 85
    '*'        shift, and go to state 86
    '/'        shift, and go to state 87
    '&'        shift, and go to state 88
    ')'        shift, and go to state 111

    ')'       [reduce using rule 68 (condition)]
    $default  reduce using rule 68 (condition)


State 73

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression
   79           | '!' expression .

    $default  reduce using rule 79 (expression)


State 74

   64 condition: condition AND . condition

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 112
    expression  go to state 48
    lval        go to state 49


State 75

   65 condition: condition OR . condition

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 113
    expression  go to state 48
    lval        go to state 49


State 76

   53 mif: IF condition ':' . stmt_list END ELSE ':' stmt_list END
   54    | IF condition ':' . stmt_list END ELIF condition ':' stmt_list END eliftstmt
   55    | IF condition ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 114
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 77

   60 condition: expression EQ . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 115
    lval        go to state 49


State 78

   61 condition: expression DIFF . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 116
    lval        go to state 49


State 79

   56 condition: expression LARGER . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 117
    lval        go to state 49


State 80

   57 condition: expression SMALLER . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 118
    lval        go to state 49


State 81

   58 condition: expression LARGEREQ . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 119
    lval        go to state 49


State 82

   59 condition: expression SMALLEREQ . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 120
    lval        go to state 49


State 83

   71 expression: expression '+' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 121
    lval        go to state 49


State 84

   72 expression: expression '-' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 122
    lval        go to state 49


State 85

   76 expression: expression '|' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 123
    lval        go to state 49


State 86

   73 expression: expression '*' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 124
    lval        go to state 49


State 87

   74 expression: expression '/' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 125
    lval        go to state 49


State 88

   75 expression: expression '&' . expression

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 126
    lval        go to state 49


State 89

   51 loop: LOOP IDENTIFIER ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 127
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 90

   52 loop: LOOP ':' stmt_list . END

    END  shift, and go to state 128


State 91

   38 stmt: VAR idlist IS . type

    INT   shift, and go to state 29
    BYTE  shift, and go to state 30

    type       go to state 129
    type_term  go to state 32


State 92

   45 stmt: RETURN ':' expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 45 (stmt)


State 93

   40 stmt: BREAK ':' IDENTIFIER .

    $default  reduce using rule 40 (stmt)


State 94

   42 stmt: CONT ':' IDENTIFIER .

    $default  reduce using rule 42 (stmt)


State 95

   28 pc: IDENTIFIER ':' param .

    $default  reduce using rule 28 (pc)


State 96

   30 param: expression . ',' param
   31      | expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88
    ','  shift, and go to state 130

    $default  reduce using rule 31 (param)


State 97

   48 fcall: IDENTIFIER '(' ')' .

    $default  reduce using rule 48 (fcall)


State 98

   47 fcall: IDENTIFIER '(' param . ')'

    ')'  shift, and go to state 131


State 99

   37 stmt: lval ASSIGNMENT expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 37 (stmt)


State 100

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression
   87 lval: lval '[' expression . ']'

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88
    ']'  shift, and go to state 132


State 101

    4 header: IDENTIFIER IS type ':' optparam .

    $default  reduce using rule 4 (header)


State 102

   24 type: type '[' CONST . ']'

    ']'  shift, and go to state 133


State 103

   13 ftype: INT .
   17 bp: INT . '[' ']'
   19   | INT . '[' CONST ']'

    '['  shift, and go to state 134

    $default  reduce using rule 13 (ftype)


State 104

   14 ftype: BYTE .
   18 bp: BYTE . '[' ']'
   20   | BYTE . '[' CONST ']'

    '['  shift, and go to state 135

    $default  reduce using rule 14 (ftype)


State 105

   15 reftype: REF . INT
   16        | REF . BYTE

    INT   shift, and go to state 136
    BYTE  shift, and go to state 137


State 106

    8 optparam: idlist AS ftype .
   10         | idlist AS ftype . ',' optparam

    ','  shift, and go to state 138

    $default  reduce using rule 8 (optparam)


State 107

    9 optparam: idlist AS reftype .
   11         | idlist AS reftype . ',' optparam

    ','  shift, and go to state 139

    $default  reduce using rule 9 (optparam)


State 108

   12 ftype: bp .
   21 bp: bp . '[' CONST ']'

    '['  shift, and go to state 140

    $default  reduce using rule 12 (ftype)


State 109

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression
   82           | '(' expression . ')'

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88
    ')'  shift, and go to state 111


State 110

   67 condition: '(' condition ')' .

    $default  reduce using rule 67 (condition)


State 111

   82 expression: '(' expression ')' .

    $default  reduce using rule 82 (expression)


State 112

   64 condition: condition . AND condition
   64          | condition AND condition .
   65          | condition . OR condition

    $default  reduce using rule 64 (condition)


State 113

   64 condition: condition . AND condition
   65          | condition . OR condition
   65          | condition OR condition .

    AND  shift, and go to state 74

    $default  reduce using rule 65 (condition)


State 114

   53 mif: IF condition ':' stmt_list . END ELSE ':' stmt_list END
   54    | IF condition ':' stmt_list . END ELIF condition ':' stmt_list END eliftstmt
   55    | IF condition ':' stmt_list . END

    END  shift, and go to state 141


State 115

   60 condition: expression EQ expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 60 (condition)


State 116

   61 condition: expression DIFF expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 61 (condition)


State 117

   56 condition: expression LARGER expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 56 (condition)


State 118

   57 condition: expression SMALLER expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 57 (condition)


State 119

   58 condition: expression LARGEREQ expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 58 (condition)


State 120

   59 condition: expression SMALLEREQ expression .
   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '|'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 59 (condition)


State 121

   71 expression: expression . '+' expression
   71           | expression '+' expression .
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 71 (expression)


State 122

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   72           | expression '-' expression .
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 72 (expression)


State 123

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression
   76           | expression '|' expression .

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    '&'  shift, and go to state 88

    $default  reduce using rule 76 (expression)


State 124

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   73           | expression '*' expression .
   74           | expression . '/' expression
   75           | expression . '&' expression
   76           | expression . '|' expression

    $default  reduce using rule 73 (expression)


State 125

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   74           | expression '/' expression .
   75           | expression . '&' expression
   76           | expression . '|' expression

    $default  reduce using rule 74 (expression)


State 126

   71 expression: expression . '+' expression
   72           | expression . '-' expression
   73           | expression . '*' expression
   74           | expression . '/' expression
   75           | expression . '&' expression
   75           | expression '&' expression .
   76           | expression . '|' expression

    $default  reduce using rule 75 (expression)


State 127

   51 loop: LOOP IDENTIFIER ':' stmt_list . END

    END  shift, and go to state 142


State 128

   52 loop: LOOP ':' stmt_list END .

    $default  reduce using rule 52 (loop)


State 129

   24 type: type . '[' CONST ']'
   38 stmt: VAR idlist IS type .

    '['  shift, and go to state 64

    $default  reduce using rule 38 (stmt)


State 130

   30 param: expression ',' . param

    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 68
    '!'            shift, and go to state 45

    param       go to state 143
    fcall       go to state 46
    expression  go to state 96
    lval        go to state 49


State 131

   47 fcall: IDENTIFIER '(' param ')' .

    $default  reduce using rule 47 (fcall)


State 132

   87 lval: lval '[' expression ']' .

    $default  reduce using rule 87 (lval)


State 133

   24 type: type '[' CONST ']' .

    $default  reduce using rule 24 (type)


State 134

   17 bp: INT '[' . ']'
   19   | INT '[' . CONST ']'

    CONST  shift, and go to state 144
    ']'    shift, and go to state 145


State 135

   18 bp: BYTE '[' . ']'
   20   | BYTE '[' . CONST ']'

    CONST  shift, and go to state 146
    ']'    shift, and go to state 147


State 136

   15 reftype: REF INT .

    $default  reduce using rule 15 (reftype)


State 137

   16 reftype: REF BYTE .

    $default  reduce using rule 16 (reftype)


State 138

   10 optparam: idlist AS ftype ',' . optparam

    IDENTIFIER  shift, and go to state 33

    optparam  go to state 148
    idlist    go to state 35


State 139

   11 optparam: idlist AS reftype ',' . optparam

    IDENTIFIER  shift, and go to state 33

    optparam  go to state 149
    idlist    go to state 35


State 140

   21 bp: bp '[' . CONST ']'

    CONST  shift, and go to state 150


State 141

   53 mif: IF condition ':' stmt_list END . ELSE ':' stmt_list END
   54    | IF condition ':' stmt_list END . ELIF condition ':' stmt_list END eliftstmt
   55    | IF condition ':' stmt_list END .

    ELSE  shift, and go to state 151
    ELIF  shift, and go to state 152

    $default  reduce using rule 55 (mif)


State 142

   51 loop: LOOP IDENTIFIER ':' stmt_list END .

    $default  reduce using rule 51 (loop)


State 143

   30 param: expression ',' param .

    $default  reduce using rule 30 (param)


State 144

   19 bp: INT '[' CONST . ']'

    ']'  shift, and go to state 153


State 145

   17 bp: INT '[' ']' .

    $default  reduce using rule 17 (bp)


State 146

   20 bp: BYTE '[' CONST . ']'

    ']'  shift, and go to state 154


State 147

   18 bp: BYTE '[' ']' .

    $default  reduce using rule 18 (bp)


State 148

   10 optparam: idlist AS ftype ',' optparam .

    $default  reduce using rule 10 (optparam)


State 149

   11 optparam: idlist AS reftype ',' optparam .

    $default  reduce using rule 11 (optparam)


State 150

   21 bp: bp '[' CONST . ']'

    ']'  shift, and go to state 155


State 151

   53 mif: IF condition ':' stmt_list END ELSE . ':' stmt_list END

    ':'  shift, and go to state 156


State 152

   54 mif: IF condition ':' stmt_list END ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 157
    expression  go to state 48
    lval        go to state 49


State 153

   19 bp: INT '[' CONST ']' .

    $default  reduce using rule 19 (bp)


State 154

   20 bp: BYTE '[' CONST ']' .

    $default  reduce using rule 20 (bp)


State 155

   21 bp: bp '[' CONST ']' .

    $default  reduce using rule 21 (bp)


State 156

   53 mif: IF condition ':' stmt_list END ELSE ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 158
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 157

   54 mif: IF condition ':' stmt_list END ELIF condition . ':' stmt_list END eliftstmt
   64 condition: condition . AND condition
   65          | condition . OR condition

    AND  shift, and go to state 74
    OR   shift, and go to state 75
    ':'  shift, and go to state 159


State 158

   53 mif: IF condition ':' stmt_list END ELSE ':' stmt_list . END

    END  shift, and go to state 160


State 159

   54 mif: IF condition ':' stmt_list END ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 161
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 160

   53 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END .

    $default  reduce using rule 53 (mif)


State 161

   54 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list . END eliftstmt

    END  shift, and go to state 162


State 162

   54 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 163
    ELIF  shift, and go to state 164

    eliftstmt  go to state 165


State 163

   69 eliftstmt: ELSE . ':' stmt_list END

    ':'  shift, and go to state 166


State 164

   70 eliftstmt: ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 36
    TRUE           shift, and go to state 37
    FALSE          shift, and go to state 38
    CONST          shift, and go to state 39
    CHAR_CONST     shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    STRINGLITERAL  shift, and go to state 19
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 167
    expression  go to state 48
    lval        go to state 49


State 165

   54 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 54 (mif)


State 166

   69 eliftstmt: ELSE ':' . stmt_list END

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 168
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 167

   64 condition: condition . AND condition
   65          | condition . OR condition
   70 eliftstmt: ELIF condition . ':' stmt_list END eliftstmt

    AND  shift, and go to state 74
    OR   shift, and go to state 75
    ':'  shift, and go to state 169


State 168

   69 eliftstmt: ELSE ':' stmt_list . END

    END  shift, and go to state 170


State 169

   70 eliftstmt: ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 9
    LOOP           shift, and go to state 10
    SKIP           shift, and go to state 11
    DECL           shift, and go to state 12
    DEF            shift, and go to state 1
    VAR            shift, and go to state 13
    RETURN         shift, and go to state 14
    EXIT           shift, and go to state 15
    BREAK          shift, and go to state 16
    CONT           shift, and go to state 17
    IDENTIFIER     shift, and go to state 18
    STRINGLITERAL  shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 171
    pc         go to state 23
    stmt       go to state 24
    fcall      go to state 25
    loop       go to state 26
    mif        go to state 27
    lval       go to state 28


State 170

   69 eliftstmt: ELSE ':' stmt_list END .

    $default  reduce using rule 69 (eliftstmt)


State 171

   70 eliftstmt: ELIF condition ':' stmt_list . END eliftstmt

    END  shift, and go to state 172


State 172

   70 eliftstmt: ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 163
    ELIF  shift, and go to state 164

    eliftstmt  go to state 173


State 173

   70 eliftstmt: ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 70 (eliftstmt)
