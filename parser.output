Terminals unused in grammar

   AS
   DECL
   DEF
   ADD
   MUL
   DIV
   SUB
   EQ
   DIFF
   LARGER
   SMALLER
   LARGEREQ
   SMALLEREQ
   COLON
   AND
   NOT
   OR
   TRUE
   FALSE
   BREAK
   CONT


Grammar

    0 $accept: body $end

    1 body: BEG stmt_list END

    2 stmt_list: stmt
    3          | stmt_list stmt

    4 lval: IDENTIFIER
    5     | STRINGLITERAL
    6     | lval '[' expression ']'

    7 type: INT '[' CONST ']'
    8     | BYTE '[' CONST ']'
    9     | INT
   10     | BYTE

   11 stmt: SKIP
   12     | mif
   13     | loop
   14     | lval ASSIGNMENT expression
   15     | VAR lval IS type

   16 loop: LOOP IDENTIFIER ':' BEG stmt_list END
   17     | LOOP ':' BEG stmt_list END

   18 mif: IF expression ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   19    | IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   20    | IF expression ':' BEG stmt_list END

   21 eliftstmt: ELSE ':' BEG stmt_list END
   22          | ELIF expression ':' BEG stmt_list END eliftstmt

   23 expression: expression '+' expression
   24           | expression '-' expression
   25           | expression '*' expression
   26           | expression '/' expression
   27           | IDENTIFIER
   28           | STRINGLITERAL
   29           | CONST
   30           | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 30
')' (41) 30
'*' (42) 25
'+' (43) 23
'-' (45) 24
'/' (47) 26
':' (58) 16 17 18 19 20 21 22
'[' (91) 6 7 8
']' (93) 6 7 8
error (256)
IDENTIFIER (258) 4 16 27
INT (259) 7 9
BYTE (260) 8 10
IF (261) 18 19 20
ELSE (262) 18 21
STRINGLITERAL (263) 5 28
LOOP (264) 16 17
AS (265)
SKIP (266) 11
DECL (267)
DEF (268)
BEG (269) 1 16 17 18 19 20 21 22
END (270) 1 16 17 18 19 20 21 22
VAR (271) 15
IS (272) 15
ADD (273)
MUL (274)
DIV (275)
SUB (276)
EQ (277)
DIFF (278)
LARGER (279)
SMALLER (280)
LARGEREQ (281)
SMALLEREQ (282)
COLON (283)
ASSIGNMENT (284) 14
CONST (285) 7 8 29
AND (286)
NOT (287)
OR (288)
ELIF (289) 19 22
TRUE (290)
FALSE (291)
BREAK (292)
CONT (293)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
body (49)
    on left: 1, on right: 0
stmt_list (50)
    on left: 2 3, on right: 1 3 16 17 18 19 20 21 22
lval (51)
    on left: 4 5 6, on right: 6 14 15
type (52)
    on left: 7 8 9 10, on right: 15
stmt (53)
    on left: 11 12 13 14 15, on right: 2 3
loop (54)
    on left: 16 17, on right: 13
mif (55)
    on left: 18 19 20, on right: 12
eliftstmt (56)
    on left: 21 22, on right: 19 22
expression (57)
    on left: 23 24 25 26 27 28 29 30, on right: 6 14 18 19 20 22 23
    24 25 26 30


State 0

    0 $accept: . body $end

    BEG  shift, and go to state 1

    body  go to state 2


State 1

    1 body: BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 9
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 2

    0 $accept: body . $end

    $end  shift, and go to state 14


State 3

    4 lval: IDENTIFIER .

    $default  reduce using rule 4 (lval)


State 4

   18 mif: IF . expression ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   19    | IF . expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   20    | IF . expression ':' BEG stmt_list END

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 19


State 5

    5 lval: STRINGLITERAL .

    $default  reduce using rule 5 (lval)


State 6

   16 loop: LOOP . IDENTIFIER ':' BEG stmt_list END
   17     | LOOP . ':' BEG stmt_list END

    IDENTIFIER  shift, and go to state 20
    ':'         shift, and go to state 21


State 7

   11 stmt: SKIP .

    $default  reduce using rule 11 (stmt)


State 8

   15 stmt: VAR . lval IS type

    IDENTIFIER     shift, and go to state 3
    STRINGLITERAL  shift, and go to state 5

    lval  go to state 22


State 9

    1 body: BEG stmt_list . END
    3 stmt_list: stmt_list . stmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 23
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 24
    loop  go to state 12
    mif   go to state 13


State 10

    6 lval: lval . '[' expression ']'
   14 stmt: lval . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 25
    '['         shift, and go to state 26


State 11

    2 stmt_list: stmt .

    $default  reduce using rule 2 (stmt_list)


State 12

   13 stmt: loop .

    $default  reduce using rule 13 (stmt)


State 13

   12 stmt: mif .

    $default  reduce using rule 12 (stmt)


State 14

    0 $accept: body $end .

    $default  accept


State 15

   27 expression: IDENTIFIER .

    $default  reduce using rule 27 (expression)


State 16

   28 expression: STRINGLITERAL .

    $default  reduce using rule 28 (expression)


State 17

   29 expression: CONST .

    $default  reduce using rule 29 (expression)


State 18

   30 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 27


State 19

   18 mif: IF expression . ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   19    | IF expression . ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   20    | IF expression . ':' BEG stmt_list END
   23 expression: expression . '+' expression
   24           | expression . '-' expression
   25           | expression . '*' expression
   26           | expression . '/' expression

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ':'  shift, and go to state 32


State 20

   16 loop: LOOP IDENTIFIER . ':' BEG stmt_list END

    ':'  shift, and go to state 33


State 21

   17 loop: LOOP ':' . BEG stmt_list END

    BEG  shift, and go to state 34


State 22

    6 lval: lval . '[' expression ']'
   15 stmt: VAR lval . IS type

    IS   shift, and go to state 35
    '['  shift, and go to state 26


State 23

    1 body: BEG stmt_list END .

    $default  reduce using rule 1 (body)


State 24

    3 stmt_list: stmt_list stmt .

    $default  reduce using rule 3 (stmt_list)


State 25

   14 stmt: lval ASSIGNMENT . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 36


State 26

    6 lval: lval '[' . expression ']'

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 37


State 27

   23 expression: expression . '+' expression
   24           | expression . '-' expression
   25           | expression . '*' expression
   26           | expression . '/' expression
   30           | '(' expression . ')'

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ')'  shift, and go to state 38


State 28

   23 expression: expression '+' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 39


State 29

   24 expression: expression '-' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 40


State 30

   25 expression: expression '*' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 41


State 31

   26 expression: expression '/' . expression

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 42


State 32

   18 mif: IF expression ':' . BEG stmt_list END ELSE ':' BEG stmt_list END
   19    | IF expression ':' . BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   20    | IF expression ':' . BEG stmt_list END

    BEG  shift, and go to state 43


State 33

   16 loop: LOOP IDENTIFIER ':' . BEG stmt_list END

    BEG  shift, and go to state 44


State 34

   17 loop: LOOP ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 45
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 35

   15 stmt: VAR lval IS . type

    INT   shift, and go to state 46
    BYTE  shift, and go to state 47

    type  go to state 48


State 36

   14 stmt: lval ASSIGNMENT expression .
   23 expression: expression . '+' expression
   24           | expression . '-' expression
   25           | expression . '*' expression
   26           | expression . '/' expression

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 14 (stmt)


State 37

    6 lval: lval '[' expression . ']'
   23 expression: expression . '+' expression
   24           | expression . '-' expression
   25           | expression . '*' expression
   26           | expression . '/' expression

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ']'  shift, and go to state 49


State 38

   30 expression: '(' expression ')' .

    $default  reduce using rule 30 (expression)


State 39

   23 expression: expression . '+' expression
   23           | expression '+' expression .
   24           | expression . '-' expression
   25           | expression . '*' expression
   26           | expression . '/' expression

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 23 (expression)


State 40

   23 expression: expression . '+' expression
   24           | expression . '-' expression
   24           | expression '-' expression .
   25           | expression . '*' expression
   26           | expression . '/' expression

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31

    $default  reduce using rule 24 (expression)


State 41

   23 expression: expression . '+' expression
   24           | expression . '-' expression
   25           | expression . '*' expression
   25           | expression '*' expression .
   26           | expression . '/' expression

    $default  reduce using rule 25 (expression)


State 42

   23 expression: expression . '+' expression
   24           | expression . '-' expression
   25           | expression . '*' expression
   26           | expression . '/' expression
   26           | expression '/' expression .

    $default  reduce using rule 26 (expression)


State 43

   18 mif: IF expression ':' BEG . stmt_list END ELSE ':' BEG stmt_list END
   19    | IF expression ':' BEG . stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   20    | IF expression ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 50
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 44

   16 loop: LOOP IDENTIFIER ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 51
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 45

    3 stmt_list: stmt_list . stmt
   17 loop: LOOP ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 52
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 24
    loop  go to state 12
    mif   go to state 13


State 46

    7 type: INT . '[' CONST ']'
    9     | INT .

    '['  shift, and go to state 53

    $default  reduce using rule 9 (type)


State 47

    8 type: BYTE . '[' CONST ']'
   10     | BYTE .

    '['  shift, and go to state 54

    $default  reduce using rule 10 (type)


State 48

   15 stmt: VAR lval IS type .

    $default  reduce using rule 15 (stmt)


State 49

    6 lval: lval '[' expression ']' .

    $default  reduce using rule 6 (lval)


State 50

    3 stmt_list: stmt_list . stmt
   18 mif: IF expression ':' BEG stmt_list . END ELSE ':' BEG stmt_list END
   19    | IF expression ':' BEG stmt_list . END ELIF expression ':' BEG stmt_list END eliftstmt
   20    | IF expression ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 55
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 24
    loop  go to state 12
    mif   go to state 13


State 51

    3 stmt_list: stmt_list . stmt
   16 loop: LOOP IDENTIFIER ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 56
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 24
    loop  go to state 12
    mif   go to state 13


State 52

   17 loop: LOOP ':' BEG stmt_list END .

    $default  reduce using rule 17 (loop)


State 53

    7 type: INT '[' . CONST ']'

    CONST  shift, and go to state 57


State 54

    8 type: BYTE '[' . CONST ']'

    CONST  shift, and go to state 58


State 55

   18 mif: IF expression ':' BEG stmt_list END . ELSE ':' BEG stmt_list END
   19    | IF expression ':' BEG stmt_list END . ELIF expression ':' BEG stmt_list END eliftstmt
   20    | IF expression ':' BEG stmt_list END .

    ELSE  shift, and go to state 59
    ELIF  shift, and go to state 60

    $default  reduce using rule 20 (mif)


State 56

   16 loop: LOOP IDENTIFIER ':' BEG stmt_list END .

    $default  reduce using rule 16 (loop)


State 57

    7 type: INT '[' CONST . ']'

    ']'  shift, and go to state 61


State 58

    8 type: BYTE '[' CONST . ']'

    ']'  shift, and go to state 62


State 59

   18 mif: IF expression ':' BEG stmt_list END ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 63


State 60

   19 mif: IF expression ':' BEG stmt_list END ELIF . expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 64


State 61

    7 type: INT '[' CONST ']' .

    $default  reduce using rule 7 (type)


State 62

    8 type: BYTE '[' CONST ']' .

    $default  reduce using rule 8 (type)


State 63

   18 mif: IF expression ':' BEG stmt_list END ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 65


State 64

   19 mif: IF expression ':' BEG stmt_list END ELIF expression . ':' BEG stmt_list END eliftstmt
   23 expression: expression . '+' expression
   24           | expression . '-' expression
   25           | expression . '*' expression
   26           | expression . '/' expression

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ':'  shift, and go to state 66


State 65

   18 mif: IF expression ':' BEG stmt_list END ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 67
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 66

   19 mif: IF expression ':' BEG stmt_list END ELIF expression ':' . BEG stmt_list END eliftstmt

    BEG  shift, and go to state 68


State 67

    3 stmt_list: stmt_list . stmt
   18 mif: IF expression ':' BEG stmt_list END ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 69
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 24
    loop  go to state 12
    mif   go to state 13


State 68

   19 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 70
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 69

   18 mif: IF expression ':' BEG stmt_list END ELSE ':' BEG stmt_list END .

    $default  reduce using rule 18 (mif)


State 70

    3 stmt_list: stmt_list . stmt
   19 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 71
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 24
    loop  go to state 12
    mif   go to state 13


State 71

   19 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END . eliftstmt

    ELSE  shift, and go to state 72
    ELIF  shift, and go to state 73

    eliftstmt  go to state 74


State 72

   21 eliftstmt: ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 75


State 73

   22 eliftstmt: ELIF . expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 15
    STRINGLITERAL  shift, and go to state 16
    CONST          shift, and go to state 17
    '('            shift, and go to state 18

    expression  go to state 76


State 74

   19 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt .

    $default  reduce using rule 19 (mif)


State 75

   21 eliftstmt: ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 77


State 76

   22 eliftstmt: ELIF expression . ':' BEG stmt_list END eliftstmt
   23 expression: expression . '+' expression
   24           | expression . '-' expression
   25           | expression . '*' expression
   26           | expression . '/' expression

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    ':'  shift, and go to state 78


State 77

   21 eliftstmt: ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 79
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 78

   22 eliftstmt: ELIF expression ':' . BEG stmt_list END eliftstmt

    BEG  shift, and go to state 80


State 79

    3 stmt_list: stmt_list . stmt
   21 eliftstmt: ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 81
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 24
    loop  go to state 12
    mif   go to state 13


State 80

   22 eliftstmt: ELIF expression ':' BEG . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    VAR            shift, and go to state 8

    stmt_list  go to state 82
    lval       go to state 10
    stmt       go to state 11
    loop       go to state 12
    mif        go to state 13


State 81

   21 eliftstmt: ELSE ':' BEG stmt_list END .

    $default  reduce using rule 21 (eliftstmt)


State 82

    3 stmt_list: stmt_list . stmt
   22 eliftstmt: ELIF expression ':' BEG stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    LOOP           shift, and go to state 6
    SKIP           shift, and go to state 7
    END            shift, and go to state 83
    VAR            shift, and go to state 8

    lval  go to state 10
    stmt  go to state 24
    loop  go to state 12
    mif   go to state 13


State 83

   22 eliftstmt: ELIF expression ':' BEG stmt_list END . eliftstmt

    ELSE  shift, and go to state 72
    ELIF  shift, and go to state 73

    eliftstmt  go to state 84


State 84

   22 eliftstmt: ELIF expression ':' BEG stmt_list END eliftstmt .

    $default  reduce using rule 22 (eliftstmt)
