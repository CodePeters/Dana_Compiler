Terminals unused in grammar

   DECL


Grammar

    0 $accept: fdef $end

    1 fdef: DEF header BEG stmt_list END

    2 header: IDENTIFIER opt
    3       | IDENTIFIER

    4 opt: IS type optparam
    5    | IS type

    6 optparam: ':' IDENTIFIER AS type
    7         | ':' IDENTIFIER AS type ',' moreparams

    8 moreparams: IDENTIFIER AS type
    9           | IDENTIFIER AS type ',' moreparams

   10 stmt_list: stmt
   11          | stmt_list stmt

   12 lval: IDENTIFIER
   13     | STRINGLITERAL
   14     | lval '[' expression ']'

   15 type: INT '[' CONST ']'
   16     | BYTE '[' CONST ']'
   17     | INT
   18     | BYTE

   19 stmt: SKIP
   20     | mif
   21     | fdef
   22     | loop
   23     | lval ASSIGNMENT expression
   24     | VAR lval IS type
   25     | BREAK
   26     | CONT

   27 loop: LOOP IDENTIFIER ':' BEG stmt_list END
   28     | LOOP ':' BEG stmt_list END

   29 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   30    | IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   31    | IF condition ':' BEG stmt_list END

   32 condition: expression LARGER expression
   33          | expression SMALLER expression
   34          | expression LARGEREQ expression
   35          | expression SMALLEREQ expression
   36          | expression EQ expression
   37          | expression DIFF expression
   38          | TRUE
   39          | FALSE
   40          | condition AND condition
   41          | condition OR condition
   42          | NOT condition
   43          | '(' condition ')'

   44 eliftstmt: ELSE ':' BEG stmt_list END
   45          | ELIF expression ':' BEG stmt_list END eliftstmt

   46 expression: expression '+' expression
   47           | expression '-' expression
   48           | expression '*' expression
   49           | expression '/' expression
   50           | expression '&' expression
   51           | expression '|' expression
   52           | '+' expression
   53           | '-' expression
   54           | '!' expression
   55           | IDENTIFIER
   56           | STRINGLITERAL
   57           | CONST
   58           | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 54
'&' (38) 50
'(' (40) 43 58
')' (41) 43 58
'*' (42) 48
'+' (43) 46 52
',' (44) 7 9
'-' (45) 47 53
'/' (47) 49
':' (58) 6 7 27 28 29 30 31 44 45
'[' (91) 14 15 16
']' (93) 14 15 16
'|' (124) 51
error (256)
IDENTIFIER (258) 2 3 6 7 8 9 12 27 55
INT (259) 15 17
BYTE (260) 16 18
IF (261) 29 30 31
ELSE (262) 29 44
STRINGLITERAL (263) 13 56
LOOP (264) 27 28
AS (265) 6 7 8 9
SKIP (266) 19
DECL (267)
DEF (268) 1
BEG (269) 1 27 28 29 30 31 44 45
END (270) 1 27 28 29 30 31 44 45
VAR (271) 24
IS (272) 4 5 24
EQ (273) 36
DIFF (274) 37
LARGER (275) 32
SMALLER (276) 33
LARGEREQ (277) 34
SMALLEREQ (278) 35
ASSIGNMENT (279) 23
CONST (280) 15 16 57
AND (281) 40
NOT (282) 42
OR (283) 41
ELIF (284) 30 45
TRUE (285) 38
FALSE (286) 39
BREAK (287) 25
CONT (288) 26
UNARYPL (289)
UNARYMINUS (290)
BANGBANG (291)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
fdef (51)
    on left: 1, on right: 0 21
header (52)
    on left: 2 3, on right: 1
opt (53)
    on left: 4 5, on right: 2
optparam (54)
    on left: 6 7, on right: 4
moreparams (55)
    on left: 8 9, on right: 7 9
stmt_list (56)
    on left: 10 11, on right: 1 11 27 28 29 30 31 44 45
lval (57)
    on left: 12 13 14, on right: 14 23 24
type (58)
    on left: 15 16 17 18, on right: 4 5 6 7 8 9 24
stmt (59)
    on left: 19 20 21 22 23 24 25 26, on right: 10 11
loop (60)
    on left: 27 28, on right: 22
mif (61)
    on left: 29 30 31, on right: 20
condition (62)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43, on right: 29 31 40
    41 42 43
eliftstmt (63)
    on left: 44 45, on right: 30 45
expression (64)
    on left: 46 47 48 49 50 51 52 53 54 55 56 57 58, on right: 14 23
    30 32 33 34 35 36 37 45 46 47 48 49 50 51 52 53 54 58


State 0

    0 $accept: . fdef $end

    DEF  shift, and go to state 1

    fdef  go to state 2


State 1

    1 fdef: DEF . header BEG stmt_list END

    IDENTIFIER  shift, and go to state 3

    header  go to state 4


State 2

    0 $accept: fdef . $end

    $end  shift, and go to state 5


State 3

    2 header: IDENTIFIER . opt
    3       | IDENTIFIER .

    IS  shift, and go to state 6

    $default  reduce using rule 3 (header)

    opt  go to state 7


State 4

    1 fdef: DEF header . BEG stmt_list END

    BEG  shift, and go to state 8


State 5

    0 $accept: fdef $end .

    $default  accept


State 6

    4 opt: IS . type optparam
    5    | IS . type

    INT   shift, and go to state 9
    BYTE  shift, and go to state 10

    type  go to state 11


State 7

    2 header: IDENTIFIER opt .

    $default  reduce using rule 2 (header)


State 8

    1 fdef: DEF header BEG . stmt_list END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    stmt_list  go to state 21
    lval       go to state 22
    stmt       go to state 23
    loop       go to state 24
    mif        go to state 25


State 9

   15 type: INT . '[' CONST ']'
   17     | INT .

    '['  shift, and go to state 26

    $default  reduce using rule 17 (type)


State 10

   16 type: BYTE . '[' CONST ']'
   18     | BYTE .

    '['  shift, and go to state 27

    $default  reduce using rule 18 (type)


State 11

    4 opt: IS type . optparam
    5    | IS type .

    ':'  shift, and go to state 28

    $default  reduce using rule 5 (opt)

    optparam  go to state 29


State 12

   12 lval: IDENTIFIER .

    $default  reduce using rule 12 (lval)


State 13

   29 mif: IF . condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   30    | IF . expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   31    | IF . condition ':' BEG stmt_list END

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    NOT            shift, and go to state 33
    TRUE           shift, and go to state 34
    FALSE          shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    condition   go to state 40
    expression  go to state 41


State 14

   13 lval: STRINGLITERAL .

    $default  reduce using rule 13 (lval)


State 15

   27 loop: LOOP . IDENTIFIER ':' BEG stmt_list END
   28     | LOOP . ':' BEG stmt_list END

    IDENTIFIER  shift, and go to state 42
    ':'         shift, and go to state 43


State 16

   19 stmt: SKIP .

    $default  reduce using rule 19 (stmt)


State 17

   24 stmt: VAR . lval IS type

    IDENTIFIER     shift, and go to state 12
    STRINGLITERAL  shift, and go to state 14

    lval  go to state 44


State 18

   25 stmt: BREAK .

    $default  reduce using rule 25 (stmt)


State 19

   26 stmt: CONT .

    $default  reduce using rule 26 (stmt)


State 20

   21 stmt: fdef .

    $default  reduce using rule 21 (stmt)


State 21

    1 fdef: DEF header BEG stmt_list . END
   11 stmt_list: stmt_list . stmt

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    END            shift, and go to state 45
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef  go to state 20
    lval  go to state 22
    stmt  go to state 46
    loop  go to state 24
    mif   go to state 25


State 22

   14 lval: lval . '[' expression ']'
   23 stmt: lval . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 47
    '['         shift, and go to state 48


State 23

   10 stmt_list: stmt .

    $default  reduce using rule 10 (stmt_list)


State 24

   22 stmt: loop .

    $default  reduce using rule 22 (stmt)


State 25

   20 stmt: mif .

    $default  reduce using rule 20 (stmt)


State 26

   15 type: INT '[' . CONST ']'

    CONST  shift, and go to state 49


State 27

   16 type: BYTE '[' . CONST ']'

    CONST  shift, and go to state 50


State 28

    6 optparam: ':' . IDENTIFIER AS type
    7         | ':' . IDENTIFIER AS type ',' moreparams

    IDENTIFIER  shift, and go to state 51


State 29

    4 opt: IS type optparam .

    $default  reduce using rule 4 (opt)


State 30

   55 expression: IDENTIFIER .

    $default  reduce using rule 55 (expression)


State 31

   56 expression: STRINGLITERAL .

    $default  reduce using rule 56 (expression)


State 32

   57 expression: CONST .

    $default  reduce using rule 57 (expression)


State 33

   42 condition: NOT . condition

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    NOT            shift, and go to state 33
    TRUE           shift, and go to state 34
    FALSE          shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    condition   go to state 52
    expression  go to state 53


State 34

   38 condition: TRUE .

    $default  reduce using rule 38 (condition)


State 35

   39 condition: FALSE .

    $default  reduce using rule 39 (condition)


State 36

   52 expression: '+' . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 55


State 37

   53 expression: '-' . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 56


State 38

   43 condition: '(' . condition ')'
   58 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    NOT            shift, and go to state 33
    TRUE           shift, and go to state 34
    FALSE          shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    condition   go to state 57
    expression  go to state 58


State 39

   54 expression: '!' . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 59


State 40

   29 mif: IF condition . ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   31    | IF condition . ':' BEG stmt_list END
   40 condition: condition . AND condition
   41          | condition . OR condition

    AND  shift, and go to state 60
    OR   shift, and go to state 61
    ':'  shift, and go to state 62


State 41

   30 mif: IF expression . ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   32 condition: expression . LARGER expression
   33          | expression . SMALLER expression
   34          | expression . LARGEREQ expression
   35          | expression . SMALLEREQ expression
   36          | expression . EQ expression
   37          | expression . DIFF expression
   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    EQ         shift, and go to state 63
    DIFF       shift, and go to state 64
    LARGER     shift, and go to state 65
    SMALLER    shift, and go to state 66
    LARGEREQ   shift, and go to state 67
    SMALLEREQ  shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '|'        shift, and go to state 71
    '*'        shift, and go to state 72
    '/'        shift, and go to state 73
    '&'        shift, and go to state 74
    ':'        shift, and go to state 75


State 42

   27 loop: LOOP IDENTIFIER . ':' BEG stmt_list END

    ':'  shift, and go to state 76


State 43

   28 loop: LOOP ':' . BEG stmt_list END

    BEG  shift, and go to state 77


State 44

   14 lval: lval . '[' expression ']'
   24 stmt: VAR lval . IS type

    IS   shift, and go to state 78
    '['  shift, and go to state 48


State 45

    1 fdef: DEF header BEG stmt_list END .

    $default  reduce using rule 1 (fdef)


State 46

   11 stmt_list: stmt_list stmt .

    $default  reduce using rule 11 (stmt_list)


State 47

   23 stmt: lval ASSIGNMENT . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 79


State 48

   14 lval: lval '[' . expression ']'

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 80


State 49

   15 type: INT '[' CONST . ']'

    ']'  shift, and go to state 81


State 50

   16 type: BYTE '[' CONST . ']'

    ']'  shift, and go to state 82


State 51

    6 optparam: ':' IDENTIFIER . AS type
    7         | ':' IDENTIFIER . AS type ',' moreparams

    AS  shift, and go to state 83


State 52

   40 condition: condition . AND condition
   41          | condition . OR condition
   42          | NOT condition .

    $default  reduce using rule 42 (condition)


State 53

   32 condition: expression . LARGER expression
   33          | expression . SMALLER expression
   34          | expression . LARGEREQ expression
   35          | expression . SMALLEREQ expression
   36          | expression . EQ expression
   37          | expression . DIFF expression
   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    EQ         shift, and go to state 63
    DIFF       shift, and go to state 64
    LARGER     shift, and go to state 65
    SMALLER    shift, and go to state 66
    LARGEREQ   shift, and go to state 67
    SMALLEREQ  shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '|'        shift, and go to state 71
    '*'        shift, and go to state 72
    '/'        shift, and go to state 73
    '&'        shift, and go to state 74


State 54

   58 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 84


State 55

   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression
   52           | '+' expression .

    $default  reduce using rule 52 (expression)


State 56

   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression
   53           | '-' expression .

    $default  reduce using rule 53 (expression)


State 57

   40 condition: condition . AND condition
   41          | condition . OR condition
   43          | '(' condition . ')'

    AND  shift, and go to state 60
    OR   shift, and go to state 61
    ')'  shift, and go to state 85


State 58

   32 condition: expression . LARGER expression
   33          | expression . SMALLER expression
   34          | expression . LARGEREQ expression
   35          | expression . SMALLEREQ expression
   36          | expression . EQ expression
   37          | expression . DIFF expression
   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression
   58           | '(' expression . ')'

    EQ         shift, and go to state 63
    DIFF       shift, and go to state 64
    LARGER     shift, and go to state 65
    SMALLER    shift, and go to state 66
    LARGEREQ   shift, and go to state 67
    SMALLEREQ  shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '|'        shift, and go to state 71
    '*'        shift, and go to state 72
    '/'        shift, and go to state 73
    '&'        shift, and go to state 74
    ')'        shift, and go to state 86


State 59

   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression
   54           | '!' expression .

    $default  reduce using rule 54 (expression)


State 60

   40 condition: condition AND . condition

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    NOT            shift, and go to state 33
    TRUE           shift, and go to state 34
    FALSE          shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    condition   go to state 87
    expression  go to state 53


State 61

   41 condition: condition OR . condition

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    NOT            shift, and go to state 33
    TRUE           shift, and go to state 34
    FALSE          shift, and go to state 35
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 38
    '!'            shift, and go to state 39

    condition   go to state 88
    expression  go to state 53


State 62

   29 mif: IF condition ':' . BEG stmt_list END ELSE ':' BEG stmt_list END
   31    | IF condition ':' . BEG stmt_list END

    BEG  shift, and go to state 89


State 63

   36 condition: expression EQ . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 90


State 64

   37 condition: expression DIFF . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 91


State 65

   32 condition: expression LARGER . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 92


State 66

   33 condition: expression SMALLER . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 93


State 67

   34 condition: expression LARGEREQ . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 94


State 68

   35 condition: expression SMALLEREQ . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 95


State 69

   46 expression: expression '+' . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 96


State 70

   47 expression: expression '-' . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 97


State 71

   51 expression: expression '|' . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 98


State 72

   48 expression: expression '*' . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 99


State 73

   49 expression: expression '/' . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 100


State 74

   50 expression: expression '&' . expression

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 101


State 75

   30 mif: IF expression ':' . BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt

    BEG  shift, and go to state 102


State 76

   27 loop: LOOP IDENTIFIER ':' . BEG stmt_list END

    BEG  shift, and go to state 103


State 77

   28 loop: LOOP ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    stmt_list  go to state 104
    lval       go to state 22
    stmt       go to state 23
    loop       go to state 24
    mif        go to state 25


State 78

   24 stmt: VAR lval IS . type

    INT   shift, and go to state 9
    BYTE  shift, and go to state 10

    type  go to state 105


State 79

   23 stmt: lval ASSIGNMENT expression .
   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '|'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '&'  shift, and go to state 74

    $default  reduce using rule 23 (stmt)


State 80

   14 lval: lval '[' expression . ']'
   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '|'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '&'  shift, and go to state 74
    ']'  shift, and go to state 106


State 81

   15 type: INT '[' CONST ']' .

    $default  reduce using rule 15 (type)


State 82

   16 type: BYTE '[' CONST ']' .

    $default  reduce using rule 16 (type)


State 83

    6 optparam: ':' IDENTIFIER AS . type
    7         | ':' IDENTIFIER AS . type ',' moreparams

    INT   shift, and go to state 9
    BYTE  shift, and go to state 10

    type  go to state 107


State 84

   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression
   58           | '(' expression . ')'

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '|'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '&'  shift, and go to state 74
    ')'  shift, and go to state 86


State 85

   43 condition: '(' condition ')' .

    $default  reduce using rule 43 (condition)


State 86

   58 expression: '(' expression ')' .

    $default  reduce using rule 58 (expression)


State 87

   40 condition: condition . AND condition
   40          | condition AND condition .
   41          | condition . OR condition

    $default  reduce using rule 40 (condition)


State 88

   40 condition: condition . AND condition
   41          | condition . OR condition
   41          | condition OR condition .

    AND  shift, and go to state 60

    $default  reduce using rule 41 (condition)


State 89

   29 mif: IF condition ':' BEG . stmt_list END ELSE ':' BEG stmt_list END
   31    | IF condition ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    stmt_list  go to state 108
    lval       go to state 22
    stmt       go to state 23
    loop       go to state 24
    mif        go to state 25


State 90

   36 condition: expression EQ expression .
   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '|'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '&'  shift, and go to state 74

    $default  reduce using rule 36 (condition)


State 91

   37 condition: expression DIFF expression .
   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '|'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '&'  shift, and go to state 74

    $default  reduce using rule 37 (condition)


State 92

   32 condition: expression LARGER expression .
   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '|'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '&'  shift, and go to state 74

    $default  reduce using rule 32 (condition)


State 93

   33 condition: expression SMALLER expression .
   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '|'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '&'  shift, and go to state 74

    $default  reduce using rule 33 (condition)


State 94

   34 condition: expression LARGEREQ expression .
   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '|'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '&'  shift, and go to state 74

    $default  reduce using rule 34 (condition)


State 95

   35 condition: expression SMALLEREQ expression .
   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '|'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '&'  shift, and go to state 74

    $default  reduce using rule 35 (condition)


State 96

   46 expression: expression . '+' expression
   46           | expression '+' expression .
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '&'  shift, and go to state 74

    $default  reduce using rule 46 (expression)


State 97

   46 expression: expression . '+' expression
   47           | expression . '-' expression
   47           | expression '-' expression .
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '&'  shift, and go to state 74

    $default  reduce using rule 47 (expression)


State 98

   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression
   51           | expression '|' expression .

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '&'  shift, and go to state 74

    $default  reduce using rule 51 (expression)


State 99

   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   48           | expression '*' expression .
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    $default  reduce using rule 48 (expression)


State 100

   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   49           | expression '/' expression .
   50           | expression . '&' expression
   51           | expression . '|' expression

    $default  reduce using rule 49 (expression)


State 101

   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   50           | expression '&' expression .
   51           | expression . '|' expression

    $default  reduce using rule 50 (expression)


State 102

   30 mif: IF expression ':' BEG . stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    stmt_list  go to state 109
    lval       go to state 22
    stmt       go to state 23
    loop       go to state 24
    mif        go to state 25


State 103

   27 loop: LOOP IDENTIFIER ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    stmt_list  go to state 110
    lval       go to state 22
    stmt       go to state 23
    loop       go to state 24
    mif        go to state 25


State 104

   11 stmt_list: stmt_list . stmt
   28 loop: LOOP ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    END            shift, and go to state 111
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef  go to state 20
    lval  go to state 22
    stmt  go to state 46
    loop  go to state 24
    mif   go to state 25


State 105

   24 stmt: VAR lval IS type .

    $default  reduce using rule 24 (stmt)


State 106

   14 lval: lval '[' expression ']' .

    $default  reduce using rule 14 (lval)


State 107

    6 optparam: ':' IDENTIFIER AS type .
    7         | ':' IDENTIFIER AS type . ',' moreparams

    ','  shift, and go to state 112

    $default  reduce using rule 6 (optparam)


State 108

   11 stmt_list: stmt_list . stmt
   29 mif: IF condition ':' BEG stmt_list . END ELSE ':' BEG stmt_list END
   31    | IF condition ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    END            shift, and go to state 113
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef  go to state 20
    lval  go to state 22
    stmt  go to state 46
    loop  go to state 24
    mif   go to state 25


State 109

   11 stmt_list: stmt_list . stmt
   30 mif: IF expression ':' BEG stmt_list . END ELIF expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    END            shift, and go to state 114
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef  go to state 20
    lval  go to state 22
    stmt  go to state 46
    loop  go to state 24
    mif   go to state 25


State 110

   11 stmt_list: stmt_list . stmt
   27 loop: LOOP IDENTIFIER ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    END            shift, and go to state 115
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef  go to state 20
    lval  go to state 22
    stmt  go to state 46
    loop  go to state 24
    mif   go to state 25


State 111

   28 loop: LOOP ':' BEG stmt_list END .

    $default  reduce using rule 28 (loop)


State 112

    7 optparam: ':' IDENTIFIER AS type ',' . moreparams

    IDENTIFIER  shift, and go to state 116

    moreparams  go to state 117


State 113

   29 mif: IF condition ':' BEG stmt_list END . ELSE ':' BEG stmt_list END
   31    | IF condition ':' BEG stmt_list END .

    ELSE  shift, and go to state 118

    $default  reduce using rule 31 (mif)


State 114

   30 mif: IF expression ':' BEG stmt_list END . ELIF expression ':' BEG stmt_list END eliftstmt

    ELIF  shift, and go to state 119


State 115

   27 loop: LOOP IDENTIFIER ':' BEG stmt_list END .

    $default  reduce using rule 27 (loop)


State 116

    8 moreparams: IDENTIFIER . AS type
    9           | IDENTIFIER . AS type ',' moreparams

    AS  shift, and go to state 120


State 117

    7 optparam: ':' IDENTIFIER AS type ',' moreparams .

    $default  reduce using rule 7 (optparam)


State 118

   29 mif: IF condition ':' BEG stmt_list END ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 121


State 119

   30 mif: IF expression ':' BEG stmt_list END ELIF . expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 122


State 120

    8 moreparams: IDENTIFIER AS . type
    9           | IDENTIFIER AS . type ',' moreparams

    INT   shift, and go to state 9
    BYTE  shift, and go to state 10

    type  go to state 123


State 121

   29 mif: IF condition ':' BEG stmt_list END ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 124


State 122

   30 mif: IF expression ':' BEG stmt_list END ELIF expression . ':' BEG stmt_list END eliftstmt
   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '|'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '&'  shift, and go to state 74
    ':'  shift, and go to state 125


State 123

    8 moreparams: IDENTIFIER AS type .
    9           | IDENTIFIER AS type . ',' moreparams

    ','  shift, and go to state 126

    $default  reduce using rule 8 (moreparams)


State 124

   29 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    stmt_list  go to state 127
    lval       go to state 22
    stmt       go to state 23
    loop       go to state 24
    mif        go to state 25


State 125

   30 mif: IF expression ':' BEG stmt_list END ELIF expression ':' . BEG stmt_list END eliftstmt

    BEG  shift, and go to state 128


State 126

    9 moreparams: IDENTIFIER AS type ',' . moreparams

    IDENTIFIER  shift, and go to state 116

    moreparams  go to state 129


State 127

   11 stmt_list: stmt_list . stmt
   29 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    END            shift, and go to state 130
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef  go to state 20
    lval  go to state 22
    stmt  go to state 46
    loop  go to state 24
    mif   go to state 25


State 128

   30 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    stmt_list  go to state 131
    lval       go to state 22
    stmt       go to state 23
    loop       go to state 24
    mif        go to state 25


State 129

    9 moreparams: IDENTIFIER AS type ',' moreparams .

    $default  reduce using rule 9 (moreparams)


State 130

   29 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END .

    $default  reduce using rule 29 (mif)


State 131

   11 stmt_list: stmt_list . stmt
   30 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    END            shift, and go to state 132
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef  go to state 20
    lval  go to state 22
    stmt  go to state 46
    loop  go to state 24
    mif   go to state 25


State 132

   30 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END . eliftstmt

    ELSE  shift, and go to state 133
    ELIF  shift, and go to state 134

    eliftstmt  go to state 135


State 133

   44 eliftstmt: ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 136


State 134

   45 eliftstmt: ELIF . expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 30
    STRINGLITERAL  shift, and go to state 31
    CONST          shift, and go to state 32
    '+'            shift, and go to state 36
    '-'            shift, and go to state 37
    '('            shift, and go to state 54
    '!'            shift, and go to state 39

    expression  go to state 137


State 135

   30 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt .

    $default  reduce using rule 30 (mif)


State 136

   44 eliftstmt: ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 138


State 137

   45 eliftstmt: ELIF expression . ':' BEG stmt_list END eliftstmt
   46 expression: expression . '+' expression
   47           | expression . '-' expression
   48           | expression . '*' expression
   49           | expression . '/' expression
   50           | expression . '&' expression
   51           | expression . '|' expression

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '|'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '&'  shift, and go to state 74
    ':'  shift, and go to state 139


State 138

   44 eliftstmt: ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    stmt_list  go to state 140
    lval       go to state 22
    stmt       go to state 23
    loop       go to state 24
    mif        go to state 25


State 139

   45 eliftstmt: ELIF expression ':' . BEG stmt_list END eliftstmt

    BEG  shift, and go to state 141


State 140

   11 stmt_list: stmt_list . stmt
   44 eliftstmt: ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    END            shift, and go to state 142
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef  go to state 20
    lval  go to state 22
    stmt  go to state 46
    loop  go to state 24
    mif   go to state 25


State 141

   45 eliftstmt: ELIF expression ':' BEG . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    stmt_list  go to state 143
    lval       go to state 22
    stmt       go to state 23
    loop       go to state 24
    mif        go to state 25


State 142

   44 eliftstmt: ELSE ':' BEG stmt_list END .

    $default  reduce using rule 44 (eliftstmt)


State 143

   11 stmt_list: stmt_list . stmt
   45 eliftstmt: ELIF expression ':' BEG stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DEF            shift, and go to state 1
    END            shift, and go to state 144
    VAR            shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef  go to state 20
    lval  go to state 22
    stmt  go to state 46
    loop  go to state 24
    mif   go to state 25


State 144

   45 eliftstmt: ELIF expression ':' BEG stmt_list END . eliftstmt

    ELSE  shift, and go to state 133
    ELIF  shift, and go to state 134

    eliftstmt  go to state 145


State 145

   45 eliftstmt: ELIF expression ':' BEG stmt_list END eliftstmt .

    $default  reduce using rule 45 (eliftstmt)
