Terminals unused in grammar

   BEG


State 74 conflicts: 1 shift/reduce


Grammar

    0 $accept: fdef $end

    1 fdef: DEF header stmt_list END

    2 fdecl: DECL header

    3 header: IDENTIFIER opt
    4       | IDENTIFIER ':' optparam
    5       | IDENTIFIER

    6 opt: IS type ':' optparam
    7    | IS type

    8 optparam: idlist AS ftype
    9         | idlist AS ftype ',' optparam

   10 ftype: REF INT
   11      | REF BYTE
   12      | INT '[' ']' bp
   13      | BYTE '[' ']' bp
   14      | INT
   15      | BYTE

   16 bp: %empty
   17   | '[' CONST ']'

   18 stmt_list: stmt
   19          | stmt_list stmt

   20 lval: IDENTIFIER
   21     | STRINGLITERAL
   22     | lval '[' expression ']'

   23 type: INT
   24     | BYTE
   25     | type '[' CONST ']'

   26 pc: IDENTIFIER ':' param
   27   | IDENTIFIER

   28 param: expression ',' param
   29      | expression

   30 stmt: SKIP
   31     | pc
   32     | mif
   33     | fdef
   34     | loop
   35     | lval ASSIGNMENT expression
   36     | VAR idlist IS type
   37     | BREAK
   38     | BREAK ':' IDENTIFIER
   39     | CONT
   40     | CONT ':' IDENTIFIER
   41     | fdecl
   42     | EXIT
   43     | RETURN ':' expression
   44     | fcall

   45 fcall: IDENTIFIER '(' param ')'
   46      | IDENTIFIER '(' ')'

   47 idlist: IDENTIFIER
   48       | IDENTIFIER idlist

   49 loop: LOOP IDENTIFIER ':' stmt_list END
   50     | LOOP ':' stmt_list END

   51 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END
   52    | IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition ':' stmt_list END

   54 condition: expression LARGER expression
   55          | expression SMALLER expression
   56          | expression LARGEREQ expression
   57          | expression SMALLEREQ expression
   58          | expression EQ expression
   59          | expression DIFF expression
   60          | TRUE
   61          | FALSE
   62          | condition AND condition
   63          | condition OR condition
   64          | NOT condition
   65          | '(' condition ')'
   66          | expression

   67 eliftstmt: ELSE ':' stmt_list END
   68          | ELIF condition ':' stmt_list END eliftstmt

   69 expression: expression '+' expression
   70           | expression '-' expression
   71           | expression '*' expression
   72           | expression '/' expression
   73           | expression '&' expression
   74           | expression '|' expression
   75           | '+' expression
   76           | '-' expression
   77           | '!' expression
   78           | IDENTIFIER
   79           | STRINGLITERAL
   80           | CONST
   81           | '(' expression ')'
   82           | fcall


Terminals, with rules where they appear

$end (0) 0
'!' (33) 77
'&' (38) 73
'(' (40) 45 46 65 81
')' (41) 45 46 65 81
'*' (42) 71
'+' (43) 69 75
',' (44) 9 28
'-' (45) 70 76
'/' (47) 72
':' (58) 4 6 26 38 40 43 49 50 51 52 53 67 68
'[' (91) 12 13 17 22 25
']' (93) 12 13 17 22 25
'|' (124) 74
error (256)
IDENTIFIER (258) 3 4 5 20 26 27 38 40 45 46 47 48 49 78
INT (259) 10 12 14 23
BYTE (260) 11 13 15 24
IF (261) 51 52 53
ELSE (262) 51 67
STRINGLITERAL (263) 21 79
LOOP (264) 49 50
AS (265) 8 9
SKIP (266) 30
DECL (267) 2
DEF (268) 1
END (269) 1 49 50 51 52 53 67 68
VAR (270) 36
IS (271) 6 7 36
EQ (272) 58
DIFF (273) 59
LARGER (274) 54
SMALLER (275) 55
RETURN (276) 43
EXIT (277) 42
REF (278) 10 11
LARGEREQ (279) 56
SMALLEREQ (280) 57
ASSIGNMENT (281) 35
CONST (282) 17 25 80
AND (283) 62
NOT (284) 64
OR (285) 63
ELIF (286) 52 68
TRUE (287) 60
FALSE (288) 61
BREAK (289) 37 38
CONT (290) 39 40
BEG (291)
UNARYPL (292)
UNARYMINUS (293)
BANGBANG (294)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
fdef (54)
    on left: 1, on right: 0 33
fdecl (55)
    on left: 2, on right: 41
header (56)
    on left: 3 4 5, on right: 1 2
opt (57)
    on left: 6 7, on right: 3
optparam (58)
    on left: 8 9, on right: 4 6 9
ftype (59)
    on left: 10 11 12 13 14 15, on right: 8 9
bp (60)
    on left: 16 17, on right: 12 13
stmt_list (61)
    on left: 18 19, on right: 1 19 49 50 51 52 53 67 68
lval (62)
    on left: 20 21 22, on right: 22 35
type (63)
    on left: 23 24 25, on right: 6 7 25 36
pc (64)
    on left: 26 27, on right: 31
param (65)
    on left: 28 29, on right: 26 28 45
stmt (66)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44, on right:
    18 19
fcall (67)
    on left: 45 46, on right: 44 82
idlist (68)
    on left: 47 48, on right: 8 9 36 48
loop (69)
    on left: 49 50, on right: 34
mif (70)
    on left: 51 52 53, on right: 32
condition (71)
    on left: 54 55 56 57 58 59 60 61 62 63 64 65 66, on right: 51 52
    53 62 63 64 65 68
eliftstmt (72)
    on left: 67 68, on right: 52 68
expression (73)
    on left: 69 70 71 72 73 74 75 76 77 78 79 80 81 82, on right: 22
    28 29 35 43 54 55 56 57 58 59 66 69 70 71 72 73 74 75 76 77 81


State 0

    0 $accept: . fdef $end

    DEF  shift, and go to state 1

    fdef  go to state 2


State 1

    1 fdef: DEF . header stmt_list END

    IDENTIFIER  shift, and go to state 3

    header  go to state 4


State 2

    0 $accept: fdef . $end

    $end  shift, and go to state 5


State 3

    3 header: IDENTIFIER . opt
    4       | IDENTIFIER . ':' optparam
    5       | IDENTIFIER .

    IS   shift, and go to state 6
    ':'  shift, and go to state 7

    $default  reduce using rule 5 (header)

    opt  go to state 8


State 4

    1 fdef: DEF header . stmt_list END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 22
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 5

    0 $accept: fdef $end .

    $default  accept


State 6

    6 opt: IS . type ':' optparam
    7    | IS . type

    INT   shift, and go to state 29
    BYTE  shift, and go to state 30

    type  go to state 31


State 7

    4 header: IDENTIFIER ':' . optparam

    IDENTIFIER  shift, and go to state 32

    optparam  go to state 33
    idlist    go to state 34


State 8

    3 header: IDENTIFIER opt .

    $default  reduce using rule 3 (header)


State 9

   20 lval: IDENTIFIER .
   26 pc: IDENTIFIER . ':' param
   27   | IDENTIFIER .
   45 fcall: IDENTIFIER . '(' param ')'
   46      | IDENTIFIER . '(' ')'

    ':'  shift, and go to state 35
    '('  shift, and go to state 36

    ASSIGNMENT  reduce using rule 20 (lval)
    '['         reduce using rule 20 (lval)
    $default    reduce using rule 27 (pc)


State 10

   51 mif: IF . condition ':' stmt_list END ELSE ':' stmt_list END
   52    | IF . condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   53    | IF . condition ':' stmt_list END

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    NOT            shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 45
    '!'            shift, and go to state 46

    fcall       go to state 47
    condition   go to state 48
    expression  go to state 49


State 11

   21 lval: STRINGLITERAL .

    $default  reduce using rule 21 (lval)


State 12

   49 loop: LOOP . IDENTIFIER ':' stmt_list END
   50     | LOOP . ':' stmt_list END

    IDENTIFIER  shift, and go to state 50
    ':'         shift, and go to state 51


State 13

   30 stmt: SKIP .

    $default  reduce using rule 30 (stmt)


State 14

    2 fdecl: DECL . header

    IDENTIFIER  shift, and go to state 3

    header  go to state 52


State 15

   36 stmt: VAR . idlist IS type

    IDENTIFIER  shift, and go to state 32

    idlist  go to state 53


State 16

   43 stmt: RETURN . ':' expression

    ':'  shift, and go to state 54


State 17

   42 stmt: EXIT .

    $default  reduce using rule 42 (stmt)


State 18

   37 stmt: BREAK .
   38     | BREAK . ':' IDENTIFIER

    ':'  shift, and go to state 55

    $default  reduce using rule 37 (stmt)


State 19

   39 stmt: CONT .
   40     | CONT . ':' IDENTIFIER

    ':'  shift, and go to state 56

    $default  reduce using rule 39 (stmt)


State 20

   33 stmt: fdef .

    $default  reduce using rule 33 (stmt)


State 21

   41 stmt: fdecl .

    $default  reduce using rule 41 (stmt)


State 22

    1 fdef: DEF header stmt_list . END
   19 stmt_list: stmt_list . stmt

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 57
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 23

   22 lval: lval . '[' expression ']'
   35 stmt: lval . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 59
    '['         shift, and go to state 60


State 24

   31 stmt: pc .

    $default  reduce using rule 31 (stmt)


State 25

   18 stmt_list: stmt .

    $default  reduce using rule 18 (stmt_list)


State 26

   44 stmt: fcall .

    $default  reduce using rule 44 (stmt)


State 27

   34 stmt: loop .

    $default  reduce using rule 34 (stmt)


State 28

   32 stmt: mif .

    $default  reduce using rule 32 (stmt)


State 29

   23 type: INT .

    $default  reduce using rule 23 (type)


State 30

   24 type: BYTE .

    $default  reduce using rule 24 (type)


State 31

    6 opt: IS type . ':' optparam
    7    | IS type .
   25 type: type . '[' CONST ']'

    ':'  shift, and go to state 61
    '['  shift, and go to state 62

    $default  reduce using rule 7 (opt)


State 32

   47 idlist: IDENTIFIER .
   48       | IDENTIFIER . idlist

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 47 (idlist)

    idlist  go to state 63


State 33

    4 header: IDENTIFIER ':' optparam .

    $default  reduce using rule 4 (header)


State 34

    8 optparam: idlist . AS ftype
    9         | idlist . AS ftype ',' optparam

    AS  shift, and go to state 64


State 35

   26 pc: IDENTIFIER ':' . param

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    param       go to state 66
    fcall       go to state 47
    expression  go to state 67


State 36

   45 fcall: IDENTIFIER '(' . param ')'
   46      | IDENTIFIER '(' . ')'

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    ')'            shift, and go to state 68
    '!'            shift, and go to state 46

    param       go to state 69
    fcall       go to state 47
    expression  go to state 67


State 37

   45 fcall: IDENTIFIER . '(' param ')'
   46      | IDENTIFIER . '(' ')'
   78 expression: IDENTIFIER .

    '('  shift, and go to state 36

    $default  reduce using rule 78 (expression)


State 38

   79 expression: STRINGLITERAL .

    $default  reduce using rule 79 (expression)


State 39

   80 expression: CONST .

    $default  reduce using rule 80 (expression)


State 40

   64 condition: NOT . condition

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    NOT            shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 45
    '!'            shift, and go to state 46

    fcall       go to state 47
    condition   go to state 70
    expression  go to state 49


State 41

   60 condition: TRUE .

    $default  reduce using rule 60 (condition)


State 42

   61 condition: FALSE .

    $default  reduce using rule 61 (condition)


State 43

   75 expression: '+' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 71


State 44

   76 expression: '-' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 72


State 45

   65 condition: '(' . condition ')'
   81 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    NOT            shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 45
    '!'            shift, and go to state 46

    fcall       go to state 47
    condition   go to state 73
    expression  go to state 74


State 46

   77 expression: '!' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 75


State 47

   82 expression: fcall .

    $default  reduce using rule 82 (expression)


State 48

   51 mif: IF condition . ':' stmt_list END ELSE ':' stmt_list END
   52    | IF condition . ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition . ':' stmt_list END
   62 condition: condition . AND condition
   63          | condition . OR condition

    AND  shift, and go to state 76
    OR   shift, and go to state 77
    ':'  shift, and go to state 78


State 49

   54 condition: expression . LARGER expression
   55          | expression . SMALLER expression
   56          | expression . LARGEREQ expression
   57          | expression . SMALLEREQ expression
   58          | expression . EQ expression
   59          | expression . DIFF expression
   66          | expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    EQ         shift, and go to state 79
    DIFF       shift, and go to state 80
    LARGER     shift, and go to state 81
    SMALLER    shift, and go to state 82
    LARGEREQ   shift, and go to state 83
    SMALLEREQ  shift, and go to state 84
    '+'        shift, and go to state 85
    '-'        shift, and go to state 86
    '|'        shift, and go to state 87
    '*'        shift, and go to state 88
    '/'        shift, and go to state 89
    '&'        shift, and go to state 90

    $default  reduce using rule 66 (condition)


State 50

   49 loop: LOOP IDENTIFIER . ':' stmt_list END

    ':'  shift, and go to state 91


State 51

   50 loop: LOOP ':' . stmt_list END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 92
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 52

    2 fdecl: DECL header .

    $default  reduce using rule 2 (fdecl)


State 53

   36 stmt: VAR idlist . IS type

    IS  shift, and go to state 93


State 54

   43 stmt: RETURN ':' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 94


State 55

   38 stmt: BREAK ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 95


State 56

   40 stmt: CONT ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 96


State 57

    1 fdef: DEF header stmt_list END .

    $default  reduce using rule 1 (fdef)


State 58

   19 stmt_list: stmt_list stmt .

    $default  reduce using rule 19 (stmt_list)


State 59

   35 stmt: lval ASSIGNMENT . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 97


State 60

   22 lval: lval '[' . expression ']'

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 98


State 61

    6 opt: IS type ':' . optparam

    IDENTIFIER  shift, and go to state 32

    optparam  go to state 99
    idlist    go to state 34


State 62

   25 type: type '[' . CONST ']'

    CONST  shift, and go to state 100


State 63

   48 idlist: IDENTIFIER idlist .

    $default  reduce using rule 48 (idlist)


State 64

    8 optparam: idlist AS . ftype
    9         | idlist AS . ftype ',' optparam

    INT   shift, and go to state 101
    BYTE  shift, and go to state 102
    REF   shift, and go to state 103

    ftype  go to state 104


State 65

   81 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 105


State 66

   26 pc: IDENTIFIER ':' param .

    $default  reduce using rule 26 (pc)


State 67

   28 param: expression . ',' param
   29      | expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90
    ','  shift, and go to state 106

    $default  reduce using rule 29 (param)


State 68

   46 fcall: IDENTIFIER '(' ')' .

    $default  reduce using rule 46 (fcall)


State 69

   45 fcall: IDENTIFIER '(' param . ')'

    ')'  shift, and go to state 107


State 70

   62 condition: condition . AND condition
   63          | condition . OR condition
   64          | NOT condition .

    $default  reduce using rule 64 (condition)


State 71

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   75           | '+' expression .

    $default  reduce using rule 75 (expression)


State 72

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   76           | '-' expression .

    $default  reduce using rule 76 (expression)


State 73

   62 condition: condition . AND condition
   63          | condition . OR condition
   65          | '(' condition . ')'

    AND  shift, and go to state 76
    OR   shift, and go to state 77
    ')'  shift, and go to state 108


State 74

   54 condition: expression . LARGER expression
   55          | expression . SMALLER expression
   56          | expression . LARGEREQ expression
   57          | expression . SMALLEREQ expression
   58          | expression . EQ expression
   59          | expression . DIFF expression
   66          | expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   81           | '(' expression . ')'

    EQ         shift, and go to state 79
    DIFF       shift, and go to state 80
    LARGER     shift, and go to state 81
    SMALLER    shift, and go to state 82
    LARGEREQ   shift, and go to state 83
    SMALLEREQ  shift, and go to state 84
    '+'        shift, and go to state 85
    '-'        shift, and go to state 86
    '|'        shift, and go to state 87
    '*'        shift, and go to state 88
    '/'        shift, and go to state 89
    '&'        shift, and go to state 90
    ')'        shift, and go to state 109

    ')'       [reduce using rule 66 (condition)]
    $default  reduce using rule 66 (condition)


State 75

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   77           | '!' expression .

    $default  reduce using rule 77 (expression)


State 76

   62 condition: condition AND . condition

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    NOT            shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 45
    '!'            shift, and go to state 46

    fcall       go to state 47
    condition   go to state 110
    expression  go to state 49


State 77

   63 condition: condition OR . condition

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    NOT            shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 45
    '!'            shift, and go to state 46

    fcall       go to state 47
    condition   go to state 111
    expression  go to state 49


State 78

   51 mif: IF condition ':' . stmt_list END ELSE ':' stmt_list END
   52    | IF condition ':' . stmt_list END ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition ':' . stmt_list END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 112
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 79

   58 condition: expression EQ . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 113


State 80

   59 condition: expression DIFF . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 114


State 81

   54 condition: expression LARGER . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 115


State 82

   55 condition: expression SMALLER . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 116


State 83

   56 condition: expression LARGEREQ . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 117


State 84

   57 condition: expression SMALLEREQ . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 118


State 85

   69 expression: expression '+' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 119


State 86

   70 expression: expression '-' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 120


State 87

   74 expression: expression '|' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 121


State 88

   71 expression: expression '*' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 122


State 89

   72 expression: expression '/' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 123


State 90

   73 expression: expression '&' . expression

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    fcall       go to state 47
    expression  go to state 124


State 91

   49 loop: LOOP IDENTIFIER ':' . stmt_list END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 125
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 92

   19 stmt_list: stmt_list . stmt
   50 loop: LOOP ':' stmt_list . END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 126
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 93

   36 stmt: VAR idlist IS . type

    INT   shift, and go to state 29
    BYTE  shift, and go to state 30

    type  go to state 127


State 94

   43 stmt: RETURN ':' expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 43 (stmt)


State 95

   38 stmt: BREAK ':' IDENTIFIER .

    $default  reduce using rule 38 (stmt)


State 96

   40 stmt: CONT ':' IDENTIFIER .

    $default  reduce using rule 40 (stmt)


State 97

   35 stmt: lval ASSIGNMENT expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 35 (stmt)


State 98

   22 lval: lval '[' expression . ']'
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90
    ']'  shift, and go to state 128


State 99

    6 opt: IS type ':' optparam .

    $default  reduce using rule 6 (opt)


State 100

   25 type: type '[' CONST . ']'

    ']'  shift, and go to state 129


State 101

   12 ftype: INT . '[' ']' bp
   14      | INT .

    '['  shift, and go to state 130

    $default  reduce using rule 14 (ftype)


State 102

   13 ftype: BYTE . '[' ']' bp
   15      | BYTE .

    '['  shift, and go to state 131

    $default  reduce using rule 15 (ftype)


State 103

   10 ftype: REF . INT
   11      | REF . BYTE

    INT   shift, and go to state 132
    BYTE  shift, and go to state 133


State 104

    8 optparam: idlist AS ftype .
    9         | idlist AS ftype . ',' optparam

    ','  shift, and go to state 134

    $default  reduce using rule 8 (optparam)


State 105

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   81           | '(' expression . ')'

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90
    ')'  shift, and go to state 109


State 106

   28 param: expression ',' . param

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 65
    '!'            shift, and go to state 46

    param       go to state 135
    fcall       go to state 47
    expression  go to state 67


State 107

   45 fcall: IDENTIFIER '(' param ')' .

    $default  reduce using rule 45 (fcall)


State 108

   65 condition: '(' condition ')' .

    $default  reduce using rule 65 (condition)


State 109

   81 expression: '(' expression ')' .

    $default  reduce using rule 81 (expression)


State 110

   62 condition: condition . AND condition
   62          | condition AND condition .
   63          | condition . OR condition

    $default  reduce using rule 62 (condition)


State 111

   62 condition: condition . AND condition
   63          | condition . OR condition
   63          | condition OR condition .

    AND  shift, and go to state 76

    $default  reduce using rule 63 (condition)


State 112

   19 stmt_list: stmt_list . stmt
   51 mif: IF condition ':' stmt_list . END ELSE ':' stmt_list END
   52    | IF condition ':' stmt_list . END ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition ':' stmt_list . END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 136
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 113

   58 condition: expression EQ expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 58 (condition)


State 114

   59 condition: expression DIFF expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 59 (condition)


State 115

   54 condition: expression LARGER expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 54 (condition)


State 116

   55 condition: expression SMALLER expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 55 (condition)


State 117

   56 condition: expression LARGEREQ expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 56 (condition)


State 118

   57 condition: expression SMALLEREQ expression .
   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '|'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 57 (condition)


State 119

   69 expression: expression . '+' expression
   69           | expression '+' expression .
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 69 (expression)


State 120

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   70           | expression '-' expression .
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 70 (expression)


State 121

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression
   74           | expression '|' expression .

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '&'  shift, and go to state 90

    $default  reduce using rule 74 (expression)


State 122

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   71           | expression '*' expression .
   72           | expression . '/' expression
   73           | expression . '&' expression
   74           | expression . '|' expression

    $default  reduce using rule 71 (expression)


State 123

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   72           | expression '/' expression .
   73           | expression . '&' expression
   74           | expression . '|' expression

    $default  reduce using rule 72 (expression)


State 124

   69 expression: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   73           | expression . '&' expression
   73           | expression '&' expression .
   74           | expression . '|' expression

    $default  reduce using rule 73 (expression)


State 125

   19 stmt_list: stmt_list . stmt
   49 loop: LOOP IDENTIFIER ':' stmt_list . END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 137
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 126

   50 loop: LOOP ':' stmt_list END .

    $default  reduce using rule 50 (loop)


State 127

   25 type: type . '[' CONST ']'
   36 stmt: VAR idlist IS type .

    '['  shift, and go to state 62

    $default  reduce using rule 36 (stmt)


State 128

   22 lval: lval '[' expression ']' .

    $default  reduce using rule 22 (lval)


State 129

   25 type: type '[' CONST ']' .

    $default  reduce using rule 25 (type)


State 130

   12 ftype: INT '[' . ']' bp

    ']'  shift, and go to state 138


State 131

   13 ftype: BYTE '[' . ']' bp

    ']'  shift, and go to state 139


State 132

   10 ftype: REF INT .

    $default  reduce using rule 10 (ftype)


State 133

   11 ftype: REF BYTE .

    $default  reduce using rule 11 (ftype)


State 134

    9 optparam: idlist AS ftype ',' . optparam

    IDENTIFIER  shift, and go to state 32

    optparam  go to state 140
    idlist    go to state 34


State 135

   28 param: expression ',' param .

    $default  reduce using rule 28 (param)


State 136

   51 mif: IF condition ':' stmt_list END . ELSE ':' stmt_list END
   52    | IF condition ':' stmt_list END . ELIF condition ':' stmt_list END eliftstmt
   53    | IF condition ':' stmt_list END .

    ELSE  shift, and go to state 141
    ELIF  shift, and go to state 142

    $default  reduce using rule 53 (mif)


State 137

   49 loop: LOOP IDENTIFIER ':' stmt_list END .

    $default  reduce using rule 49 (loop)


State 138

   12 ftype: INT '[' ']' . bp

    '['  shift, and go to state 143

    $default  reduce using rule 16 (bp)

    bp  go to state 144


State 139

   13 ftype: BYTE '[' ']' . bp

    '['  shift, and go to state 143

    $default  reduce using rule 16 (bp)

    bp  go to state 145


State 140

    9 optparam: idlist AS ftype ',' optparam .

    $default  reduce using rule 9 (optparam)


State 141

   51 mif: IF condition ':' stmt_list END ELSE . ':' stmt_list END

    ':'  shift, and go to state 146


State 142

   52 mif: IF condition ':' stmt_list END ELIF . condition ':' stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    NOT            shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 45
    '!'            shift, and go to state 46

    fcall       go to state 47
    condition   go to state 147
    expression  go to state 49


State 143

   17 bp: '[' . CONST ']'

    CONST  shift, and go to state 148


State 144

   12 ftype: INT '[' ']' bp .

    $default  reduce using rule 12 (ftype)


State 145

   13 ftype: BYTE '[' ']' bp .

    $default  reduce using rule 13 (ftype)


State 146

   51 mif: IF condition ':' stmt_list END ELSE ':' . stmt_list END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 149
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 147

   52 mif: IF condition ':' stmt_list END ELIF condition . ':' stmt_list END eliftstmt
   62 condition: condition . AND condition
   63          | condition . OR condition

    AND  shift, and go to state 76
    OR   shift, and go to state 77
    ':'  shift, and go to state 150


State 148

   17 bp: '[' CONST . ']'

    ']'  shift, and go to state 151


State 149

   19 stmt_list: stmt_list . stmt
   51 mif: IF condition ':' stmt_list END ELSE ':' stmt_list . END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 152
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 150

   52 mif: IF condition ':' stmt_list END ELIF condition ':' . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 153
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 151

   17 bp: '[' CONST ']' .

    $default  reduce using rule 17 (bp)


State 152

   51 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END .

    $default  reduce using rule 51 (mif)


State 153

   19 stmt_list: stmt_list . stmt
   52 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 154
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 154

   52 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 155
    ELIF  shift, and go to state 156

    eliftstmt  go to state 157


State 155

   67 eliftstmt: ELSE . ':' stmt_list END

    ':'  shift, and go to state 158


State 156

   68 eliftstmt: ELIF . condition ':' stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 37
    STRINGLITERAL  shift, and go to state 38
    CONST          shift, and go to state 39
    NOT            shift, and go to state 40
    TRUE           shift, and go to state 41
    FALSE          shift, and go to state 42
    '+'            shift, and go to state 43
    '-'            shift, and go to state 44
    '('            shift, and go to state 45
    '!'            shift, and go to state 46

    fcall       go to state 47
    condition   go to state 159
    expression  go to state 49


State 157

   52 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 52 (mif)


State 158

   67 eliftstmt: ELSE ':' . stmt_list END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 160
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 159

   62 condition: condition . AND condition
   63          | condition . OR condition
   68 eliftstmt: ELIF condition . ':' stmt_list END eliftstmt

    AND  shift, and go to state 76
    OR   shift, and go to state 77
    ':'  shift, and go to state 161


State 160

   19 stmt_list: stmt_list . stmt
   67 eliftstmt: ELSE ':' stmt_list . END

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 162
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 161

   68 eliftstmt: ELIF condition ':' . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef       go to state 20
    fdecl      go to state 21
    stmt_list  go to state 163
    lval       go to state 23
    pc         go to state 24
    stmt       go to state 25
    fcall      go to state 26
    loop       go to state 27
    mif        go to state 28


State 162

   67 eliftstmt: ELSE ':' stmt_list END .

    $default  reduce using rule 67 (eliftstmt)


State 163

   19 stmt_list: stmt_list . stmt
   68 eliftstmt: ELIF condition ':' stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 9
    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 164
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19

    fdef   go to state 20
    fdecl  go to state 21
    lval   go to state 23
    pc     go to state 24
    stmt   go to state 58
    fcall  go to state 26
    loop   go to state 27
    mif    go to state 28


State 164

   68 eliftstmt: ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 155
    ELIF  shift, and go to state 156

    eliftstmt  go to state 165


State 165

   68 eliftstmt: ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 68 (eliftstmt)
