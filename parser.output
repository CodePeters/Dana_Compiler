Terminals unused in grammar

   LOOP
   AS
   DECL
   DEF
   ADD
   MUL
   DIV
   SUB
   EQ
   DIFF
   LARGER
   SMALLER
   LARGEREQ
   SMALLEREQ
   COLON


Grammar

    0 $accept: body $end

    1 body: BEG stmt_list END

    2 stmt_list: stmt
    3          | stmt_list stmt

    4 lval: IDENTIFIER
    5     | STRINGLITERAL
    6     | lval '[' expression ']'

    7 type: INT '[' CONST ']'
    8     | BYTE '[' CONST ']'
    9     | INT
   10     | BYTE

   11 stmt: SKIP
   12     | mif
   13     | lval ASSIGNMENT expression
   14     | VAR lval IS type

   15 mif: IF expression ':' BEG stmt_list END ELSE ':' BEG stmt_list END

   16 expression: expression '+' expression
   17           | expression '-' expression
   18           | expression '*' expression
   19           | expression '/' expression
   20           | IDENTIFIER
   21           | STRINGLITERAL
   22           | CONST
   23           | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 23
')' (41) 23
'*' (42) 18
'+' (43) 16
'-' (45) 17
'/' (47) 19
':' (58) 15
'[' (91) 6 7 8
']' (93) 6 7 8
error (256)
IDENTIFIER (258) 4 20
INT (259) 7 9
BYTE (260) 8 10
IF (261) 15
ELSE (262) 15
STRINGLITERAL (263) 5 21
LOOP (264)
AS (265)
SKIP (266) 11
DECL (267)
DEF (268)
BEG (269) 1 15
END (270) 1 15
VAR (271) 14
IS (272) 14
ADD (273)
MUL (274)
DIV (275)
SUB (276)
EQ (277)
DIFF (278)
LARGER (279)
SMALLER (280)
LARGEREQ (281)
SMALLEREQ (282)
COLON (283)
ASSIGNMENT (284) 13
CONST (285) 7 8 22


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
body (41)
    on left: 1, on right: 0
stmt_list (42)
    on left: 2 3, on right: 1 3 15
lval (43)
    on left: 4 5 6, on right: 6 13 14
type (44)
    on left: 7 8 9 10, on right: 14
stmt (45)
    on left: 11 12 13 14, on right: 2 3
mif (46)
    on left: 15, on right: 12
expression (47)
    on left: 16 17 18 19 20 21 22 23, on right: 6 13 15 16 17 18 19
    23


State 0

    0 $accept: . body $end

    BEG  shift, and go to state 1

    body  go to state 2


State 1

    1 body: BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    SKIP           shift, and go to state 6
    VAR            shift, and go to state 7

    stmt_list  go to state 8
    lval       go to state 9
    stmt       go to state 10
    mif        go to state 11


State 2

    0 $accept: body . $end

    $end  shift, and go to state 12


State 3

    4 lval: IDENTIFIER .

    $default  reduce using rule 4 (lval)


State 4

   15 mif: IF . expression ':' BEG stmt_list END ELSE ':' BEG stmt_list END

    IDENTIFIER     shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    CONST          shift, and go to state 15
    '('            shift, and go to state 16

    expression  go to state 17


State 5

    5 lval: STRINGLITERAL .

    $default  reduce using rule 5 (lval)


State 6

   11 stmt: SKIP .

    $default  reduce using rule 11 (stmt)


State 7

   14 stmt: VAR . lval IS type

    IDENTIFIER     shift, and go to state 3
    STRINGLITERAL  shift, and go to state 5

    lval  go to state 18


State 8

    1 body: BEG stmt_list . END
    3 stmt_list: stmt_list . stmt

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    SKIP           shift, and go to state 6
    END            shift, and go to state 19
    VAR            shift, and go to state 7

    lval  go to state 9
    stmt  go to state 20
    mif   go to state 11


State 9

    6 lval: lval . '[' expression ']'
   13 stmt: lval . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 21
    '['         shift, and go to state 22


State 10

    2 stmt_list: stmt .

    $default  reduce using rule 2 (stmt_list)


State 11

   12 stmt: mif .

    $default  reduce using rule 12 (stmt)


State 12

    0 $accept: body $end .

    $default  accept


State 13

   20 expression: IDENTIFIER .

    $default  reduce using rule 20 (expression)


State 14

   21 expression: STRINGLITERAL .

    $default  reduce using rule 21 (expression)


State 15

   22 expression: CONST .

    $default  reduce using rule 22 (expression)


State 16

   23 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    CONST          shift, and go to state 15
    '('            shift, and go to state 16

    expression  go to state 23


State 17

   15 mif: IF expression . ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   16 expression: expression . '+' expression
   17           | expression . '-' expression
   18           | expression . '*' expression
   19           | expression . '/' expression

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27
    ':'  shift, and go to state 28


State 18

    6 lval: lval . '[' expression ']'
   14 stmt: VAR lval . IS type

    IS   shift, and go to state 29
    '['  shift, and go to state 22


State 19

    1 body: BEG stmt_list END .

    $default  reduce using rule 1 (body)


State 20

    3 stmt_list: stmt_list stmt .

    $default  reduce using rule 3 (stmt_list)


State 21

   13 stmt: lval ASSIGNMENT . expression

    IDENTIFIER     shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    CONST          shift, and go to state 15
    '('            shift, and go to state 16

    expression  go to state 30


State 22

    6 lval: lval '[' . expression ']'

    IDENTIFIER     shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    CONST          shift, and go to state 15
    '('            shift, and go to state 16

    expression  go to state 31


State 23

   16 expression: expression . '+' expression
   17           | expression . '-' expression
   18           | expression . '*' expression
   19           | expression . '/' expression
   23           | '(' expression . ')'

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27
    ')'  shift, and go to state 32


State 24

   16 expression: expression '+' . expression

    IDENTIFIER     shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    CONST          shift, and go to state 15
    '('            shift, and go to state 16

    expression  go to state 33


State 25

   17 expression: expression '-' . expression

    IDENTIFIER     shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    CONST          shift, and go to state 15
    '('            shift, and go to state 16

    expression  go to state 34


State 26

   18 expression: expression '*' . expression

    IDENTIFIER     shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    CONST          shift, and go to state 15
    '('            shift, and go to state 16

    expression  go to state 35


State 27

   19 expression: expression '/' . expression

    IDENTIFIER     shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    CONST          shift, and go to state 15
    '('            shift, and go to state 16

    expression  go to state 36


State 28

   15 mif: IF expression ':' . BEG stmt_list END ELSE ':' BEG stmt_list END

    BEG  shift, and go to state 37


State 29

   14 stmt: VAR lval IS . type

    INT   shift, and go to state 38
    BYTE  shift, and go to state 39

    type  go to state 40


State 30

   13 stmt: lval ASSIGNMENT expression .
   16 expression: expression . '+' expression
   17           | expression . '-' expression
   18           | expression . '*' expression
   19           | expression . '/' expression

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 13 (stmt)


State 31

    6 lval: lval '[' expression . ']'
   16 expression: expression . '+' expression
   17           | expression . '-' expression
   18           | expression . '*' expression
   19           | expression . '/' expression

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27
    ']'  shift, and go to state 41


State 32

   23 expression: '(' expression ')' .

    $default  reduce using rule 23 (expression)


State 33

   16 expression: expression . '+' expression
   16           | expression '+' expression .
   17           | expression . '-' expression
   18           | expression . '*' expression
   19           | expression . '/' expression

    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 16 (expression)


State 34

   16 expression: expression . '+' expression
   17           | expression . '-' expression
   17           | expression '-' expression .
   18           | expression . '*' expression
   19           | expression . '/' expression

    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 17 (expression)


State 35

   16 expression: expression . '+' expression
   17           | expression . '-' expression
   18           | expression . '*' expression
   18           | expression '*' expression .
   19           | expression . '/' expression

    $default  reduce using rule 18 (expression)


State 36

   16 expression: expression . '+' expression
   17           | expression . '-' expression
   18           | expression . '*' expression
   19           | expression . '/' expression
   19           | expression '/' expression .

    $default  reduce using rule 19 (expression)


State 37

   15 mif: IF expression ':' BEG . stmt_list END ELSE ':' BEG stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    SKIP           shift, and go to state 6
    VAR            shift, and go to state 7

    stmt_list  go to state 42
    lval       go to state 9
    stmt       go to state 10
    mif        go to state 11


State 38

    7 type: INT . '[' CONST ']'
    9     | INT .

    '['  shift, and go to state 43

    $default  reduce using rule 9 (type)


State 39

    8 type: BYTE . '[' CONST ']'
   10     | BYTE .

    '['  shift, and go to state 44

    $default  reduce using rule 10 (type)


State 40

   14 stmt: VAR lval IS type .

    $default  reduce using rule 14 (stmt)


State 41

    6 lval: lval '[' expression ']' .

    $default  reduce using rule 6 (lval)


State 42

    3 stmt_list: stmt_list . stmt
   15 mif: IF expression ':' BEG stmt_list . END ELSE ':' BEG stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    SKIP           shift, and go to state 6
    END            shift, and go to state 45
    VAR            shift, and go to state 7

    lval  go to state 9
    stmt  go to state 20
    mif   go to state 11


State 43

    7 type: INT '[' . CONST ']'

    CONST  shift, and go to state 46


State 44

    8 type: BYTE '[' . CONST ']'

    CONST  shift, and go to state 47


State 45

   15 mif: IF expression ':' BEG stmt_list END . ELSE ':' BEG stmt_list END

    ELSE  shift, and go to state 48


State 46

    7 type: INT '[' CONST . ']'

    ']'  shift, and go to state 49


State 47

    8 type: BYTE '[' CONST . ']'

    ']'  shift, and go to state 50


State 48

   15 mif: IF expression ':' BEG stmt_list END ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 51


State 49

    7 type: INT '[' CONST ']' .

    $default  reduce using rule 7 (type)


State 50

    8 type: BYTE '[' CONST ']' .

    $default  reduce using rule 8 (type)


State 51

   15 mif: IF expression ':' BEG stmt_list END ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 52


State 52

   15 mif: IF expression ':' BEG stmt_list END ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    SKIP           shift, and go to state 6
    VAR            shift, and go to state 7

    stmt_list  go to state 53
    lval       go to state 9
    stmt       go to state 10
    mif        go to state 11


State 53

    3 stmt_list: stmt_list . stmt
   15 mif: IF expression ':' BEG stmt_list END ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    STRINGLITERAL  shift, and go to state 5
    SKIP           shift, and go to state 6
    END            shift, and go to state 54
    VAR            shift, and go to state 7

    lval  go to state 9
    stmt  go to state 20
    mif   go to state 11


State 54

   15 mif: IF expression ':' BEG stmt_list END ELSE ':' BEG stmt_list END .

    $default  reduce using rule 15 (mif)
