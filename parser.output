Grammar

    0 $accept: fdef $end

    1 fdef: DEF header BEG stmt_list END

    2 fdecl: DECL header

    3 header: IDENTIFIER opt
    4       | IDENTIFIER

    5 opt: IS type ':' optparam
    6    | IS type

    7 optparam: IDENTIFIER AS type
    8         | IDENTIFIER AS type ',' optparam

    9 stmt_list: stmt
   10          | stmt_list stmt

   11 lval: IDENTIFIER
   12     | STRINGLITERAL
   13     | lval '[' expression ']'

   14 type: INT '[' CONST ']'
   15     | BYTE '[' CONST ']'
   16     | INT
   17     | BYTE

   18 pc: IDENTIFIER ':' param
   19   | IDENTIFIER

   20 param: expression ',' param
   21      | expression

   22 stmt: SKIP
   23     | pc
   24     | mif
   25     | fdef
   26     | loop
   27     | lval ASSIGNMENT expression
   28     | VAR lval IS type
   29     | BREAK
   30     | BREAK ':' IDENTIFIER
   31     | CONT
   32     | CONT ':' IDENTIFIER
   33     | fdecl
   34     | EXIT
   35     | RETURN ':' expression

   36 loop: LOOP IDENTIFIER ':' BEG stmt_list END
   37     | LOOP ':' BEG stmt_list END

   38 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   39    | IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   40    | IF condition ':' BEG stmt_list END

   41 condition: expression LARGER expression
   42          | expression SMALLER expression
   43          | expression LARGEREQ expression
   44          | expression SMALLEREQ expression
   45          | expression EQ expression
   46          | expression DIFF expression
   47          | TRUE
   48          | FALSE
   49          | condition AND condition
   50          | condition OR condition
   51          | NOT condition
   52          | '(' condition ')'

   53 eliftstmt: ELSE ':' BEG stmt_list END
   54          | ELIF expression ':' BEG stmt_list END eliftstmt

   55 expression: expression '+' expression
   56           | expression '-' expression
   57           | expression '*' expression
   58           | expression '/' expression
   59           | expression '&' expression
   60           | expression '|' expression
   61           | '+' expression
   62           | '-' expression
   63           | '!' expression
   64           | IDENTIFIER
   65           | STRINGLITERAL
   66           | CONST
   67           | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 63
'&' (38) 59
'(' (40) 52 67
')' (41) 52 67
'*' (42) 57
'+' (43) 55 61
',' (44) 8 20
'-' (45) 56 62
'/' (47) 58
':' (58) 5 18 30 32 35 36 37 38 39 40 53 54
'[' (91) 13 14 15
']' (93) 13 14 15
'|' (124) 60
error (256)
IDENTIFIER (258) 3 4 7 8 11 18 19 30 32 36 64
INT (259) 14 16
BYTE (260) 15 17
IF (261) 38 39 40
ELSE (262) 38 53
STRINGLITERAL (263) 12 65
LOOP (264) 36 37
AS (265) 7 8
SKIP (266) 22
DECL (267) 2
DEF (268) 1
BEG (269) 1 36 37 38 39 40 53 54
END (270) 1 36 37 38 39 40 53 54
VAR (271) 28
IS (272) 5 6 28
EQ (273) 45
DIFF (274) 46
LARGER (275) 41
SMALLER (276) 42
RETURN (277) 35
EXIT (278) 34
LARGEREQ (279) 43
SMALLEREQ (280) 44
ASSIGNMENT (281) 27
CONST (282) 14 15 66
AND (283) 49
NOT (284) 51
OR (285) 50
ELIF (286) 39 54
TRUE (287) 47
FALSE (288) 48
BREAK (289) 29 30
CONT (290) 31 32
UNARYPL (291)
UNARYMINUS (292)
BANGBANG (293)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
fdef (53)
    on left: 1, on right: 0 25
fdecl (54)
    on left: 2, on right: 33
header (55)
    on left: 3 4, on right: 1 2
opt (56)
    on left: 5 6, on right: 3
optparam (57)
    on left: 7 8, on right: 5 8
stmt_list (58)
    on left: 9 10, on right: 1 10 36 37 38 39 40 53 54
lval (59)
    on left: 11 12 13, on right: 13 27 28
type (60)
    on left: 14 15 16 17, on right: 5 6 7 8 28
pc (61)
    on left: 18 19, on right: 23
param (62)
    on left: 20 21, on right: 18 20
stmt (63)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35, on right: 9
    10
loop (64)
    on left: 36 37, on right: 26
mif (65)
    on left: 38 39 40, on right: 24
condition (66)
    on left: 41 42 43 44 45 46 47 48 49 50 51 52, on right: 38 40 49
    50 51 52
eliftstmt (67)
    on left: 53 54, on right: 39 54
expression (68)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66 67, on right: 13 20
    21 27 35 39 41 42 43 44 45 46 54 55 56 57 58 59 60 61 62 63 67


State 0

    0 $accept: . fdef $end

    DEF  shift, and go to state 1

    fdef  go to state 2


State 1

    1 fdef: DEF . header BEG stmt_list END

    IDENTIFIER  shift, and go to state 3

    header  go to state 4


State 2

    0 $accept: fdef . $end

    $end  shift, and go to state 5


State 3

    3 header: IDENTIFIER . opt
    4       | IDENTIFIER .

    IS  shift, and go to state 6

    $default  reduce using rule 4 (header)

    opt  go to state 7


State 4

    1 fdef: DEF header . BEG stmt_list END

    BEG  shift, and go to state 8


State 5

    0 $accept: fdef $end .

    $default  accept


State 6

    5 opt: IS . type ':' optparam
    6    | IS . type

    INT   shift, and go to state 9
    BYTE  shift, and go to state 10

    type  go to state 11


State 7

    3 header: IDENTIFIER opt .

    $default  reduce using rule 3 (header)


State 8

    1 fdef: DEF header BEG . stmt_list END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef       go to state 23
    fdecl      go to state 24
    stmt_list  go to state 25
    lval       go to state 26
    pc         go to state 27
    stmt       go to state 28
    loop       go to state 29
    mif        go to state 30


State 9

   14 type: INT . '[' CONST ']'
   16     | INT .

    '['  shift, and go to state 31

    $default  reduce using rule 16 (type)


State 10

   15 type: BYTE . '[' CONST ']'
   17     | BYTE .

    '['  shift, and go to state 32

    $default  reduce using rule 17 (type)


State 11

    5 opt: IS type . ':' optparam
    6    | IS type .

    ':'  shift, and go to state 33

    $default  reduce using rule 6 (opt)


State 12

   11 lval: IDENTIFIER .
   18 pc: IDENTIFIER . ':' param
   19   | IDENTIFIER .

    ':'  shift, and go to state 34

    ASSIGNMENT  reduce using rule 11 (lval)
    '['         reduce using rule 11 (lval)
    $default    reduce using rule 19 (pc)


State 13

   38 mif: IF . condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   39    | IF . expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   40    | IF . condition ':' BEG stmt_list END

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    NOT            shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    condition   go to state 45
    expression  go to state 46


State 14

   12 lval: STRINGLITERAL .

    $default  reduce using rule 12 (lval)


State 15

   36 loop: LOOP . IDENTIFIER ':' BEG stmt_list END
   37     | LOOP . ':' BEG stmt_list END

    IDENTIFIER  shift, and go to state 47
    ':'         shift, and go to state 48


State 16

   22 stmt: SKIP .

    $default  reduce using rule 22 (stmt)


State 17

    2 fdecl: DECL . header

    IDENTIFIER  shift, and go to state 3

    header  go to state 49


State 18

   28 stmt: VAR . lval IS type

    IDENTIFIER     shift, and go to state 50
    STRINGLITERAL  shift, and go to state 14

    lval  go to state 51


State 19

   35 stmt: RETURN . ':' expression

    ':'  shift, and go to state 52


State 20

   34 stmt: EXIT .

    $default  reduce using rule 34 (stmt)


State 21

   29 stmt: BREAK .
   30     | BREAK . ':' IDENTIFIER

    ':'  shift, and go to state 53

    $default  reduce using rule 29 (stmt)


State 22

   31 stmt: CONT .
   32     | CONT . ':' IDENTIFIER

    ':'  shift, and go to state 54

    $default  reduce using rule 31 (stmt)


State 23

   25 stmt: fdef .

    $default  reduce using rule 25 (stmt)


State 24

   33 stmt: fdecl .

    $default  reduce using rule 33 (stmt)


State 25

    1 fdef: DEF header BEG stmt_list . END
   10 stmt_list: stmt_list . stmt

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    END            shift, and go to state 55
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef   go to state 23
    fdecl  go to state 24
    lval   go to state 26
    pc     go to state 27
    stmt   go to state 56
    loop   go to state 29
    mif    go to state 30


State 26

   13 lval: lval . '[' expression ']'
   27 stmt: lval . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 57
    '['         shift, and go to state 58


State 27

   23 stmt: pc .

    $default  reduce using rule 23 (stmt)


State 28

    9 stmt_list: stmt .

    $default  reduce using rule 9 (stmt_list)


State 29

   26 stmt: loop .

    $default  reduce using rule 26 (stmt)


State 30

   24 stmt: mif .

    $default  reduce using rule 24 (stmt)


State 31

   14 type: INT '[' . CONST ']'

    CONST  shift, and go to state 59


State 32

   15 type: BYTE '[' . CONST ']'

    CONST  shift, and go to state 60


State 33

    5 opt: IS type ':' . optparam

    IDENTIFIER  shift, and go to state 61

    optparam  go to state 62


State 34

   18 pc: IDENTIFIER ':' . param

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    param       go to state 64
    expression  go to state 65


State 35

   64 expression: IDENTIFIER .

    $default  reduce using rule 64 (expression)


State 36

   65 expression: STRINGLITERAL .

    $default  reduce using rule 65 (expression)


State 37

   66 expression: CONST .

    $default  reduce using rule 66 (expression)


State 38

   51 condition: NOT . condition

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    NOT            shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    condition   go to state 66
    expression  go to state 67


State 39

   47 condition: TRUE .

    $default  reduce using rule 47 (condition)


State 40

   48 condition: FALSE .

    $default  reduce using rule 48 (condition)


State 41

   61 expression: '+' . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 68


State 42

   62 expression: '-' . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 69


State 43

   52 condition: '(' . condition ')'
   67 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    NOT            shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    condition   go to state 70
    expression  go to state 71


State 44

   63 expression: '!' . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 72


State 45

   38 mif: IF condition . ':' BEG stmt_list END ELSE ':' BEG stmt_list END
   40    | IF condition . ':' BEG stmt_list END
   49 condition: condition . AND condition
   50          | condition . OR condition

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ':'  shift, and go to state 75


State 46

   39 mif: IF expression . ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt
   41 condition: expression . LARGER expression
   42          | expression . SMALLER expression
   43          | expression . LARGEREQ expression
   44          | expression . SMALLEREQ expression
   45          | expression . EQ expression
   46          | expression . DIFF expression
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    EQ         shift, and go to state 76
    DIFF       shift, and go to state 77
    LARGER     shift, and go to state 78
    SMALLER    shift, and go to state 79
    LARGEREQ   shift, and go to state 80
    SMALLEREQ  shift, and go to state 81
    '+'        shift, and go to state 82
    '-'        shift, and go to state 83
    '|'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '&'        shift, and go to state 87
    ':'        shift, and go to state 88


State 47

   36 loop: LOOP IDENTIFIER . ':' BEG stmt_list END

    ':'  shift, and go to state 89


State 48

   37 loop: LOOP ':' . BEG stmt_list END

    BEG  shift, and go to state 90


State 49

    2 fdecl: DECL header .

    $default  reduce using rule 2 (fdecl)


State 50

   11 lval: IDENTIFIER .

    $default  reduce using rule 11 (lval)


State 51

   13 lval: lval . '[' expression ']'
   28 stmt: VAR lval . IS type

    IS   shift, and go to state 91
    '['  shift, and go to state 58


State 52

   35 stmt: RETURN ':' . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 92


State 53

   30 stmt: BREAK ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 93


State 54

   32 stmt: CONT ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 94


State 55

    1 fdef: DEF header BEG stmt_list END .

    $default  reduce using rule 1 (fdef)


State 56

   10 stmt_list: stmt_list stmt .

    $default  reduce using rule 10 (stmt_list)


State 57

   27 stmt: lval ASSIGNMENT . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 95


State 58

   13 lval: lval '[' . expression ']'

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 96


State 59

   14 type: INT '[' CONST . ']'

    ']'  shift, and go to state 97


State 60

   15 type: BYTE '[' CONST . ']'

    ']'  shift, and go to state 98


State 61

    7 optparam: IDENTIFIER . AS type
    8         | IDENTIFIER . AS type ',' optparam

    AS  shift, and go to state 99


State 62

    5 opt: IS type ':' optparam .

    $default  reduce using rule 5 (opt)


State 63

   67 expression: '(' . expression ')'

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 100


State 64

   18 pc: IDENTIFIER ':' param .

    $default  reduce using rule 18 (pc)


State 65

   20 param: expression . ',' param
   21      | expression .
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87
    ','  shift, and go to state 101

    $default  reduce using rule 21 (param)


State 66

   49 condition: condition . AND condition
   50          | condition . OR condition
   51          | NOT condition .

    $default  reduce using rule 51 (condition)


State 67

   41 condition: expression . LARGER expression
   42          | expression . SMALLER expression
   43          | expression . LARGEREQ expression
   44          | expression . SMALLEREQ expression
   45          | expression . EQ expression
   46          | expression . DIFF expression
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    EQ         shift, and go to state 76
    DIFF       shift, and go to state 77
    LARGER     shift, and go to state 78
    SMALLER    shift, and go to state 79
    LARGEREQ   shift, and go to state 80
    SMALLEREQ  shift, and go to state 81
    '+'        shift, and go to state 82
    '-'        shift, and go to state 83
    '|'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '&'        shift, and go to state 87


State 68

   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression
   61           | '+' expression .

    $default  reduce using rule 61 (expression)


State 69

   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression
   62           | '-' expression .

    $default  reduce using rule 62 (expression)


State 70

   49 condition: condition . AND condition
   50          | condition . OR condition
   52          | '(' condition . ')'

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ')'  shift, and go to state 102


State 71

   41 condition: expression . LARGER expression
   42          | expression . SMALLER expression
   43          | expression . LARGEREQ expression
   44          | expression . SMALLEREQ expression
   45          | expression . EQ expression
   46          | expression . DIFF expression
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression
   67           | '(' expression . ')'

    EQ         shift, and go to state 76
    DIFF       shift, and go to state 77
    LARGER     shift, and go to state 78
    SMALLER    shift, and go to state 79
    LARGEREQ   shift, and go to state 80
    SMALLEREQ  shift, and go to state 81
    '+'        shift, and go to state 82
    '-'        shift, and go to state 83
    '|'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '&'        shift, and go to state 87
    ')'        shift, and go to state 103


State 72

   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression
   63           | '!' expression .

    $default  reduce using rule 63 (expression)


State 73

   49 condition: condition AND . condition

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    NOT            shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    condition   go to state 104
    expression  go to state 67


State 74

   50 condition: condition OR . condition

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    NOT            shift, and go to state 38
    TRUE           shift, and go to state 39
    FALSE          shift, and go to state 40
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    condition   go to state 105
    expression  go to state 67


State 75

   38 mif: IF condition ':' . BEG stmt_list END ELSE ':' BEG stmt_list END
   40    | IF condition ':' . BEG stmt_list END

    BEG  shift, and go to state 106


State 76

   45 condition: expression EQ . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 107


State 77

   46 condition: expression DIFF . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 108


State 78

   41 condition: expression LARGER . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 109


State 79

   42 condition: expression SMALLER . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 110


State 80

   43 condition: expression LARGEREQ . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 111


State 81

   44 condition: expression SMALLEREQ . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 112


State 82

   55 expression: expression '+' . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 113


State 83

   56 expression: expression '-' . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 114


State 84

   60 expression: expression '|' . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 115


State 85

   57 expression: expression '*' . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 116


State 86

   58 expression: expression '/' . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 117


State 87

   59 expression: expression '&' . expression

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 118


State 88

   39 mif: IF expression ':' . BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt

    BEG  shift, and go to state 119


State 89

   36 loop: LOOP IDENTIFIER ':' . BEG stmt_list END

    BEG  shift, and go to state 120


State 90

   37 loop: LOOP ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef       go to state 23
    fdecl      go to state 24
    stmt_list  go to state 121
    lval       go to state 26
    pc         go to state 27
    stmt       go to state 28
    loop       go to state 29
    mif        go to state 30


State 91

   28 stmt: VAR lval IS . type

    INT   shift, and go to state 9
    BYTE  shift, and go to state 10

    type  go to state 122


State 92

   35 stmt: RETURN ':' expression .
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 35 (stmt)


State 93

   30 stmt: BREAK ':' IDENTIFIER .

    $default  reduce using rule 30 (stmt)


State 94

   32 stmt: CONT ':' IDENTIFIER .

    $default  reduce using rule 32 (stmt)


State 95

   27 stmt: lval ASSIGNMENT expression .
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 27 (stmt)


State 96

   13 lval: lval '[' expression . ']'
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87
    ']'  shift, and go to state 123


State 97

   14 type: INT '[' CONST ']' .

    $default  reduce using rule 14 (type)


State 98

   15 type: BYTE '[' CONST ']' .

    $default  reduce using rule 15 (type)


State 99

    7 optparam: IDENTIFIER AS . type
    8         | IDENTIFIER AS . type ',' optparam

    INT   shift, and go to state 9
    BYTE  shift, and go to state 10

    type  go to state 124


State 100

   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression
   67           | '(' expression . ')'

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87
    ')'  shift, and go to state 103


State 101

   20 param: expression ',' . param

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    param       go to state 125
    expression  go to state 65


State 102

   52 condition: '(' condition ')' .

    $default  reduce using rule 52 (condition)


State 103

   67 expression: '(' expression ')' .

    $default  reduce using rule 67 (expression)


State 104

   49 condition: condition . AND condition
   49          | condition AND condition .
   50          | condition . OR condition

    $default  reduce using rule 49 (condition)


State 105

   49 condition: condition . AND condition
   50          | condition . OR condition
   50          | condition OR condition .

    AND  shift, and go to state 73

    $default  reduce using rule 50 (condition)


State 106

   38 mif: IF condition ':' BEG . stmt_list END ELSE ':' BEG stmt_list END
   40    | IF condition ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef       go to state 23
    fdecl      go to state 24
    stmt_list  go to state 126
    lval       go to state 26
    pc         go to state 27
    stmt       go to state 28
    loop       go to state 29
    mif        go to state 30


State 107

   45 condition: expression EQ expression .
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 45 (condition)


State 108

   46 condition: expression DIFF expression .
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 46 (condition)


State 109

   41 condition: expression LARGER expression .
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 41 (condition)


State 110

   42 condition: expression SMALLER expression .
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 42 (condition)


State 111

   43 condition: expression LARGEREQ expression .
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 43 (condition)


State 112

   44 condition: expression SMALLEREQ expression .
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 44 (condition)


State 113

   55 expression: expression . '+' expression
   55           | expression '+' expression .
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 55 (expression)


State 114

   55 expression: expression . '+' expression
   56           | expression . '-' expression
   56           | expression '-' expression .
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 56 (expression)


State 115

   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression
   60           | expression '|' expression .

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 60 (expression)


State 116

   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   57           | expression '*' expression .
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    $default  reduce using rule 57 (expression)


State 117

   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   58           | expression '/' expression .
   59           | expression . '&' expression
   60           | expression . '|' expression

    $default  reduce using rule 58 (expression)


State 118

   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   59           | expression '&' expression .
   60           | expression . '|' expression

    $default  reduce using rule 59 (expression)


State 119

   39 mif: IF expression ':' BEG . stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef       go to state 23
    fdecl      go to state 24
    stmt_list  go to state 127
    lval       go to state 26
    pc         go to state 27
    stmt       go to state 28
    loop       go to state 29
    mif        go to state 30


State 120

   36 loop: LOOP IDENTIFIER ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef       go to state 23
    fdecl      go to state 24
    stmt_list  go to state 128
    lval       go to state 26
    pc         go to state 27
    stmt       go to state 28
    loop       go to state 29
    mif        go to state 30


State 121

   10 stmt_list: stmt_list . stmt
   37 loop: LOOP ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    END            shift, and go to state 129
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef   go to state 23
    fdecl  go to state 24
    lval   go to state 26
    pc     go to state 27
    stmt   go to state 56
    loop   go to state 29
    mif    go to state 30


State 122

   28 stmt: VAR lval IS type .

    $default  reduce using rule 28 (stmt)


State 123

   13 lval: lval '[' expression ']' .

    $default  reduce using rule 13 (lval)


State 124

    7 optparam: IDENTIFIER AS type .
    8         | IDENTIFIER AS type . ',' optparam

    ','  shift, and go to state 130

    $default  reduce using rule 7 (optparam)


State 125

   20 param: expression ',' param .

    $default  reduce using rule 20 (param)


State 126

   10 stmt_list: stmt_list . stmt
   38 mif: IF condition ':' BEG stmt_list . END ELSE ':' BEG stmt_list END
   40    | IF condition ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    END            shift, and go to state 131
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef   go to state 23
    fdecl  go to state 24
    lval   go to state 26
    pc     go to state 27
    stmt   go to state 56
    loop   go to state 29
    mif    go to state 30


State 127

   10 stmt_list: stmt_list . stmt
   39 mif: IF expression ':' BEG stmt_list . END ELIF expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    END            shift, and go to state 132
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef   go to state 23
    fdecl  go to state 24
    lval   go to state 26
    pc     go to state 27
    stmt   go to state 56
    loop   go to state 29
    mif    go to state 30


State 128

   10 stmt_list: stmt_list . stmt
   36 loop: LOOP IDENTIFIER ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    END            shift, and go to state 133
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef   go to state 23
    fdecl  go to state 24
    lval   go to state 26
    pc     go to state 27
    stmt   go to state 56
    loop   go to state 29
    mif    go to state 30


State 129

   37 loop: LOOP ':' BEG stmt_list END .

    $default  reduce using rule 37 (loop)


State 130

    8 optparam: IDENTIFIER AS type ',' . optparam

    IDENTIFIER  shift, and go to state 61

    optparam  go to state 134


State 131

   38 mif: IF condition ':' BEG stmt_list END . ELSE ':' BEG stmt_list END
   40    | IF condition ':' BEG stmt_list END .

    ELSE  shift, and go to state 135

    $default  reduce using rule 40 (mif)


State 132

   39 mif: IF expression ':' BEG stmt_list END . ELIF expression ':' BEG stmt_list END eliftstmt

    ELIF  shift, and go to state 136


State 133

   36 loop: LOOP IDENTIFIER ':' BEG stmt_list END .

    $default  reduce using rule 36 (loop)


State 134

    8 optparam: IDENTIFIER AS type ',' optparam .

    $default  reduce using rule 8 (optparam)


State 135

   38 mif: IF condition ':' BEG stmt_list END ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 137


State 136

   39 mif: IF expression ':' BEG stmt_list END ELIF . expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 138


State 137

   38 mif: IF condition ':' BEG stmt_list END ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 139


State 138

   39 mif: IF expression ':' BEG stmt_list END ELIF expression . ':' BEG stmt_list END eliftstmt
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87
    ':'  shift, and go to state 140


State 139

   38 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef       go to state 23
    fdecl      go to state 24
    stmt_list  go to state 141
    lval       go to state 26
    pc         go to state 27
    stmt       go to state 28
    loop       go to state 29
    mif        go to state 30


State 140

   39 mif: IF expression ':' BEG stmt_list END ELIF expression ':' . BEG stmt_list END eliftstmt

    BEG  shift, and go to state 142


State 141

   10 stmt_list: stmt_list . stmt
   38 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    END            shift, and go to state 143
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef   go to state 23
    fdecl  go to state 24
    lval   go to state 26
    pc     go to state 27
    stmt   go to state 56
    loop   go to state 29
    mif    go to state 30


State 142

   39 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef       go to state 23
    fdecl      go to state 24
    stmt_list  go to state 144
    lval       go to state 26
    pc         go to state 27
    stmt       go to state 28
    loop       go to state 29
    mif        go to state 30


State 143

   38 mif: IF condition ':' BEG stmt_list END ELSE ':' BEG stmt_list END .

    $default  reduce using rule 38 (mif)


State 144

   10 stmt_list: stmt_list . stmt
   39 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    END            shift, and go to state 145
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef   go to state 23
    fdecl  go to state 24
    lval   go to state 26
    pc     go to state 27
    stmt   go to state 56
    loop   go to state 29
    mif    go to state 30


State 145

   39 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END . eliftstmt

    ELSE  shift, and go to state 146
    ELIF  shift, and go to state 147

    eliftstmt  go to state 148


State 146

   53 eliftstmt: ELSE . ':' BEG stmt_list END

    ':'  shift, and go to state 149


State 147

   54 eliftstmt: ELIF . expression ':' BEG stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 35
    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 37
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 63
    '!'            shift, and go to state 44

    expression  go to state 150


State 148

   39 mif: IF expression ':' BEG stmt_list END ELIF expression ':' BEG stmt_list END eliftstmt .

    $default  reduce using rule 39 (mif)


State 149

   53 eliftstmt: ELSE ':' . BEG stmt_list END

    BEG  shift, and go to state 151


State 150

   54 eliftstmt: ELIF expression . ':' BEG stmt_list END eliftstmt
   55 expression: expression . '+' expression
   56           | expression . '-' expression
   57           | expression . '*' expression
   58           | expression . '/' expression
   59           | expression . '&' expression
   60           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87
    ':'  shift, and go to state 152


State 151

   53 eliftstmt: ELSE ':' BEG . stmt_list END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef       go to state 23
    fdecl      go to state 24
    stmt_list  go to state 153
    lval       go to state 26
    pc         go to state 27
    stmt       go to state 28
    loop       go to state 29
    mif        go to state 30


State 152

   54 eliftstmt: ELIF expression ':' . BEG stmt_list END eliftstmt

    BEG  shift, and go to state 154


State 153

   10 stmt_list: stmt_list . stmt
   53 eliftstmt: ELSE ':' BEG stmt_list . END

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    END            shift, and go to state 155
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef   go to state 23
    fdecl  go to state 24
    lval   go to state 26
    pc     go to state 27
    stmt   go to state 56
    loop   go to state 29
    mif    go to state 30


State 154

   54 eliftstmt: ELIF expression ':' BEG . stmt_list END eliftstmt

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef       go to state 23
    fdecl      go to state 24
    stmt_list  go to state 156
    lval       go to state 26
    pc         go to state 27
    stmt       go to state 28
    loop       go to state 29
    mif        go to state 30


State 155

   53 eliftstmt: ELSE ':' BEG stmt_list END .

    $default  reduce using rule 53 (eliftstmt)


State 156

   10 stmt_list: stmt_list . stmt
   54 eliftstmt: ELIF expression ':' BEG stmt_list . END eliftstmt

    IDENTIFIER     shift, and go to state 12
    IF             shift, and go to state 13
    STRINGLITERAL  shift, and go to state 14
    LOOP           shift, and go to state 15
    SKIP           shift, and go to state 16
    DECL           shift, and go to state 17
    DEF            shift, and go to state 1
    END            shift, and go to state 157
    VAR            shift, and go to state 18
    RETURN         shift, and go to state 19
    EXIT           shift, and go to state 20
    BREAK          shift, and go to state 21
    CONT           shift, and go to state 22

    fdef   go to state 23
    fdecl  go to state 24
    lval   go to state 26
    pc     go to state 27
    stmt   go to state 56
    loop   go to state 29
    mif    go to state 30


State 157

   54 eliftstmt: ELIF expression ':' BEG stmt_list END . eliftstmt

    ELSE  shift, and go to state 146
    ELIF  shift, and go to state 147

    eliftstmt  go to state 158


State 158

   54 eliftstmt: ELIF expression ':' BEG stmt_list END eliftstmt .

    $default  reduce using rule 54 (eliftstmt)
