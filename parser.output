Terminals unused in grammar

   TEOF
   BEG


State 71 conflicts: 1 shift/reduce


Grammar

    0 $accept: fdef $end

    1 fdef: DEF header stmt_list END

    2 fdecl: DECL header

    3 header: IDENTIFIER IS type ':' optparam
    4       | IDENTIFIER IS type
    5       | IDENTIFIER ':' optparam
    6       | IDENTIFIER

    7 optparam: idlist AS ftype
    8         | idlist AS ftype ',' optparam

    9 ftype: REF INT
   10      | REF BYTE
   11      | bp
   12      | INT
   13      | BYTE

   14 bp: INT '[' ']'
   15   | BYTE '[' ']'
   16   | INT '[' CONST ']'
   17   | BYTE '[' CONST ']'
   18   | bp '[' CONST ']'

   19 stmt_list: stmt
   20          | stmt stmt_list

   21 type: type '[' CONST ']'
   22     | type_term

   23 type_term: INT
   24          | BYTE

   25 pc: IDENTIFIER ':' param
   26   | IDENTIFIER

   27 param: expression ',' param
   28      | expression

   29 stmt: SKIP
   30     | pc
   31     | mif
   32     | fdef
   33     | loop
   34     | lval ASSIGNMENT expression
   35     | VAR idlist IS type
   36     | BREAK
   37     | BREAK ':' IDENTIFIER
   38     | CONT
   39     | CONT ':' IDENTIFIER
   40     | fdecl
   41     | EXIT
   42     | RETURN ':' expression
   43     | fcall

   44 fcall: IDENTIFIER '(' param ')'
   45      | IDENTIFIER '(' ')'

   46 idlist: IDENTIFIER
   47       | idlist IDENTIFIER

   48 loop: LOOP IDENTIFIER ':' stmt_list END
   49     | LOOP ':' stmt_list END

   50 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END
   51    | IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   52    | IF condition ':' stmt_list END

   53 condition: expression LARGER expression
   54          | expression SMALLER expression
   55          | expression LARGEREQ expression
   56          | expression SMALLEREQ expression
   57          | expression EQ expression
   58          | expression DIFF expression
   59          | TRUE
   60          | FALSE
   61          | condition AND condition
   62          | condition OR condition
   63          | NOT condition
   64          | '(' condition ')'
   65          | expression

   66 eliftstmt: ELSE ':' stmt_list END
   67          | ELIF condition ':' stmt_list END eliftstmt

   68 expression: expression '+' expression
   69           | expression '-' expression
   70           | expression '*' expression
   71           | expression '/' expression
   72           | expression '&' expression
   73           | expression '|' expression
   74           | '+' expression
   75           | '-' expression
   76           | '!' expression
   77           | lval
   78           | CONST
   79           | '(' expression ')'
   80           | fcall
   81           | CHAR_CONST

   82 lval: IDENTIFIER
   83     | STRINGLITERAL
   84     | lval '[' expression ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 76
'&' (38) 72
'(' (40) 44 45 64 79
')' (41) 44 45 64 79
'*' (42) 70
'+' (43) 68 74
',' (44) 8 27
'-' (45) 69 75
'/' (47) 71
':' (58) 3 5 25 37 39 42 48 49 50 51 52 66 67
'[' (91) 14 15 16 17 18 21 84
']' (93) 14 15 16 17 18 21 84
'|' (124) 73
error (256)
INT (258) 9 12 14 16 23
BYTE (259) 10 13 15 17 24
IF (260) 50 51 52
ELSE (261) 50 66
LOOP (262) 48 49
AS (263) 7 8
SKIP (264) 29
DECL (265) 2
DEF (266) 1
END (267) 1 48 49 50 51 52 66 67
VAR (268) 35
IS (269) 3 4 35
TEOF (270)
EQ (271) 57
DIFF (272) 58
LARGER (273) 53
SMALLER (274) 54
RETURN (275) 42
EXIT (276) 41
REF (277) 9 10
LARGEREQ (278) 55
SMALLEREQ (279) 56
ASSIGNMENT (280) 34
AND (281) 61
NOT (282) 63
OR (283) 62
ELIF (284) 51 67
TRUE (285) 59
FALSE (286) 60
BREAK (287) 36 37
CONT (288) 38 39
BEG (289)
CONST (290) 16 17 18 21 78
CHAR_CONST (291) 81
IDENTIFIER (292) 3 4 5 6 25 26 37 39 44 45 46 47 48 82
STRINGLITERAL (293) 83
UNARYPL (294)
UNARYMINUS (295)
BANG (296)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
fdef (56)
    on left: 1, on right: 0 32
fdecl (57)
    on left: 2, on right: 40
header (58)
    on left: 3 4 5 6, on right: 1 2
optparam (59)
    on left: 7 8, on right: 3 5 8
ftype (60)
    on left: 9 10 11 12 13, on right: 7 8
bp (61)
    on left: 14 15 16 17 18, on right: 11 18
stmt_list (62)
    on left: 19 20, on right: 1 20 48 49 50 51 52 66 67
type (63)
    on left: 21 22, on right: 3 4 21 35
type_term (64)
    on left: 23 24, on right: 22
pc (65)
    on left: 25 26, on right: 30
param (66)
    on left: 27 28, on right: 25 27 44
stmt (67)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43, on right:
    19 20
fcall (68)
    on left: 44 45, on right: 43 80
idlist (69)
    on left: 46 47, on right: 7 8 35 47
loop (70)
    on left: 48 49, on right: 33
mif (71)
    on left: 50 51 52, on right: 31
condition (72)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65, on right: 50 51
    52 61 62 63 64 67
eliftstmt (73)
    on left: 66 67, on right: 51 67
expression (74)
    on left: 68 69 70 71 72 73 74 75 76 77 78 79 80 81, on right: 27
    28 34 42 53 54 55 56 57 58 65 68 69 70 71 72 73 74 75 76 79 84
lval (75)
    on left: 82 83 84, on right: 34 77 84


State 0

    0 $accept: . fdef $end

    DEF  shift, and go to state 1

    fdef  go to state 2


State 1

    1 fdef: DEF . header stmt_list END

    IDENTIFIER  shift, and go to state 3

    header  go to state 4


State 2

    0 $accept: fdef . $end

    $end  shift, and go to state 5


State 3

    3 header: IDENTIFIER . IS type ':' optparam
    4       | IDENTIFIER . IS type
    5       | IDENTIFIER . ':' optparam
    6       | IDENTIFIER .

    IS   shift, and go to state 6
    ':'  shift, and go to state 7

    $default  reduce using rule 6 (header)


State 4

    1 fdef: DEF header . stmt_list END

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 21
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 5

    0 $accept: fdef $end .

    $default  accept


State 6

    3 header: IDENTIFIER IS . type ':' optparam
    4       | IDENTIFIER IS . type

    INT   shift, and go to state 28
    BYTE  shift, and go to state 29

    type       go to state 30
    type_term  go to state 31


State 7

    5 header: IDENTIFIER ':' . optparam

    IDENTIFIER  shift, and go to state 32

    optparam  go to state 33
    idlist    go to state 34


State 8

   50 mif: IF . condition ':' stmt_list END ELSE ':' stmt_list END
   51    | IF . condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   52    | IF . condition ':' stmt_list END

    NOT            shift, and go to state 35
    TRUE           shift, and go to state 36
    FALSE          shift, and go to state 37
    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    fcall       go to state 45
    condition   go to state 46
    expression  go to state 47
    lval        go to state 48


State 9

   48 loop: LOOP . IDENTIFIER ':' stmt_list END
   49     | LOOP . ':' stmt_list END

    IDENTIFIER  shift, and go to state 49
    ':'         shift, and go to state 50


State 10

   29 stmt: SKIP .

    $default  reduce using rule 29 (stmt)


State 11

    2 fdecl: DECL . header

    IDENTIFIER  shift, and go to state 3

    header  go to state 51


State 12

   35 stmt: VAR . idlist IS type

    IDENTIFIER  shift, and go to state 32

    idlist  go to state 52


State 13

   42 stmt: RETURN . ':' expression

    ':'  shift, and go to state 53


State 14

   41 stmt: EXIT .

    $default  reduce using rule 41 (stmt)


State 15

   36 stmt: BREAK .
   37     | BREAK . ':' IDENTIFIER

    ':'  shift, and go to state 54

    $default  reduce using rule 36 (stmt)


State 16

   38 stmt: CONT .
   39     | CONT . ':' IDENTIFIER

    ':'  shift, and go to state 55

    $default  reduce using rule 38 (stmt)


State 17

   25 pc: IDENTIFIER . ':' param
   26   | IDENTIFIER .
   44 fcall: IDENTIFIER . '(' param ')'
   45      | IDENTIFIER . '(' ')'
   82 lval: IDENTIFIER .

    ':'  shift, and go to state 56
    '('  shift, and go to state 57

    ASSIGNMENT  reduce using rule 82 (lval)
    '['         reduce using rule 82 (lval)
    $default    reduce using rule 26 (pc)


State 18

   83 lval: STRINGLITERAL .

    $default  reduce using rule 83 (lval)


State 19

   32 stmt: fdef .

    $default  reduce using rule 32 (stmt)


State 20

   40 stmt: fdecl .

    $default  reduce using rule 40 (stmt)


State 21

    1 fdef: DEF header stmt_list . END

    END  shift, and go to state 58


State 22

   30 stmt: pc .

    $default  reduce using rule 30 (stmt)


State 23

   19 stmt_list: stmt .
   20          | stmt . stmt_list

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    $default  reduce using rule 19 (stmt_list)

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 59
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 24

   43 stmt: fcall .

    $default  reduce using rule 43 (stmt)


State 25

   33 stmt: loop .

    $default  reduce using rule 33 (stmt)


State 26

   31 stmt: mif .

    $default  reduce using rule 31 (stmt)


State 27

   34 stmt: lval . ASSIGNMENT expression
   84 lval: lval . '[' expression ']'

    ASSIGNMENT  shift, and go to state 60
    '['         shift, and go to state 61


State 28

   23 type_term: INT .

    $default  reduce using rule 23 (type_term)


State 29

   24 type_term: BYTE .

    $default  reduce using rule 24 (type_term)


State 30

    3 header: IDENTIFIER IS type . ':' optparam
    4       | IDENTIFIER IS type .
   21 type: type . '[' CONST ']'

    ':'  shift, and go to state 62
    '['  shift, and go to state 63

    $default  reduce using rule 4 (header)


State 31

   22 type: type_term .

    $default  reduce using rule 22 (type)


State 32

   46 idlist: IDENTIFIER .

    $default  reduce using rule 46 (idlist)


State 33

    5 header: IDENTIFIER ':' optparam .

    $default  reduce using rule 5 (header)


State 34

    7 optparam: idlist . AS ftype
    8         | idlist . AS ftype ',' optparam
   47 idlist: idlist . IDENTIFIER

    AS          shift, and go to state 64
    IDENTIFIER  shift, and go to state 65


State 35

   63 condition: NOT . condition

    NOT            shift, and go to state 35
    TRUE           shift, and go to state 36
    FALSE          shift, and go to state 37
    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    fcall       go to state 45
    condition   go to state 66
    expression  go to state 47
    lval        go to state 48


State 36

   59 condition: TRUE .

    $default  reduce using rule 59 (condition)


State 37

   60 condition: FALSE .

    $default  reduce using rule 60 (condition)


State 38

   78 expression: CONST .

    $default  reduce using rule 78 (expression)


State 39

   81 expression: CHAR_CONST .

    $default  reduce using rule 81 (expression)


State 40

   44 fcall: IDENTIFIER . '(' param ')'
   45      | IDENTIFIER . '(' ')'
   82 lval: IDENTIFIER .

    '('  shift, and go to state 57

    $default  reduce using rule 82 (lval)


State 41

   74 expression: '+' . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 68
    lval        go to state 48


State 42

   75 expression: '-' . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 69
    lval        go to state 48


State 43

   64 condition: '(' . condition ')'
   79 expression: '(' . expression ')'

    NOT            shift, and go to state 35
    TRUE           shift, and go to state 36
    FALSE          shift, and go to state 37
    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    fcall       go to state 45
    condition   go to state 70
    expression  go to state 71
    lval        go to state 48


State 44

   76 expression: '!' . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 72
    lval        go to state 48


State 45

   80 expression: fcall .

    $default  reduce using rule 80 (expression)


State 46

   50 mif: IF condition . ':' stmt_list END ELSE ':' stmt_list END
   51    | IF condition . ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   52    | IF condition . ':' stmt_list END
   61 condition: condition . AND condition
   62          | condition . OR condition

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ':'  shift, and go to state 75


State 47

   53 condition: expression . LARGER expression
   54          | expression . SMALLER expression
   55          | expression . LARGEREQ expression
   56          | expression . SMALLEREQ expression
   57          | expression . EQ expression
   58          | expression . DIFF expression
   65          | expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    EQ         shift, and go to state 76
    DIFF       shift, and go to state 77
    LARGER     shift, and go to state 78
    SMALLER    shift, and go to state 79
    LARGEREQ   shift, and go to state 80
    SMALLEREQ  shift, and go to state 81
    '+'        shift, and go to state 82
    '-'        shift, and go to state 83
    '|'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '&'        shift, and go to state 87

    $default  reduce using rule 65 (condition)


State 48

   77 expression: lval .
   84 lval: lval . '[' expression ']'

    '['  shift, and go to state 61

    $default  reduce using rule 77 (expression)


State 49

   48 loop: LOOP IDENTIFIER . ':' stmt_list END

    ':'  shift, and go to state 88


State 50

   49 loop: LOOP ':' . stmt_list END

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 89
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 51

    2 fdecl: DECL header .

    $default  reduce using rule 2 (fdecl)


State 52

   35 stmt: VAR idlist . IS type
   47 idlist: idlist . IDENTIFIER

    IS          shift, and go to state 90
    IDENTIFIER  shift, and go to state 65


State 53

   42 stmt: RETURN ':' . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 91
    lval        go to state 48


State 54

   37 stmt: BREAK ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 92


State 55

   39 stmt: CONT ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 93


State 56

   25 pc: IDENTIFIER ':' . param

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    param       go to state 94
    fcall       go to state 45
    expression  go to state 95
    lval        go to state 48


State 57

   44 fcall: IDENTIFIER '(' . param ')'
   45      | IDENTIFIER '(' . ')'

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    ')'            shift, and go to state 96
    '!'            shift, and go to state 44

    param       go to state 97
    fcall       go to state 45
    expression  go to state 95
    lval        go to state 48


State 58

    1 fdef: DEF header stmt_list END .

    $default  reduce using rule 1 (fdef)


State 59

   20 stmt_list: stmt stmt_list .

    $default  reduce using rule 20 (stmt_list)


State 60

   34 stmt: lval ASSIGNMENT . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 98
    lval        go to state 48


State 61

   84 lval: lval '[' . expression ']'

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 99
    lval        go to state 48


State 62

    3 header: IDENTIFIER IS type ':' . optparam

    IDENTIFIER  shift, and go to state 32

    optparam  go to state 100
    idlist    go to state 34


State 63

   21 type: type '[' . CONST ']'

    CONST  shift, and go to state 101


State 64

    7 optparam: idlist AS . ftype
    8         | idlist AS . ftype ',' optparam

    INT   shift, and go to state 102
    BYTE  shift, and go to state 103
    REF   shift, and go to state 104

    ftype  go to state 105
    bp     go to state 106


State 65

   47 idlist: idlist IDENTIFIER .

    $default  reduce using rule 47 (idlist)


State 66

   61 condition: condition . AND condition
   62          | condition . OR condition
   63          | NOT condition .

    $default  reduce using rule 63 (condition)


State 67

   79 expression: '(' . expression ')'

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 107
    lval        go to state 48


State 68

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression
   74           | '+' expression .

    $default  reduce using rule 74 (expression)


State 69

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression
   75           | '-' expression .

    $default  reduce using rule 75 (expression)


State 70

   61 condition: condition . AND condition
   62          | condition . OR condition
   64          | '(' condition . ')'

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ')'  shift, and go to state 108


State 71

   53 condition: expression . LARGER expression
   54          | expression . SMALLER expression
   55          | expression . LARGEREQ expression
   56          | expression . SMALLEREQ expression
   57          | expression . EQ expression
   58          | expression . DIFF expression
   65          | expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression
   79           | '(' expression . ')'

    EQ         shift, and go to state 76
    DIFF       shift, and go to state 77
    LARGER     shift, and go to state 78
    SMALLER    shift, and go to state 79
    LARGEREQ   shift, and go to state 80
    SMALLEREQ  shift, and go to state 81
    '+'        shift, and go to state 82
    '-'        shift, and go to state 83
    '|'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '&'        shift, and go to state 87
    ')'        shift, and go to state 109

    ')'       [reduce using rule 65 (condition)]
    $default  reduce using rule 65 (condition)


State 72

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression
   76           | '!' expression .

    $default  reduce using rule 76 (expression)


State 73

   61 condition: condition AND . condition

    NOT            shift, and go to state 35
    TRUE           shift, and go to state 36
    FALSE          shift, and go to state 37
    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    fcall       go to state 45
    condition   go to state 110
    expression  go to state 47
    lval        go to state 48


State 74

   62 condition: condition OR . condition

    NOT            shift, and go to state 35
    TRUE           shift, and go to state 36
    FALSE          shift, and go to state 37
    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    fcall       go to state 45
    condition   go to state 111
    expression  go to state 47
    lval        go to state 48


State 75

   50 mif: IF condition ':' . stmt_list END ELSE ':' stmt_list END
   51    | IF condition ':' . stmt_list END ELIF condition ':' stmt_list END eliftstmt
   52    | IF condition ':' . stmt_list END

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 112
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 76

   57 condition: expression EQ . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 113
    lval        go to state 48


State 77

   58 condition: expression DIFF . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 114
    lval        go to state 48


State 78

   53 condition: expression LARGER . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 115
    lval        go to state 48


State 79

   54 condition: expression SMALLER . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 116
    lval        go to state 48


State 80

   55 condition: expression LARGEREQ . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 117
    lval        go to state 48


State 81

   56 condition: expression SMALLEREQ . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 118
    lval        go to state 48


State 82

   68 expression: expression '+' . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 119
    lval        go to state 48


State 83

   69 expression: expression '-' . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 120
    lval        go to state 48


State 84

   73 expression: expression '|' . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 121
    lval        go to state 48


State 85

   70 expression: expression '*' . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 122
    lval        go to state 48


State 86

   71 expression: expression '/' . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 123
    lval        go to state 48


State 87

   72 expression: expression '&' . expression

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    fcall       go to state 45
    expression  go to state 124
    lval        go to state 48


State 88

   48 loop: LOOP IDENTIFIER ':' . stmt_list END

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 125
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 89

   49 loop: LOOP ':' stmt_list . END

    END  shift, and go to state 126


State 90

   35 stmt: VAR idlist IS . type

    INT   shift, and go to state 28
    BYTE  shift, and go to state 29

    type       go to state 127
    type_term  go to state 31


State 91

   42 stmt: RETURN ':' expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 42 (stmt)


State 92

   37 stmt: BREAK ':' IDENTIFIER .

    $default  reduce using rule 37 (stmt)


State 93

   39 stmt: CONT ':' IDENTIFIER .

    $default  reduce using rule 39 (stmt)


State 94

   25 pc: IDENTIFIER ':' param .

    $default  reduce using rule 25 (pc)


State 95

   27 param: expression . ',' param
   28      | expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87
    ','  shift, and go to state 128

    $default  reduce using rule 28 (param)


State 96

   45 fcall: IDENTIFIER '(' ')' .

    $default  reduce using rule 45 (fcall)


State 97

   44 fcall: IDENTIFIER '(' param . ')'

    ')'  shift, and go to state 129


State 98

   34 stmt: lval ASSIGNMENT expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 34 (stmt)


State 99

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression
   84 lval: lval '[' expression . ']'

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87
    ']'  shift, and go to state 130


State 100

    3 header: IDENTIFIER IS type ':' optparam .

    $default  reduce using rule 3 (header)


State 101

   21 type: type '[' CONST . ']'

    ']'  shift, and go to state 131


State 102

   12 ftype: INT .
   14 bp: INT . '[' ']'
   16   | INT . '[' CONST ']'

    '['  shift, and go to state 132

    $default  reduce using rule 12 (ftype)


State 103

   13 ftype: BYTE .
   15 bp: BYTE . '[' ']'
   17   | BYTE . '[' CONST ']'

    '['  shift, and go to state 133

    $default  reduce using rule 13 (ftype)


State 104

    9 ftype: REF . INT
   10      | REF . BYTE

    INT   shift, and go to state 134
    BYTE  shift, and go to state 135


State 105

    7 optparam: idlist AS ftype .
    8         | idlist AS ftype . ',' optparam

    ','  shift, and go to state 136

    $default  reduce using rule 7 (optparam)


State 106

   11 ftype: bp .
   18 bp: bp . '[' CONST ']'

    '['  shift, and go to state 137

    $default  reduce using rule 11 (ftype)


State 107

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression
   79           | '(' expression . ')'

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87
    ')'  shift, and go to state 109


State 108

   64 condition: '(' condition ')' .

    $default  reduce using rule 64 (condition)


State 109

   79 expression: '(' expression ')' .

    $default  reduce using rule 79 (expression)


State 110

   61 condition: condition . AND condition
   61          | condition AND condition .
   62          | condition . OR condition

    $default  reduce using rule 61 (condition)


State 111

   61 condition: condition . AND condition
   62          | condition . OR condition
   62          | condition OR condition .

    AND  shift, and go to state 73

    $default  reduce using rule 62 (condition)


State 112

   50 mif: IF condition ':' stmt_list . END ELSE ':' stmt_list END
   51    | IF condition ':' stmt_list . END ELIF condition ':' stmt_list END eliftstmt
   52    | IF condition ':' stmt_list . END

    END  shift, and go to state 138


State 113

   57 condition: expression EQ expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 57 (condition)


State 114

   58 condition: expression DIFF expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 58 (condition)


State 115

   53 condition: expression LARGER expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 53 (condition)


State 116

   54 condition: expression SMALLER expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 54 (condition)


State 117

   55 condition: expression LARGEREQ expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 55 (condition)


State 118

   56 condition: expression SMALLEREQ expression .
   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 56 (condition)


State 119

   68 expression: expression . '+' expression
   68           | expression '+' expression .
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 68 (expression)


State 120

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   69           | expression '-' expression .
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 69 (expression)


State 121

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression
   73           | expression '|' expression .

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 73 (expression)


State 122

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   70           | expression '*' expression .
   71           | expression . '/' expression
   72           | expression . '&' expression
   73           | expression . '|' expression

    $default  reduce using rule 70 (expression)


State 123

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   71           | expression '/' expression .
   72           | expression . '&' expression
   73           | expression . '|' expression

    $default  reduce using rule 71 (expression)


State 124

   68 expression: expression . '+' expression
   69           | expression . '-' expression
   70           | expression . '*' expression
   71           | expression . '/' expression
   72           | expression . '&' expression
   72           | expression '&' expression .
   73           | expression . '|' expression

    $default  reduce using rule 72 (expression)


State 125

   48 loop: LOOP IDENTIFIER ':' stmt_list . END

    END  shift, and go to state 139


State 126

   49 loop: LOOP ':' stmt_list END .

    $default  reduce using rule 49 (loop)


State 127

   21 type: type . '[' CONST ']'
   35 stmt: VAR idlist IS type .

    '['  shift, and go to state 63

    $default  reduce using rule 35 (stmt)


State 128

   27 param: expression ',' . param

    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 67
    '!'            shift, and go to state 44

    param       go to state 140
    fcall       go to state 45
    expression  go to state 95
    lval        go to state 48


State 129

   44 fcall: IDENTIFIER '(' param ')' .

    $default  reduce using rule 44 (fcall)


State 130

   84 lval: lval '[' expression ']' .

    $default  reduce using rule 84 (lval)


State 131

   21 type: type '[' CONST ']' .

    $default  reduce using rule 21 (type)


State 132

   14 bp: INT '[' . ']'
   16   | INT '[' . CONST ']'

    CONST  shift, and go to state 141
    ']'    shift, and go to state 142


State 133

   15 bp: BYTE '[' . ']'
   17   | BYTE '[' . CONST ']'

    CONST  shift, and go to state 143
    ']'    shift, and go to state 144


State 134

    9 ftype: REF INT .

    $default  reduce using rule 9 (ftype)


State 135

   10 ftype: REF BYTE .

    $default  reduce using rule 10 (ftype)


State 136

    8 optparam: idlist AS ftype ',' . optparam

    IDENTIFIER  shift, and go to state 32

    optparam  go to state 145
    idlist    go to state 34


State 137

   18 bp: bp '[' . CONST ']'

    CONST  shift, and go to state 146


State 138

   50 mif: IF condition ':' stmt_list END . ELSE ':' stmt_list END
   51    | IF condition ':' stmt_list END . ELIF condition ':' stmt_list END eliftstmt
   52    | IF condition ':' stmt_list END .

    ELSE  shift, and go to state 147
    ELIF  shift, and go to state 148

    $default  reduce using rule 52 (mif)


State 139

   48 loop: LOOP IDENTIFIER ':' stmt_list END .

    $default  reduce using rule 48 (loop)


State 140

   27 param: expression ',' param .

    $default  reduce using rule 27 (param)


State 141

   16 bp: INT '[' CONST . ']'

    ']'  shift, and go to state 149


State 142

   14 bp: INT '[' ']' .

    $default  reduce using rule 14 (bp)


State 143

   17 bp: BYTE '[' CONST . ']'

    ']'  shift, and go to state 150


State 144

   15 bp: BYTE '[' ']' .

    $default  reduce using rule 15 (bp)


State 145

    8 optparam: idlist AS ftype ',' optparam .

    $default  reduce using rule 8 (optparam)


State 146

   18 bp: bp '[' CONST . ']'

    ']'  shift, and go to state 151


State 147

   50 mif: IF condition ':' stmt_list END ELSE . ':' stmt_list END

    ':'  shift, and go to state 152


State 148

   51 mif: IF condition ':' stmt_list END ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 35
    TRUE           shift, and go to state 36
    FALSE          shift, and go to state 37
    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    fcall       go to state 45
    condition   go to state 153
    expression  go to state 47
    lval        go to state 48


State 149

   16 bp: INT '[' CONST ']' .

    $default  reduce using rule 16 (bp)


State 150

   17 bp: BYTE '[' CONST ']' .

    $default  reduce using rule 17 (bp)


State 151

   18 bp: bp '[' CONST ']' .

    $default  reduce using rule 18 (bp)


State 152

   50 mif: IF condition ':' stmt_list END ELSE ':' . stmt_list END

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 154
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 153

   51 mif: IF condition ':' stmt_list END ELIF condition . ':' stmt_list END eliftstmt
   61 condition: condition . AND condition
   62          | condition . OR condition

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ':'  shift, and go to state 155


State 154

   50 mif: IF condition ':' stmt_list END ELSE ':' stmt_list . END

    END  shift, and go to state 156


State 155

   51 mif: IF condition ':' stmt_list END ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 157
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 156

   50 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END .

    $default  reduce using rule 50 (mif)


State 157

   51 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list . END eliftstmt

    END  shift, and go to state 158


State 158

   51 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 159
    ELIF  shift, and go to state 160

    eliftstmt  go to state 161


State 159

   66 eliftstmt: ELSE . ':' stmt_list END

    ':'  shift, and go to state 162


State 160

   67 eliftstmt: ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 35
    TRUE           shift, and go to state 36
    FALSE          shift, and go to state 37
    CONST          shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    IDENTIFIER     shift, and go to state 40
    STRINGLITERAL  shift, and go to state 18
    '+'            shift, and go to state 41
    '-'            shift, and go to state 42
    '('            shift, and go to state 43
    '!'            shift, and go to state 44

    fcall       go to state 45
    condition   go to state 163
    expression  go to state 47
    lval        go to state 48


State 161

   51 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 51 (mif)


State 162

   66 eliftstmt: ELSE ':' . stmt_list END

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 164
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 163

   61 condition: condition . AND condition
   62          | condition . OR condition
   67 eliftstmt: ELIF condition . ':' stmt_list END eliftstmt

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ':'  shift, and go to state 165


State 164

   66 eliftstmt: ELSE ':' stmt_list . END

    END  shift, and go to state 166


State 165

   67 eliftstmt: ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 8
    LOOP           shift, and go to state 9
    SKIP           shift, and go to state 10
    DECL           shift, and go to state 11
    DEF            shift, and go to state 1
    VAR            shift, and go to state 12
    RETURN         shift, and go to state 13
    EXIT           shift, and go to state 14
    BREAK          shift, and go to state 15
    CONT           shift, and go to state 16
    IDENTIFIER     shift, and go to state 17
    STRINGLITERAL  shift, and go to state 18

    fdef       go to state 19
    fdecl      go to state 20
    stmt_list  go to state 167
    pc         go to state 22
    stmt       go to state 23
    fcall      go to state 24
    loop       go to state 25
    mif        go to state 26
    lval       go to state 27


State 166

   66 eliftstmt: ELSE ':' stmt_list END .

    $default  reduce using rule 66 (eliftstmt)


State 167

   67 eliftstmt: ELIF condition ':' stmt_list . END eliftstmt

    END  shift, and go to state 168


State 168

   67 eliftstmt: ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 159
    ELIF  shift, and go to state 160

    eliftstmt  go to state 169


State 169

   67 eliftstmt: ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 67 (eliftstmt)
