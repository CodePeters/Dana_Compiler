Terminals unused in grammar

   TEOF
   BEG


State 84 conflicts: 1 shift/reduce


Grammar

    0 $accept: mainfunc $end

    1 mainfunc: fdef

    2 $@1: %empty

    3 fdef: DEF header $@1 decl_list END

    4 fdecl: DECL header

    5 header: IDENTIFIER IS type ':' optparam
    6       | IDENTIFIER IS type
    7       | IDENTIFIER ':' optparam
    8       | IDENTIFIER

    9 optparam: idlist AS ftype
   10         | idlist AS reftype
   11         | idlist AS ftype ',' optparam
   12         | idlist AS reftype ',' optparam

   13 ftype: bp
   14      | INT
   15      | BYTE

   16 reftype: REF INT
   17        | REF BYTE

   18 bp: INT '[' ']'
   19   | BYTE '[' ']'
   20   | INT '[' CONST ']'
   21   | BYTE '[' CONST ']'
   22   | bp '[' CONST ']'

   23 stmt_list: stmt
   24          | stmt stmt_list

   25 decl_list: stmt_list
   26          | decl decl_list

   27 decl: fdef
   28     | fdecl
   29     | VAR idlist IS type

   30 type: type '[' CONST ']'
   31     | type_term

   32 type_term: INT
   33          | BYTE

   34 pc: IDENTIFIER ':' param
   35   | IDENTIFIER

   36 param: expression ',' param
   37      | expression

   38 stmt: SKIP
   39     | mif
   40     | loop
   41     | lval ASSIGNMENT expression
   42     | BREAK
   43     | BREAK ':' IDENTIFIER
   44     | CONT
   45     | CONT ':' IDENTIFIER
   46     | EXIT
   47     | RETURN ':' expression
   48     | pc
   49     | fcall

   50 fcall: IDENTIFIER '(' param ')'
   51      | IDENTIFIER '(' ')'

   52 idlist: IDENTIFIER
   53       | idlist IDENTIFIER

   54 loop: LOOP IDENTIFIER ':' stmt_list END
   55     | LOOP ':' stmt_list END

   56 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END
   57    | IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   58    | IF condition ':' stmt_list END

   59 condition: expression LARGER expression
   60          | expression SMALLER expression
   61          | expression LARGEREQ expression
   62          | expression SMALLEREQ expression
   63          | expression EQ expression
   64          | expression DIFF expression
   65          | TRUE
   66          | FALSE
   67          | condition AND condition
   68          | condition OR condition
   69          | NOT condition
   70          | '(' condition ')'
   71          | expression

   72 eliftstmt: ELSE ':' stmt_list END
   73          | %empty
   74          | ELIF condition ':' stmt_list END eliftstmt

   75 expression: expression '+' expression
   76           | expression '-' expression
   77           | expression '*' expression
   78           | expression '/' expression
   79           | expression '%' expression
   80           | expression '&' expression
   81           | expression '|' expression
   82           | '+' expression
   83           | '-' expression
   84           | '!' expression
   85           | lval
   86           | CONST
   87           | '(' expression ')'
   88           | fcall
   89           | CHAR_CONST

   90 lval: IDENTIFIER
   91     | STRINGLITERAL
   92     | lval '[' expression ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 84
'%' (37) 79
'&' (38) 80
'(' (40) 50 51 70 87
')' (41) 50 51 70 87
'*' (42) 77
'+' (43) 75 82
',' (44) 11 12 36
'-' (45) 76 83
'/' (47) 78
':' (58) 5 7 34 43 45 47 54 55 56 57 58 72 74
'[' (91) 18 19 20 21 22 30 92
']' (93) 18 19 20 21 22 30 92
'|' (124) 81
error (256)
INT (258) 14 16 18 20 32
BYTE (259) 15 17 19 21 33
IF (260) 56 57 58
ELSE (261) 56 72
LOOP (262) 54 55
AS (263) 9 10 11 12
SKIP (264) 38
DECL (265) 4
DEF (266) 3
END (267) 3 54 55 56 57 58 72 74
VAR (268) 29
IS (269) 5 6 29
TEOF (270)
EQ (271) 63
DIFF (272) 64
LARGER (273) 59
SMALLER (274) 60
RETURN (275) 47
EXIT (276) 46
REF (277) 16 17
LARGEREQ (278) 61
SMALLEREQ (279) 62
ASSIGNMENT (280) 41
AND (281) 67
NOT (282) 69
OR (283) 68
ELIF (284) 57 74
TRUE (285) 65
FALSE (286) 66
BREAK (287) 42 43
CONT (288) 44 45
BEG (289)
CONST (290) 20 21 22 30 86
CHAR_CONST (291) 89
IDENTIFIER (292) 5 6 7 8 34 35 43 45 50 51 52 53 54 90
STRINGLITERAL (293) 91
UNARYPL (294)
UNARYMINUS (295)
BANG (296)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
mainfunc (57)
    on left: 1, on right: 0
fdef (58)
    on left: 3, on right: 1 27
$@1 (59)
    on left: 2, on right: 3
fdecl (60)
    on left: 4, on right: 28
header (61)
    on left: 5 6 7 8, on right: 3 4
optparam (62)
    on left: 9 10 11 12, on right: 5 7 11 12
ftype (63)
    on left: 13 14 15, on right: 9 11
reftype (64)
    on left: 16 17, on right: 10 12
bp (65)
    on left: 18 19 20 21 22, on right: 13 22
stmt_list (66)
    on left: 23 24, on right: 24 25 54 55 56 57 58 72 74
decl_list (67)
    on left: 25 26, on right: 3 26
decl (68)
    on left: 27 28 29, on right: 26
type (69)
    on left: 30 31, on right: 5 6 29 30
type_term (70)
    on left: 32 33, on right: 31
pc (71)
    on left: 34 35, on right: 48
param (72)
    on left: 36 37, on right: 34 36 50
stmt (73)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49, on right: 23 24
fcall (74)
    on left: 50 51, on right: 49 88
idlist (75)
    on left: 52 53, on right: 9 10 11 12 29 53
loop (76)
    on left: 54 55, on right: 40
mif (77)
    on left: 56 57 58, on right: 39
condition (78)
    on left: 59 60 61 62 63 64 65 66 67 68 69 70 71, on right: 56 57
    58 67 68 69 70 74
eliftstmt (79)
    on left: 72 73 74, on right: 57 74
expression (80)
    on left: 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89, on right:
    36 37 41 47 59 60 61 62 63 64 71 75 76 77 78 79 80 81 82 83 84
    87 92
lval (81)
    on left: 90 91 92, on right: 41 85 92


State 0

    0 $accept: . mainfunc $end

    DEF  shift, and go to state 1

    mainfunc  go to state 2
    fdef      go to state 3


State 1

    3 fdef: DEF . header $@1 decl_list END

    IDENTIFIER  shift, and go to state 4

    header  go to state 5


State 2

    0 $accept: mainfunc . $end

    $end  shift, and go to state 6


State 3

    1 mainfunc: fdef .

    $default  reduce using rule 1 (mainfunc)


State 4

    5 header: IDENTIFIER . IS type ':' optparam
    6       | IDENTIFIER . IS type
    7       | IDENTIFIER . ':' optparam
    8       | IDENTIFIER .

    IS   shift, and go to state 7
    ':'  shift, and go to state 8

    $default  reduce using rule 8 (header)


State 5

    3 fdef: DEF header . $@1 decl_list END

    $default  reduce using rule 2 ($@1)

    $@1  go to state 9


State 6

    0 $accept: mainfunc $end .

    $default  accept


State 7

    5 header: IDENTIFIER IS . type ':' optparam
    6       | IDENTIFIER IS . type

    INT   shift, and go to state 10
    BYTE  shift, and go to state 11

    type       go to state 12
    type_term  go to state 13


State 8

    7 header: IDENTIFIER ':' . optparam

    IDENTIFIER  shift, and go to state 14

    optparam  go to state 15
    idlist    go to state 16


State 9

    3 fdef: DEF header $@1 . decl_list END

    IF             shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    STRINGLITERAL  shift, and go to state 27

    fdef       go to state 28
    fdecl      go to state 29
    stmt_list  go to state 30
    decl_list  go to state 31
    decl       go to state 32
    pc         go to state 33
    stmt       go to state 34
    fcall      go to state 35
    loop       go to state 36
    mif        go to state 37
    lval       go to state 38


State 10

   32 type_term: INT .

    $default  reduce using rule 32 (type_term)


State 11

   33 type_term: BYTE .

    $default  reduce using rule 33 (type_term)


State 12

    5 header: IDENTIFIER IS type . ':' optparam
    6       | IDENTIFIER IS type .
   30 type: type . '[' CONST ']'

    ':'  shift, and go to state 39
    '['  shift, and go to state 40

    $default  reduce using rule 6 (header)


State 13

   31 type: type_term .

    $default  reduce using rule 31 (type)


State 14

   52 idlist: IDENTIFIER .

    $default  reduce using rule 52 (idlist)


State 15

    7 header: IDENTIFIER ':' optparam .

    $default  reduce using rule 7 (header)


State 16

    9 optparam: idlist . AS ftype
   10         | idlist . AS reftype
   11         | idlist . AS ftype ',' optparam
   12         | idlist . AS reftype ',' optparam
   53 idlist: idlist . IDENTIFIER

    AS          shift, and go to state 41
    IDENTIFIER  shift, and go to state 42


State 17

   56 mif: IF . condition ':' stmt_list END ELSE ':' stmt_list END
   57    | IF . condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   58    | IF . condition ':' stmt_list END

    NOT            shift, and go to state 43
    TRUE           shift, and go to state 44
    FALSE          shift, and go to state 45
    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    '!'            shift, and go to state 52

    fcall       go to state 53
    condition   go to state 54
    expression  go to state 55
    lval        go to state 56


State 18

   54 loop: LOOP . IDENTIFIER ':' stmt_list END
   55     | LOOP . ':' stmt_list END

    IDENTIFIER  shift, and go to state 57
    ':'         shift, and go to state 58


State 19

   38 stmt: SKIP .

    $default  reduce using rule 38 (stmt)


State 20

    4 fdecl: DECL . header

    IDENTIFIER  shift, and go to state 4

    header  go to state 59


State 21

   29 decl: VAR . idlist IS type

    IDENTIFIER  shift, and go to state 14

    idlist  go to state 60


State 22

   47 stmt: RETURN . ':' expression

    ':'  shift, and go to state 61


State 23

   46 stmt: EXIT .

    $default  reduce using rule 46 (stmt)


State 24

   42 stmt: BREAK .
   43     | BREAK . ':' IDENTIFIER

    ':'  shift, and go to state 62

    $default  reduce using rule 42 (stmt)


State 25

   44 stmt: CONT .
   45     | CONT . ':' IDENTIFIER

    ':'  shift, and go to state 63

    $default  reduce using rule 44 (stmt)


State 26

   34 pc: IDENTIFIER . ':' param
   35   | IDENTIFIER .
   50 fcall: IDENTIFIER . '(' param ')'
   51      | IDENTIFIER . '(' ')'
   90 lval: IDENTIFIER .

    ':'  shift, and go to state 64
    '('  shift, and go to state 65

    ASSIGNMENT  reduce using rule 90 (lval)
    '['         reduce using rule 90 (lval)
    $default    reduce using rule 35 (pc)


State 27

   91 lval: STRINGLITERAL .

    $default  reduce using rule 91 (lval)


State 28

   27 decl: fdef .

    $default  reduce using rule 27 (decl)


State 29

   28 decl: fdecl .

    $default  reduce using rule 28 (decl)


State 30

   25 decl_list: stmt_list .

    $default  reduce using rule 25 (decl_list)


State 31

    3 fdef: DEF header $@1 decl_list . END

    END  shift, and go to state 66


State 32

   26 decl_list: decl . decl_list

    IF             shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    DECL           shift, and go to state 20
    DEF            shift, and go to state 1
    VAR            shift, and go to state 21
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    STRINGLITERAL  shift, and go to state 27

    fdef       go to state 28
    fdecl      go to state 29
    stmt_list  go to state 30
    decl_list  go to state 67
    decl       go to state 32
    pc         go to state 33
    stmt       go to state 34
    fcall      go to state 35
    loop       go to state 36
    mif        go to state 37
    lval       go to state 38


State 33

   48 stmt: pc .

    $default  reduce using rule 48 (stmt)


State 34

   23 stmt_list: stmt .
   24          | stmt . stmt_list

    IF             shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    STRINGLITERAL  shift, and go to state 27

    $default  reduce using rule 23 (stmt_list)

    stmt_list  go to state 68
    pc         go to state 33
    stmt       go to state 34
    fcall      go to state 35
    loop       go to state 36
    mif        go to state 37
    lval       go to state 38


State 35

   49 stmt: fcall .

    $default  reduce using rule 49 (stmt)


State 36

   40 stmt: loop .

    $default  reduce using rule 40 (stmt)


State 37

   39 stmt: mif .

    $default  reduce using rule 39 (stmt)


State 38

   41 stmt: lval . ASSIGNMENT expression
   92 lval: lval . '[' expression ']'

    ASSIGNMENT  shift, and go to state 69
    '['         shift, and go to state 70


State 39

    5 header: IDENTIFIER IS type ':' . optparam

    IDENTIFIER  shift, and go to state 14

    optparam  go to state 71
    idlist    go to state 16


State 40

   30 type: type '[' . CONST ']'

    CONST  shift, and go to state 72


State 41

    9 optparam: idlist AS . ftype
   10         | idlist AS . reftype
   11         | idlist AS . ftype ',' optparam
   12         | idlist AS . reftype ',' optparam

    INT   shift, and go to state 73
    BYTE  shift, and go to state 74
    REF   shift, and go to state 75

    ftype    go to state 76
    reftype  go to state 77
    bp       go to state 78


State 42

   53 idlist: idlist IDENTIFIER .

    $default  reduce using rule 53 (idlist)


State 43

   69 condition: NOT . condition

    NOT            shift, and go to state 43
    TRUE           shift, and go to state 44
    FALSE          shift, and go to state 45
    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    '!'            shift, and go to state 52

    fcall       go to state 53
    condition   go to state 79
    expression  go to state 55
    lval        go to state 56


State 44

   65 condition: TRUE .

    $default  reduce using rule 65 (condition)


State 45

   66 condition: FALSE .

    $default  reduce using rule 66 (condition)


State 46

   86 expression: CONST .

    $default  reduce using rule 86 (expression)


State 47

   89 expression: CHAR_CONST .

    $default  reduce using rule 89 (expression)


State 48

   50 fcall: IDENTIFIER . '(' param ')'
   51      | IDENTIFIER . '(' ')'
   90 lval: IDENTIFIER .

    '('  shift, and go to state 65

    $default  reduce using rule 90 (lval)


State 49

   82 expression: '+' . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 81
    lval        go to state 56


State 50

   83 expression: '-' . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 82
    lval        go to state 56


State 51

   70 condition: '(' . condition ')'
   87 expression: '(' . expression ')'

    NOT            shift, and go to state 43
    TRUE           shift, and go to state 44
    FALSE          shift, and go to state 45
    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    '!'            shift, and go to state 52

    fcall       go to state 53
    condition   go to state 83
    expression  go to state 84
    lval        go to state 56


State 52

   84 expression: '!' . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 85
    lval        go to state 56


State 53

   88 expression: fcall .

    $default  reduce using rule 88 (expression)


State 54

   56 mif: IF condition . ':' stmt_list END ELSE ':' stmt_list END
   57    | IF condition . ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   58    | IF condition . ':' stmt_list END
   67 condition: condition . AND condition
   68          | condition . OR condition

    AND  shift, and go to state 86
    OR   shift, and go to state 87
    ':'  shift, and go to state 88


State 55

   59 condition: expression . LARGER expression
   60          | expression . SMALLER expression
   61          | expression . LARGEREQ expression
   62          | expression . SMALLEREQ expression
   63          | expression . EQ expression
   64          | expression . DIFF expression
   71          | expression .
   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression

    EQ         shift, and go to state 89
    DIFF       shift, and go to state 90
    LARGER     shift, and go to state 91
    SMALLER    shift, and go to state 92
    LARGEREQ   shift, and go to state 93
    SMALLEREQ  shift, and go to state 94
    '+'        shift, and go to state 95
    '-'        shift, and go to state 96
    '|'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '&'        shift, and go to state 100
    '%'        shift, and go to state 101

    $default  reduce using rule 71 (condition)


State 56

   85 expression: lval .
   92 lval: lval . '[' expression ']'

    '['  shift, and go to state 70

    $default  reduce using rule 85 (expression)


State 57

   54 loop: LOOP IDENTIFIER . ':' stmt_list END

    ':'  shift, and go to state 102


State 58

   55 loop: LOOP ':' . stmt_list END

    IF             shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    STRINGLITERAL  shift, and go to state 27

    stmt_list  go to state 103
    pc         go to state 33
    stmt       go to state 34
    fcall      go to state 35
    loop       go to state 36
    mif        go to state 37
    lval       go to state 38


State 59

    4 fdecl: DECL header .

    $default  reduce using rule 4 (fdecl)


State 60

   29 decl: VAR idlist . IS type
   53 idlist: idlist . IDENTIFIER

    IS          shift, and go to state 104
    IDENTIFIER  shift, and go to state 42


State 61

   47 stmt: RETURN ':' . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 105
    lval        go to state 56


State 62

   43 stmt: BREAK ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 106


State 63

   45 stmt: CONT ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 107


State 64

   34 pc: IDENTIFIER ':' . param

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    param       go to state 108
    fcall       go to state 53
    expression  go to state 109
    lval        go to state 56


State 65

   50 fcall: IDENTIFIER '(' . param ')'
   51      | IDENTIFIER '(' . ')'

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    ')'            shift, and go to state 110
    '!'            shift, and go to state 52

    param       go to state 111
    fcall       go to state 53
    expression  go to state 109
    lval        go to state 56


State 66

    3 fdef: DEF header $@1 decl_list END .

    $default  reduce using rule 3 (fdef)


State 67

   26 decl_list: decl decl_list .

    $default  reduce using rule 26 (decl_list)


State 68

   24 stmt_list: stmt stmt_list .

    $default  reduce using rule 24 (stmt_list)


State 69

   41 stmt: lval ASSIGNMENT . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 112
    lval        go to state 56


State 70

   92 lval: lval '[' . expression ']'

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 113
    lval        go to state 56


State 71

    5 header: IDENTIFIER IS type ':' optparam .

    $default  reduce using rule 5 (header)


State 72

   30 type: type '[' CONST . ']'

    ']'  shift, and go to state 114


State 73

   14 ftype: INT .
   18 bp: INT . '[' ']'
   20   | INT . '[' CONST ']'

    '['  shift, and go to state 115

    $default  reduce using rule 14 (ftype)


State 74

   15 ftype: BYTE .
   19 bp: BYTE . '[' ']'
   21   | BYTE . '[' CONST ']'

    '['  shift, and go to state 116

    $default  reduce using rule 15 (ftype)


State 75

   16 reftype: REF . INT
   17        | REF . BYTE

    INT   shift, and go to state 117
    BYTE  shift, and go to state 118


State 76

    9 optparam: idlist AS ftype .
   11         | idlist AS ftype . ',' optparam

    ','  shift, and go to state 119

    $default  reduce using rule 9 (optparam)


State 77

   10 optparam: idlist AS reftype .
   12         | idlist AS reftype . ',' optparam

    ','  shift, and go to state 120

    $default  reduce using rule 10 (optparam)


State 78

   13 ftype: bp .
   22 bp: bp . '[' CONST ']'

    '['  shift, and go to state 121

    $default  reduce using rule 13 (ftype)


State 79

   67 condition: condition . AND condition
   68          | condition . OR condition
   69          | NOT condition .

    $default  reduce using rule 69 (condition)


State 80

   87 expression: '(' . expression ')'

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 122
    lval        go to state 56


State 81

   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression
   82           | '+' expression .

    $default  reduce using rule 82 (expression)


State 82

   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression
   83           | '-' expression .

    $default  reduce using rule 83 (expression)


State 83

   67 condition: condition . AND condition
   68          | condition . OR condition
   70          | '(' condition . ')'

    AND  shift, and go to state 86
    OR   shift, and go to state 87
    ')'  shift, and go to state 123


State 84

   59 condition: expression . LARGER expression
   60          | expression . SMALLER expression
   61          | expression . LARGEREQ expression
   62          | expression . SMALLEREQ expression
   63          | expression . EQ expression
   64          | expression . DIFF expression
   71          | expression .
   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression
   87           | '(' expression . ')'

    EQ         shift, and go to state 89
    DIFF       shift, and go to state 90
    LARGER     shift, and go to state 91
    SMALLER    shift, and go to state 92
    LARGEREQ   shift, and go to state 93
    SMALLEREQ  shift, and go to state 94
    '+'        shift, and go to state 95
    '-'        shift, and go to state 96
    '|'        shift, and go to state 97
    '*'        shift, and go to state 98
    '/'        shift, and go to state 99
    '&'        shift, and go to state 100
    '%'        shift, and go to state 101
    ')'        shift, and go to state 124

    ')'       [reduce using rule 71 (condition)]
    $default  reduce using rule 71 (condition)


State 85

   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression
   84           | '!' expression .

    $default  reduce using rule 84 (expression)


State 86

   67 condition: condition AND . condition

    NOT            shift, and go to state 43
    TRUE           shift, and go to state 44
    FALSE          shift, and go to state 45
    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    '!'            shift, and go to state 52

    fcall       go to state 53
    condition   go to state 125
    expression  go to state 55
    lval        go to state 56


State 87

   68 condition: condition OR . condition

    NOT            shift, and go to state 43
    TRUE           shift, and go to state 44
    FALSE          shift, and go to state 45
    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    '!'            shift, and go to state 52

    fcall       go to state 53
    condition   go to state 126
    expression  go to state 55
    lval        go to state 56


State 88

   56 mif: IF condition ':' . stmt_list END ELSE ':' stmt_list END
   57    | IF condition ':' . stmt_list END ELIF condition ':' stmt_list END eliftstmt
   58    | IF condition ':' . stmt_list END

    IF             shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    STRINGLITERAL  shift, and go to state 27

    stmt_list  go to state 127
    pc         go to state 33
    stmt       go to state 34
    fcall      go to state 35
    loop       go to state 36
    mif        go to state 37
    lval       go to state 38


State 89

   63 condition: expression EQ . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 128
    lval        go to state 56


State 90

   64 condition: expression DIFF . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 129
    lval        go to state 56


State 91

   59 condition: expression LARGER . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 130
    lval        go to state 56


State 92

   60 condition: expression SMALLER . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 131
    lval        go to state 56


State 93

   61 condition: expression LARGEREQ . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 132
    lval        go to state 56


State 94

   62 condition: expression SMALLEREQ . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 133
    lval        go to state 56


State 95

   75 expression: expression '+' . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 134
    lval        go to state 56


State 96

   76 expression: expression '-' . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 135
    lval        go to state 56


State 97

   81 expression: expression '|' . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 136
    lval        go to state 56


State 98

   77 expression: expression '*' . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 137
    lval        go to state 56


State 99

   78 expression: expression '/' . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 138
    lval        go to state 56


State 100

   80 expression: expression '&' . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 139
    lval        go to state 56


State 101

   79 expression: expression '%' . expression

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    fcall       go to state 53
    expression  go to state 140
    lval        go to state 56


State 102

   54 loop: LOOP IDENTIFIER ':' . stmt_list END

    IF             shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    STRINGLITERAL  shift, and go to state 27

    stmt_list  go to state 141
    pc         go to state 33
    stmt       go to state 34
    fcall      go to state 35
    loop       go to state 36
    mif        go to state 37
    lval       go to state 38


State 103

   55 loop: LOOP ':' stmt_list . END

    END  shift, and go to state 142


State 104

   29 decl: VAR idlist IS . type

    INT   shift, and go to state 10
    BYTE  shift, and go to state 11

    type       go to state 143
    type_term  go to state 13


State 105

   47 stmt: RETURN ':' expression .
   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '|'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '&'  shift, and go to state 100
    '%'  shift, and go to state 101

    $default  reduce using rule 47 (stmt)


State 106

   43 stmt: BREAK ':' IDENTIFIER .

    $default  reduce using rule 43 (stmt)


State 107

   45 stmt: CONT ':' IDENTIFIER .

    $default  reduce using rule 45 (stmt)


State 108

   34 pc: IDENTIFIER ':' param .

    $default  reduce using rule 34 (pc)


State 109

   36 param: expression . ',' param
   37      | expression .
   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '|'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '&'  shift, and go to state 100
    '%'  shift, and go to state 101
    ','  shift, and go to state 144

    $default  reduce using rule 37 (param)


State 110

   51 fcall: IDENTIFIER '(' ')' .

    $default  reduce using rule 51 (fcall)


State 111

   50 fcall: IDENTIFIER '(' param . ')'

    ')'  shift, and go to state 145


State 112

   41 stmt: lval ASSIGNMENT expression .
   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '|'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '&'  shift, and go to state 100
    '%'  shift, and go to state 101

    $default  reduce using rule 41 (stmt)


State 113

   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression
   92 lval: lval '[' expression . ']'

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '|'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '&'  shift, and go to state 100
    '%'  shift, and go to state 101
    ']'  shift, and go to state 146


State 114

   30 type: type '[' CONST ']' .

    $default  reduce using rule 30 (type)


State 115

   18 bp: INT '[' . ']'
   20   | INT '[' . CONST ']'

    CONST  shift, and go to state 147
    ']'    shift, and go to state 148


State 116

   19 bp: BYTE '[' . ']'
   21   | BYTE '[' . CONST ']'

    CONST  shift, and go to state 149
    ']'    shift, and go to state 150


State 117

   16 reftype: REF INT .

    $default  reduce using rule 16 (reftype)


State 118

   17 reftype: REF BYTE .

    $default  reduce using rule 17 (reftype)


State 119

   11 optparam: idlist AS ftype ',' . optparam

    IDENTIFIER  shift, and go to state 14

    optparam  go to state 151
    idlist    go to state 16


State 120

   12 optparam: idlist AS reftype ',' . optparam

    IDENTIFIER  shift, and go to state 14

    optparam  go to state 152
    idlist    go to state 16


State 121

   22 bp: bp '[' . CONST ']'

    CONST  shift, and go to state 153


State 122

   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression
   87           | '(' expression . ')'

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '|'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '&'  shift, and go to state 100
    '%'  shift, and go to state 101
    ')'  shift, and go to state 124


State 123

   70 condition: '(' condition ')' .

    $default  reduce using rule 70 (condition)


State 124

   87 expression: '(' expression ')' .

    $default  reduce using rule 87 (expression)


State 125

   67 condition: condition . AND condition
   67          | condition AND condition .
   68          | condition . OR condition

    $default  reduce using rule 67 (condition)


State 126

   67 condition: condition . AND condition
   68          | condition . OR condition
   68          | condition OR condition .

    AND  shift, and go to state 86

    $default  reduce using rule 68 (condition)


State 127

   56 mif: IF condition ':' stmt_list . END ELSE ':' stmt_list END
   57    | IF condition ':' stmt_list . END ELIF condition ':' stmt_list END eliftstmt
   58    | IF condition ':' stmt_list . END

    END  shift, and go to state 154


State 128

   63 condition: expression EQ expression .
   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '|'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '&'  shift, and go to state 100
    '%'  shift, and go to state 101

    $default  reduce using rule 63 (condition)


State 129

   64 condition: expression DIFF expression .
   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '|'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '&'  shift, and go to state 100
    '%'  shift, and go to state 101

    $default  reduce using rule 64 (condition)


State 130

   59 condition: expression LARGER expression .
   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '|'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '&'  shift, and go to state 100
    '%'  shift, and go to state 101

    $default  reduce using rule 59 (condition)


State 131

   60 condition: expression SMALLER expression .
   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '|'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '&'  shift, and go to state 100
    '%'  shift, and go to state 101

    $default  reduce using rule 60 (condition)


State 132

   61 condition: expression LARGEREQ expression .
   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '|'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '&'  shift, and go to state 100
    '%'  shift, and go to state 101

    $default  reduce using rule 61 (condition)


State 133

   62 condition: expression SMALLEREQ expression .
   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression

    '+'  shift, and go to state 95
    '-'  shift, and go to state 96
    '|'  shift, and go to state 97
    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '&'  shift, and go to state 100
    '%'  shift, and go to state 101

    $default  reduce using rule 62 (condition)


State 134

   75 expression: expression . '+' expression
   75           | expression '+' expression .
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '&'  shift, and go to state 100
    '%'  shift, and go to state 101

    $default  reduce using rule 75 (expression)


State 135

   75 expression: expression . '+' expression
   76           | expression . '-' expression
   76           | expression '-' expression .
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '&'  shift, and go to state 100
    '%'  shift, and go to state 101

    $default  reduce using rule 76 (expression)


State 136

   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression
   81           | expression '|' expression .

    '*'  shift, and go to state 98
    '/'  shift, and go to state 99
    '&'  shift, and go to state 100
    '%'  shift, and go to state 101

    $default  reduce using rule 81 (expression)


State 137

   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   77           | expression '*' expression .
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression

    $default  reduce using rule 77 (expression)


State 138

   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   78           | expression '/' expression .
   79           | expression . '%' expression
   80           | expression . '&' expression
   81           | expression . '|' expression

    $default  reduce using rule 78 (expression)


State 139

   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   80           | expression . '&' expression
   80           | expression '&' expression .
   81           | expression . '|' expression

    $default  reduce using rule 80 (expression)


State 140

   75 expression: expression . '+' expression
   76           | expression . '-' expression
   77           | expression . '*' expression
   78           | expression . '/' expression
   79           | expression . '%' expression
   79           | expression '%' expression .
   80           | expression . '&' expression
   81           | expression . '|' expression

    $default  reduce using rule 79 (expression)


State 141

   54 loop: LOOP IDENTIFIER ':' stmt_list . END

    END  shift, and go to state 155


State 142

   55 loop: LOOP ':' stmt_list END .

    $default  reduce using rule 55 (loop)


State 143

   29 decl: VAR idlist IS type .
   30 type: type . '[' CONST ']'

    '['  shift, and go to state 40

    $default  reduce using rule 29 (decl)


State 144

   36 param: expression ',' . param

    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 80
    '!'            shift, and go to state 52

    param       go to state 156
    fcall       go to state 53
    expression  go to state 109
    lval        go to state 56


State 145

   50 fcall: IDENTIFIER '(' param ')' .

    $default  reduce using rule 50 (fcall)


State 146

   92 lval: lval '[' expression ']' .

    $default  reduce using rule 92 (lval)


State 147

   20 bp: INT '[' CONST . ']'

    ']'  shift, and go to state 157


State 148

   18 bp: INT '[' ']' .

    $default  reduce using rule 18 (bp)


State 149

   21 bp: BYTE '[' CONST . ']'

    ']'  shift, and go to state 158


State 150

   19 bp: BYTE '[' ']' .

    $default  reduce using rule 19 (bp)


State 151

   11 optparam: idlist AS ftype ',' optparam .

    $default  reduce using rule 11 (optparam)


State 152

   12 optparam: idlist AS reftype ',' optparam .

    $default  reduce using rule 12 (optparam)


State 153

   22 bp: bp '[' CONST . ']'

    ']'  shift, and go to state 159


State 154

   56 mif: IF condition ':' stmt_list END . ELSE ':' stmt_list END
   57    | IF condition ':' stmt_list END . ELIF condition ':' stmt_list END eliftstmt
   58    | IF condition ':' stmt_list END .

    ELSE  shift, and go to state 160
    ELIF  shift, and go to state 161

    $default  reduce using rule 58 (mif)


State 155

   54 loop: LOOP IDENTIFIER ':' stmt_list END .

    $default  reduce using rule 54 (loop)


State 156

   36 param: expression ',' param .

    $default  reduce using rule 36 (param)


State 157

   20 bp: INT '[' CONST ']' .

    $default  reduce using rule 20 (bp)


State 158

   21 bp: BYTE '[' CONST ']' .

    $default  reduce using rule 21 (bp)


State 159

   22 bp: bp '[' CONST ']' .

    $default  reduce using rule 22 (bp)


State 160

   56 mif: IF condition ':' stmt_list END ELSE . ':' stmt_list END

    ':'  shift, and go to state 162


State 161

   57 mif: IF condition ':' stmt_list END ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 43
    TRUE           shift, and go to state 44
    FALSE          shift, and go to state 45
    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    '!'            shift, and go to state 52

    fcall       go to state 53
    condition   go to state 163
    expression  go to state 55
    lval        go to state 56


State 162

   56 mif: IF condition ':' stmt_list END ELSE ':' . stmt_list END

    IF             shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    STRINGLITERAL  shift, and go to state 27

    stmt_list  go to state 164
    pc         go to state 33
    stmt       go to state 34
    fcall      go to state 35
    loop       go to state 36
    mif        go to state 37
    lval       go to state 38


State 163

   57 mif: IF condition ':' stmt_list END ELIF condition . ':' stmt_list END eliftstmt
   67 condition: condition . AND condition
   68          | condition . OR condition

    AND  shift, and go to state 86
    OR   shift, and go to state 87
    ':'  shift, and go to state 165


State 164

   56 mif: IF condition ':' stmt_list END ELSE ':' stmt_list . END

    END  shift, and go to state 166


State 165

   57 mif: IF condition ':' stmt_list END ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    STRINGLITERAL  shift, and go to state 27

    stmt_list  go to state 167
    pc         go to state 33
    stmt       go to state 34
    fcall      go to state 35
    loop       go to state 36
    mif        go to state 37
    lval       go to state 38


State 166

   56 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END .

    $default  reduce using rule 56 (mif)


State 167

   57 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list . END eliftstmt

    END  shift, and go to state 168


State 168

   57 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 169
    ELIF  shift, and go to state 170

    $default  reduce using rule 73 (eliftstmt)

    eliftstmt  go to state 171


State 169

   72 eliftstmt: ELSE . ':' stmt_list END

    ':'  shift, and go to state 172


State 170

   74 eliftstmt: ELIF . condition ':' stmt_list END eliftstmt

    NOT            shift, and go to state 43
    TRUE           shift, and go to state 44
    FALSE          shift, and go to state 45
    CONST          shift, and go to state 46
    CHAR_CONST     shift, and go to state 47
    IDENTIFIER     shift, and go to state 48
    STRINGLITERAL  shift, and go to state 27
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    '!'            shift, and go to state 52

    fcall       go to state 53
    condition   go to state 173
    expression  go to state 55
    lval        go to state 56


State 171

   57 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 57 (mif)


State 172

   72 eliftstmt: ELSE ':' . stmt_list END

    IF             shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    STRINGLITERAL  shift, and go to state 27

    stmt_list  go to state 174
    pc         go to state 33
    stmt       go to state 34
    fcall      go to state 35
    loop       go to state 36
    mif        go to state 37
    lval       go to state 38


State 173

   67 condition: condition . AND condition
   68          | condition . OR condition
   74 eliftstmt: ELIF condition . ':' stmt_list END eliftstmt

    AND  shift, and go to state 86
    OR   shift, and go to state 87
    ':'  shift, and go to state 175


State 174

   72 eliftstmt: ELSE ':' stmt_list . END

    END  shift, and go to state 176


State 175

   74 eliftstmt: ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 17
    LOOP           shift, and go to state 18
    SKIP           shift, and go to state 19
    RETURN         shift, and go to state 22
    EXIT           shift, and go to state 23
    BREAK          shift, and go to state 24
    CONT           shift, and go to state 25
    IDENTIFIER     shift, and go to state 26
    STRINGLITERAL  shift, and go to state 27

    stmt_list  go to state 177
    pc         go to state 33
    stmt       go to state 34
    fcall      go to state 35
    loop       go to state 36
    mif        go to state 37
    lval       go to state 38


State 176

   72 eliftstmt: ELSE ':' stmt_list END .

    $default  reduce using rule 72 (eliftstmt)


State 177

   74 eliftstmt: ELIF condition ':' stmt_list . END eliftstmt

    END  shift, and go to state 178


State 178

   74 eliftstmt: ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 169
    ELIF  shift, and go to state 170

    $default  reduce using rule 73 (eliftstmt)

    eliftstmt  go to state 179


State 179

   74 eliftstmt: ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 74 (eliftstmt)
