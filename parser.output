Terminals unused in grammar

   TEOF
   BEG


State 71 conflicts: 1 shift/reduce


Grammar

    0 $accept: main $end

    1 main: fdef

    2 fdef: DEF header stmt_list END

    3 fdecl: DECL header

    4 header: IDENTIFIER opt
    5       | IDENTIFIER ':' optparam
    6       | IDENTIFIER

    7 opt: IS type ':' optparam
    8    | IS type

    9 optparam: idlist AS ftype
   10         | idlist AS ftype ',' optparam

   11 ftype: REF INT
   12      | REF BYTE
   13      | bp
   14      | INT
   15      | BYTE

   16 bp: INT '[' ']'
   17   | BYTE '[' ']'
   18   | INT '[' CONST ']'
   19   | BYTE '[' CONST ']'
   20   | bp '[' CONST ']'

   21 stmt_list: stmt
   22          | stmt_list stmt

   23 lval: IDENTIFIER
   24     | STRINGLITERAL
   25     | lval '[' expression ']'

   26 type: INT
   27     | BYTE
   28     | type '[' CONST ']'

   29 pc: IDENTIFIER ':' param
   30   | IDENTIFIER

   31 param: expression ',' param
   32      | expression

   33 stmt: SKIP
   34     | pc
   35     | mif
   36     | fdef
   37     | loop
   38     | lval ASSIGNMENT expression
   39     | VAR idlist IS type
   40     | BREAK
   41     | BREAK ':' IDENTIFIER
   42     | CONT
   43     | CONT ':' IDENTIFIER
   44     | fdecl
   45     | EXIT
   46     | RETURN ':' expression
   47     | fcall

   48 fcall: IDENTIFIER '(' param ')'
   49      | IDENTIFIER '(' ')'

   50 idlist: IDENTIFIER
   51       | IDENTIFIER idlist

   52 loop: LOOP IDENTIFIER ':' stmt_list END
   53     | LOOP ':' stmt_list END

   54 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END
   55    | IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   56    | IF condition ':' stmt_list END

   57 condition: expression LARGER expression
   58          | expression SMALLER expression
   59          | expression LARGEREQ expression
   60          | expression SMALLEREQ expression
   61          | expression EQ expression
   62          | expression DIFF expression
   63          | TRUE
   64          | FALSE
   65          | condition AND condition
   66          | condition OR condition
   67          | NOT condition
   68          | '(' condition ')'
   69          | expression

   70 eliftstmt: ELSE ':' stmt_list END
   71          | ELIF condition ':' stmt_list END eliftstmt

   72 expression: expression '+' expression
   73           | expression '-' expression
   74           | expression '*' expression
   75           | expression '/' expression
   76           | expression '&' expression
   77           | expression '|' expression
   78           | '+' expression
   79           | '-' expression
   80           | '!' expression
   81           | IDENTIFIER
   82           | STRINGLITERAL
   83           | CONST
   84           | '(' expression ')'
   85           | fcall


Terminals, with rules where they appear

$end (0) 0
'!' (33) 80
'&' (38) 76
'(' (40) 48 49 68 84
')' (41) 48 49 68 84
'*' (42) 74
'+' (43) 72 78
',' (44) 10 31
'-' (45) 73 79
'/' (47) 75
':' (58) 5 7 29 41 43 46 52 53 54 55 56 70 71
'[' (91) 16 17 18 19 20 25 28
']' (93) 16 17 18 19 20 25 28
'|' (124) 77
error (256)
INT (258) 11 14 16 18 26
BYTE (259) 12 15 17 19 27
IF (260) 54 55 56
ELSE (261) 54 70
STRINGLITERAL (262) 24 82
LOOP (263) 52 53
AS (264) 9 10
SKIP (265) 33
DECL (266) 3
DEF (267) 2
END (268) 2 52 53 54 55 56 70 71
VAR (269) 39
IS (270) 7 8 39
TEOF (271)
EQ (272) 61
DIFF (273) 62
LARGER (274) 57
SMALLER (275) 58
RETURN (276) 46
EXIT (277) 45
REF (278) 11 12
LARGEREQ (279) 59
SMALLEREQ (280) 60
ASSIGNMENT (281) 38
AND (282) 65
NOT (283) 67
OR (284) 66
ELIF (285) 55 71
TRUE (286) 63
FALSE (287) 64
BREAK (288) 40 41
CONT (289) 42 43
BEG (290)
CONST (291) 18 19 20 28 83
IDENTIFIER (292) 4 5 6 23 29 30 41 43 48 49 50 51 52 81
UNARYPL (293)
UNARYMINUS (294)
BANGBANG (295)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
main (55)
    on left: 1, on right: 0
fdef (56)
    on left: 2, on right: 1 36
fdecl (57)
    on left: 3, on right: 44
header (58)
    on left: 4 5 6, on right: 2 3
opt (59)
    on left: 7 8, on right: 4
optparam (60)
    on left: 9 10, on right: 5 7 10
ftype (61)
    on left: 11 12 13 14 15, on right: 9 10
bp (62)
    on left: 16 17 18 19 20, on right: 13 20
stmt_list (63)
    on left: 21 22, on right: 2 22 52 53 54 55 56 70 71
lval (64)
    on left: 23 24 25, on right: 25 38
type (65)
    on left: 26 27 28, on right: 7 8 28 39
pc (66)
    on left: 29 30, on right: 34
param (67)
    on left: 31 32, on right: 29 31 48
stmt (68)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47, on right:
    21 22
fcall (69)
    on left: 48 49, on right: 47 85
idlist (70)
    on left: 50 51, on right: 9 10 39 51
loop (71)
    on left: 52 53, on right: 37
mif (72)
    on left: 54 55 56, on right: 35
condition (73)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69, on right: 54 55
    56 65 66 67 68 71
eliftstmt (74)
    on left: 70 71, on right: 55 71
expression (75)
    on left: 72 73 74 75 76 77 78 79 80 81 82 83 84 85, on right: 25
    31 32 38 46 57 58 59 60 61 62 69 72 73 74 75 76 77 78 79 80 84


State 0

    0 $accept: . main $end

    DEF  shift, and go to state 1

    main  go to state 2
    fdef  go to state 3


State 1

    2 fdef: DEF . header stmt_list END

    IDENTIFIER  shift, and go to state 4

    header  go to state 5


State 2

    0 $accept: main . $end

    $end  shift, and go to state 6


State 3

    1 main: fdef .

    $default  reduce using rule 1 (main)


State 4

    4 header: IDENTIFIER . opt
    5       | IDENTIFIER . ':' optparam
    6       | IDENTIFIER .

    IS   shift, and go to state 7
    ':'  shift, and go to state 8

    $default  reduce using rule 6 (header)

    opt  go to state 9


State 5

    2 fdef: DEF header . stmt_list END

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 23
    lval       go to state 24
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29


State 6

    0 $accept: main $end .

    $default  accept


State 7

    7 opt: IS . type ':' optparam
    8    | IS . type

    INT   shift, and go to state 30
    BYTE  shift, and go to state 31

    type  go to state 32


State 8

    5 header: IDENTIFIER ':' . optparam

    IDENTIFIER  shift, and go to state 33

    optparam  go to state 34
    idlist    go to state 35


State 9

    4 header: IDENTIFIER opt .

    $default  reduce using rule 4 (header)


State 10

   54 mif: IF . condition ':' stmt_list END ELSE ':' stmt_list END
   55    | IF . condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   56    | IF . condition ':' stmt_list END

    STRINGLITERAL  shift, and go to state 36
    NOT            shift, and go to state 37
    TRUE           shift, and go to state 38
    FALSE          shift, and go to state 39
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 47
    expression  go to state 48


State 11

   24 lval: STRINGLITERAL .

    $default  reduce using rule 24 (lval)


State 12

   52 loop: LOOP . IDENTIFIER ':' stmt_list END
   53     | LOOP . ':' stmt_list END

    IDENTIFIER  shift, and go to state 49
    ':'         shift, and go to state 50


State 13

   33 stmt: SKIP .

    $default  reduce using rule 33 (stmt)


State 14

    3 fdecl: DECL . header

    IDENTIFIER  shift, and go to state 4

    header  go to state 51


State 15

   39 stmt: VAR . idlist IS type

    IDENTIFIER  shift, and go to state 33

    idlist  go to state 52


State 16

   46 stmt: RETURN . ':' expression

    ':'  shift, and go to state 53


State 17

   45 stmt: EXIT .

    $default  reduce using rule 45 (stmt)


State 18

   40 stmt: BREAK .
   41     | BREAK . ':' IDENTIFIER

    ':'  shift, and go to state 54

    $default  reduce using rule 40 (stmt)


State 19

   42 stmt: CONT .
   43     | CONT . ':' IDENTIFIER

    ':'  shift, and go to state 55

    $default  reduce using rule 42 (stmt)


State 20

   23 lval: IDENTIFIER .
   29 pc: IDENTIFIER . ':' param
   30   | IDENTIFIER .
   48 fcall: IDENTIFIER . '(' param ')'
   49      | IDENTIFIER . '(' ')'

    ':'  shift, and go to state 56
    '('  shift, and go to state 57

    ASSIGNMENT  reduce using rule 23 (lval)
    '['         reduce using rule 23 (lval)
    $default    reduce using rule 30 (pc)


State 21

   36 stmt: fdef .

    $default  reduce using rule 36 (stmt)


State 22

   44 stmt: fdecl .

    $default  reduce using rule 44 (stmt)


State 23

    2 fdef: DEF header stmt_list . END
   22 stmt_list: stmt_list . stmt

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 58
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    lval   go to state 24
    pc     go to state 25
    stmt   go to state 59
    fcall  go to state 27
    loop   go to state 28
    mif    go to state 29


State 24

   25 lval: lval . '[' expression ']'
   38 stmt: lval . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 60
    '['         shift, and go to state 61


State 25

   34 stmt: pc .

    $default  reduce using rule 34 (stmt)


State 26

   21 stmt_list: stmt .

    $default  reduce using rule 21 (stmt_list)


State 27

   47 stmt: fcall .

    $default  reduce using rule 47 (stmt)


State 28

   37 stmt: loop .

    $default  reduce using rule 37 (stmt)


State 29

   35 stmt: mif .

    $default  reduce using rule 35 (stmt)


State 30

   26 type: INT .

    $default  reduce using rule 26 (type)


State 31

   27 type: BYTE .

    $default  reduce using rule 27 (type)


State 32

    7 opt: IS type . ':' optparam
    8    | IS type .
   28 type: type . '[' CONST ']'

    ':'  shift, and go to state 62
    '['  shift, and go to state 63

    $default  reduce using rule 8 (opt)


State 33

   50 idlist: IDENTIFIER .
   51       | IDENTIFIER . idlist

    IDENTIFIER  shift, and go to state 33

    $default  reduce using rule 50 (idlist)

    idlist  go to state 64


State 34

    5 header: IDENTIFIER ':' optparam .

    $default  reduce using rule 5 (header)


State 35

    9 optparam: idlist . AS ftype
   10         | idlist . AS ftype ',' optparam

    AS  shift, and go to state 65


State 36

   82 expression: STRINGLITERAL .

    $default  reduce using rule 82 (expression)


State 37

   67 condition: NOT . condition

    STRINGLITERAL  shift, and go to state 36
    NOT            shift, and go to state 37
    TRUE           shift, and go to state 38
    FALSE          shift, and go to state 39
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 66
    expression  go to state 48


State 38

   63 condition: TRUE .

    $default  reduce using rule 63 (condition)


State 39

   64 condition: FALSE .

    $default  reduce using rule 64 (condition)


State 40

   83 expression: CONST .

    $default  reduce using rule 83 (expression)


State 41

   48 fcall: IDENTIFIER . '(' param ')'
   49      | IDENTIFIER . '(' ')'
   81 expression: IDENTIFIER .

    '('  shift, and go to state 57

    $default  reduce using rule 81 (expression)


State 42

   78 expression: '+' . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 68


State 43

   79 expression: '-' . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 69


State 44

   68 condition: '(' . condition ')'
   84 expression: '(' . expression ')'

    STRINGLITERAL  shift, and go to state 36
    NOT            shift, and go to state 37
    TRUE           shift, and go to state 38
    FALSE          shift, and go to state 39
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 70
    expression  go to state 71


State 45

   80 expression: '!' . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 72


State 46

   85 expression: fcall .

    $default  reduce using rule 85 (expression)


State 47

   54 mif: IF condition . ':' stmt_list END ELSE ':' stmt_list END
   55    | IF condition . ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt
   56    | IF condition . ':' stmt_list END
   65 condition: condition . AND condition
   66          | condition . OR condition

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ':'  shift, and go to state 75


State 48

   57 condition: expression . LARGER expression
   58          | expression . SMALLER expression
   59          | expression . LARGEREQ expression
   60          | expression . SMALLEREQ expression
   61          | expression . EQ expression
   62          | expression . DIFF expression
   69          | expression .
   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression

    EQ         shift, and go to state 76
    DIFF       shift, and go to state 77
    LARGER     shift, and go to state 78
    SMALLER    shift, and go to state 79
    LARGEREQ   shift, and go to state 80
    SMALLEREQ  shift, and go to state 81
    '+'        shift, and go to state 82
    '-'        shift, and go to state 83
    '|'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '&'        shift, and go to state 87

    $default  reduce using rule 69 (condition)


State 49

   52 loop: LOOP IDENTIFIER . ':' stmt_list END

    ':'  shift, and go to state 88


State 50

   53 loop: LOOP ':' . stmt_list END

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 89
    lval       go to state 24
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29


State 51

    3 fdecl: DECL header .

    $default  reduce using rule 3 (fdecl)


State 52

   39 stmt: VAR idlist . IS type

    IS  shift, and go to state 90


State 53

   46 stmt: RETURN ':' . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 91


State 54

   41 stmt: BREAK ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 92


State 55

   43 stmt: CONT ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 93


State 56

   29 pc: IDENTIFIER ':' . param

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    param       go to state 94
    fcall       go to state 46
    expression  go to state 95


State 57

   48 fcall: IDENTIFIER '(' . param ')'
   49      | IDENTIFIER '(' . ')'

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    ')'            shift, and go to state 96
    '!'            shift, and go to state 45

    param       go to state 97
    fcall       go to state 46
    expression  go to state 95


State 58

    2 fdef: DEF header stmt_list END .

    $default  reduce using rule 2 (fdef)


State 59

   22 stmt_list: stmt_list stmt .

    $default  reduce using rule 22 (stmt_list)


State 60

   38 stmt: lval ASSIGNMENT . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 98


State 61

   25 lval: lval '[' . expression ']'

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 99


State 62

    7 opt: IS type ':' . optparam

    IDENTIFIER  shift, and go to state 33

    optparam  go to state 100
    idlist    go to state 35


State 63

   28 type: type '[' . CONST ']'

    CONST  shift, and go to state 101


State 64

   51 idlist: IDENTIFIER idlist .

    $default  reduce using rule 51 (idlist)


State 65

    9 optparam: idlist AS . ftype
   10         | idlist AS . ftype ',' optparam

    INT   shift, and go to state 102
    BYTE  shift, and go to state 103
    REF   shift, and go to state 104

    ftype  go to state 105
    bp     go to state 106


State 66

   65 condition: condition . AND condition
   66          | condition . OR condition
   67          | NOT condition .

    $default  reduce using rule 67 (condition)


State 67

   84 expression: '(' . expression ')'

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 107


State 68

   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression
   78           | '+' expression .

    $default  reduce using rule 78 (expression)


State 69

   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression
   79           | '-' expression .

    $default  reduce using rule 79 (expression)


State 70

   65 condition: condition . AND condition
   66          | condition . OR condition
   68          | '(' condition . ')'

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ')'  shift, and go to state 108


State 71

   57 condition: expression . LARGER expression
   58          | expression . SMALLER expression
   59          | expression . LARGEREQ expression
   60          | expression . SMALLEREQ expression
   61          | expression . EQ expression
   62          | expression . DIFF expression
   69          | expression .
   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression
   84           | '(' expression . ')'

    EQ         shift, and go to state 76
    DIFF       shift, and go to state 77
    LARGER     shift, and go to state 78
    SMALLER    shift, and go to state 79
    LARGEREQ   shift, and go to state 80
    SMALLEREQ  shift, and go to state 81
    '+'        shift, and go to state 82
    '-'        shift, and go to state 83
    '|'        shift, and go to state 84
    '*'        shift, and go to state 85
    '/'        shift, and go to state 86
    '&'        shift, and go to state 87
    ')'        shift, and go to state 109

    ')'       [reduce using rule 69 (condition)]
    $default  reduce using rule 69 (condition)


State 72

   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression
   80           | '!' expression .

    $default  reduce using rule 80 (expression)


State 73

   65 condition: condition AND . condition

    STRINGLITERAL  shift, and go to state 36
    NOT            shift, and go to state 37
    TRUE           shift, and go to state 38
    FALSE          shift, and go to state 39
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 110
    expression  go to state 48


State 74

   66 condition: condition OR . condition

    STRINGLITERAL  shift, and go to state 36
    NOT            shift, and go to state 37
    TRUE           shift, and go to state 38
    FALSE          shift, and go to state 39
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 111
    expression  go to state 48


State 75

   54 mif: IF condition ':' . stmt_list END ELSE ':' stmt_list END
   55    | IF condition ':' . stmt_list END ELIF condition ':' stmt_list END eliftstmt
   56    | IF condition ':' . stmt_list END

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 112
    lval       go to state 24
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29


State 76

   61 condition: expression EQ . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 113


State 77

   62 condition: expression DIFF . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 114


State 78

   57 condition: expression LARGER . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 115


State 79

   58 condition: expression SMALLER . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 116


State 80

   59 condition: expression LARGEREQ . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 117


State 81

   60 condition: expression SMALLEREQ . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 118


State 82

   72 expression: expression '+' . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 119


State 83

   73 expression: expression '-' . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 120


State 84

   77 expression: expression '|' . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 121


State 85

   74 expression: expression '*' . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 122


State 86

   75 expression: expression '/' . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 123


State 87

   76 expression: expression '&' . expression

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    fcall       go to state 46
    expression  go to state 124


State 88

   52 loop: LOOP IDENTIFIER ':' . stmt_list END

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 125
    lval       go to state 24
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29


State 89

   22 stmt_list: stmt_list . stmt
   53 loop: LOOP ':' stmt_list . END

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 126
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    lval   go to state 24
    pc     go to state 25
    stmt   go to state 59
    fcall  go to state 27
    loop   go to state 28
    mif    go to state 29


State 90

   39 stmt: VAR idlist IS . type

    INT   shift, and go to state 30
    BYTE  shift, and go to state 31

    type  go to state 127


State 91

   46 stmt: RETURN ':' expression .
   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 46 (stmt)


State 92

   41 stmt: BREAK ':' IDENTIFIER .

    $default  reduce using rule 41 (stmt)


State 93

   43 stmt: CONT ':' IDENTIFIER .

    $default  reduce using rule 43 (stmt)


State 94

   29 pc: IDENTIFIER ':' param .

    $default  reduce using rule 29 (pc)


State 95

   31 param: expression . ',' param
   32      | expression .
   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87
    ','  shift, and go to state 128

    $default  reduce using rule 32 (param)


State 96

   49 fcall: IDENTIFIER '(' ')' .

    $default  reduce using rule 49 (fcall)


State 97

   48 fcall: IDENTIFIER '(' param . ')'

    ')'  shift, and go to state 129


State 98

   38 stmt: lval ASSIGNMENT expression .
   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 38 (stmt)


State 99

   25 lval: lval '[' expression . ']'
   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87
    ']'  shift, and go to state 130


State 100

    7 opt: IS type ':' optparam .

    $default  reduce using rule 7 (opt)


State 101

   28 type: type '[' CONST . ']'

    ']'  shift, and go to state 131


State 102

   14 ftype: INT .
   16 bp: INT . '[' ']'
   18   | INT . '[' CONST ']'

    '['  shift, and go to state 132

    $default  reduce using rule 14 (ftype)


State 103

   15 ftype: BYTE .
   17 bp: BYTE . '[' ']'
   19   | BYTE . '[' CONST ']'

    '['  shift, and go to state 133

    $default  reduce using rule 15 (ftype)


State 104

   11 ftype: REF . INT
   12      | REF . BYTE

    INT   shift, and go to state 134
    BYTE  shift, and go to state 135


State 105

    9 optparam: idlist AS ftype .
   10         | idlist AS ftype . ',' optparam

    ','  shift, and go to state 136

    $default  reduce using rule 9 (optparam)


State 106

   13 ftype: bp .
   20 bp: bp . '[' CONST ']'

    '['  shift, and go to state 137

    $default  reduce using rule 13 (ftype)


State 107

   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression
   84           | '(' expression . ')'

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87
    ')'  shift, and go to state 109


State 108

   68 condition: '(' condition ')' .

    $default  reduce using rule 68 (condition)


State 109

   84 expression: '(' expression ')' .

    $default  reduce using rule 84 (expression)


State 110

   65 condition: condition . AND condition
   65          | condition AND condition .
   66          | condition . OR condition

    $default  reduce using rule 65 (condition)


State 111

   65 condition: condition . AND condition
   66          | condition . OR condition
   66          | condition OR condition .

    AND  shift, and go to state 73

    $default  reduce using rule 66 (condition)


State 112

   22 stmt_list: stmt_list . stmt
   54 mif: IF condition ':' stmt_list . END ELSE ':' stmt_list END
   55    | IF condition ':' stmt_list . END ELIF condition ':' stmt_list END eliftstmt
   56    | IF condition ':' stmt_list . END

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 138
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    lval   go to state 24
    pc     go to state 25
    stmt   go to state 59
    fcall  go to state 27
    loop   go to state 28
    mif    go to state 29


State 113

   61 condition: expression EQ expression .
   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 61 (condition)


State 114

   62 condition: expression DIFF expression .
   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 62 (condition)


State 115

   57 condition: expression LARGER expression .
   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 57 (condition)


State 116

   58 condition: expression SMALLER expression .
   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 58 (condition)


State 117

   59 condition: expression LARGEREQ expression .
   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 59 (condition)


State 118

   60 condition: expression SMALLEREQ expression .
   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '|'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 60 (condition)


State 119

   72 expression: expression . '+' expression
   72           | expression '+' expression .
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 72 (expression)


State 120

   72 expression: expression . '+' expression
   73           | expression . '-' expression
   73           | expression '-' expression .
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 73 (expression)


State 121

   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression
   77           | expression '|' expression .

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '&'  shift, and go to state 87

    $default  reduce using rule 77 (expression)


State 122

   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   74           | expression '*' expression .
   75           | expression . '/' expression
   76           | expression . '&' expression
   77           | expression . '|' expression

    $default  reduce using rule 74 (expression)


State 123

   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   75           | expression '/' expression .
   76           | expression . '&' expression
   77           | expression . '|' expression

    $default  reduce using rule 75 (expression)


State 124

   72 expression: expression . '+' expression
   73           | expression . '-' expression
   74           | expression . '*' expression
   75           | expression . '/' expression
   76           | expression . '&' expression
   76           | expression '&' expression .
   77           | expression . '|' expression

    $default  reduce using rule 76 (expression)


State 125

   22 stmt_list: stmt_list . stmt
   52 loop: LOOP IDENTIFIER ':' stmt_list . END

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 139
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    lval   go to state 24
    pc     go to state 25
    stmt   go to state 59
    fcall  go to state 27
    loop   go to state 28
    mif    go to state 29


State 126

   53 loop: LOOP ':' stmt_list END .

    $default  reduce using rule 53 (loop)


State 127

   28 type: type . '[' CONST ']'
   39 stmt: VAR idlist IS type .

    '['  shift, and go to state 63

    $default  reduce using rule 39 (stmt)


State 128

   31 param: expression ',' . param

    STRINGLITERAL  shift, and go to state 36
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 67
    '!'            shift, and go to state 45

    param       go to state 140
    fcall       go to state 46
    expression  go to state 95


State 129

   48 fcall: IDENTIFIER '(' param ')' .

    $default  reduce using rule 48 (fcall)


State 130

   25 lval: lval '[' expression ']' .

    $default  reduce using rule 25 (lval)


State 131

   28 type: type '[' CONST ']' .

    $default  reduce using rule 28 (type)


State 132

   16 bp: INT '[' . ']'
   18   | INT '[' . CONST ']'

    CONST  shift, and go to state 141
    ']'    shift, and go to state 142


State 133

   17 bp: BYTE '[' . ']'
   19   | BYTE '[' . CONST ']'

    CONST  shift, and go to state 143
    ']'    shift, and go to state 144


State 134

   11 ftype: REF INT .

    $default  reduce using rule 11 (ftype)


State 135

   12 ftype: REF BYTE .

    $default  reduce using rule 12 (ftype)


State 136

   10 optparam: idlist AS ftype ',' . optparam

    IDENTIFIER  shift, and go to state 33

    optparam  go to state 145
    idlist    go to state 35


State 137

   20 bp: bp '[' . CONST ']'

    CONST  shift, and go to state 146


State 138

   54 mif: IF condition ':' stmt_list END . ELSE ':' stmt_list END
   55    | IF condition ':' stmt_list END . ELIF condition ':' stmt_list END eliftstmt
   56    | IF condition ':' stmt_list END .

    ELSE  shift, and go to state 147
    ELIF  shift, and go to state 148

    $default  reduce using rule 56 (mif)


State 139

   52 loop: LOOP IDENTIFIER ':' stmt_list END .

    $default  reduce using rule 52 (loop)


State 140

   31 param: expression ',' param .

    $default  reduce using rule 31 (param)


State 141

   18 bp: INT '[' CONST . ']'

    ']'  shift, and go to state 149


State 142

   16 bp: INT '[' ']' .

    $default  reduce using rule 16 (bp)


State 143

   19 bp: BYTE '[' CONST . ']'

    ']'  shift, and go to state 150


State 144

   17 bp: BYTE '[' ']' .

    $default  reduce using rule 17 (bp)


State 145

   10 optparam: idlist AS ftype ',' optparam .

    $default  reduce using rule 10 (optparam)


State 146

   20 bp: bp '[' CONST . ']'

    ']'  shift, and go to state 151


State 147

   54 mif: IF condition ':' stmt_list END ELSE . ':' stmt_list END

    ':'  shift, and go to state 152


State 148

   55 mif: IF condition ':' stmt_list END ELIF . condition ':' stmt_list END eliftstmt

    STRINGLITERAL  shift, and go to state 36
    NOT            shift, and go to state 37
    TRUE           shift, and go to state 38
    FALSE          shift, and go to state 39
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 153
    expression  go to state 48


State 149

   18 bp: INT '[' CONST ']' .

    $default  reduce using rule 18 (bp)


State 150

   19 bp: BYTE '[' CONST ']' .

    $default  reduce using rule 19 (bp)


State 151

   20 bp: bp '[' CONST ']' .

    $default  reduce using rule 20 (bp)


State 152

   54 mif: IF condition ':' stmt_list END ELSE ':' . stmt_list END

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 154
    lval       go to state 24
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29


State 153

   55 mif: IF condition ':' stmt_list END ELIF condition . ':' stmt_list END eliftstmt
   65 condition: condition . AND condition
   66          | condition . OR condition

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ':'  shift, and go to state 155


State 154

   22 stmt_list: stmt_list . stmt
   54 mif: IF condition ':' stmt_list END ELSE ':' stmt_list . END

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 156
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    lval   go to state 24
    pc     go to state 25
    stmt   go to state 59
    fcall  go to state 27
    loop   go to state 28
    mif    go to state 29


State 155

   55 mif: IF condition ':' stmt_list END ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 157
    lval       go to state 24
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29


State 156

   54 mif: IF condition ':' stmt_list END ELSE ':' stmt_list END .

    $default  reduce using rule 54 (mif)


State 157

   22 stmt_list: stmt_list . stmt
   55 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list . END eliftstmt

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 158
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    lval   go to state 24
    pc     go to state 25
    stmt   go to state 59
    fcall  go to state 27
    loop   go to state 28
    mif    go to state 29


State 158

   55 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 159
    ELIF  shift, and go to state 160

    eliftstmt  go to state 161


State 159

   70 eliftstmt: ELSE . ':' stmt_list END

    ':'  shift, and go to state 162


State 160

   71 eliftstmt: ELIF . condition ':' stmt_list END eliftstmt

    STRINGLITERAL  shift, and go to state 36
    NOT            shift, and go to state 37
    TRUE           shift, and go to state 38
    FALSE          shift, and go to state 39
    CONST          shift, and go to state 40
    IDENTIFIER     shift, and go to state 41
    '+'            shift, and go to state 42
    '-'            shift, and go to state 43
    '('            shift, and go to state 44
    '!'            shift, and go to state 45

    fcall       go to state 46
    condition   go to state 163
    expression  go to state 48


State 161

   55 mif: IF condition ':' stmt_list END ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 55 (mif)


State 162

   70 eliftstmt: ELSE ':' . stmt_list END

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 164
    lval       go to state 24
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29


State 163

   65 condition: condition . AND condition
   66          | condition . OR condition
   71 eliftstmt: ELIF condition . ':' stmt_list END eliftstmt

    AND  shift, and go to state 73
    OR   shift, and go to state 74
    ':'  shift, and go to state 165


State 164

   22 stmt_list: stmt_list . stmt
   70 eliftstmt: ELSE ':' stmt_list . END

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 166
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    lval   go to state 24
    pc     go to state 25
    stmt   go to state 59
    fcall  go to state 27
    loop   go to state 28
    mif    go to state 29


State 165

   71 eliftstmt: ELIF condition ':' . stmt_list END eliftstmt

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef       go to state 21
    fdecl      go to state 22
    stmt_list  go to state 167
    lval       go to state 24
    pc         go to state 25
    stmt       go to state 26
    fcall      go to state 27
    loop       go to state 28
    mif        go to state 29


State 166

   70 eliftstmt: ELSE ':' stmt_list END .

    $default  reduce using rule 70 (eliftstmt)


State 167

   22 stmt_list: stmt_list . stmt
   71 eliftstmt: ELIF condition ':' stmt_list . END eliftstmt

    IF             shift, and go to state 10
    STRINGLITERAL  shift, and go to state 11
    LOOP           shift, and go to state 12
    SKIP           shift, and go to state 13
    DECL           shift, and go to state 14
    DEF            shift, and go to state 1
    END            shift, and go to state 168
    VAR            shift, and go to state 15
    RETURN         shift, and go to state 16
    EXIT           shift, and go to state 17
    BREAK          shift, and go to state 18
    CONT           shift, and go to state 19
    IDENTIFIER     shift, and go to state 20

    fdef   go to state 21
    fdecl  go to state 22
    lval   go to state 24
    pc     go to state 25
    stmt   go to state 59
    fcall  go to state 27
    loop   go to state 28
    mif    go to state 29


State 168

   71 eliftstmt: ELIF condition ':' stmt_list END . eliftstmt

    ELSE  shift, and go to state 159
    ELIF  shift, and go to state 160

    eliftstmt  go to state 169


State 169

   71 eliftstmt: ELIF condition ':' stmt_list END eliftstmt .

    $default  reduce using rule 71 (eliftstmt)
